oÚM2™J,$ı#¿çƒgÁ†"ü≈}ˇXtl9WÚ$%HTTP/2.0 200 OK
Content-Length: 316465
Accept-Ranges: bytes
Audit-Id: 5175324f-338c-41bb-950a-2ca23190ab58
Cache-Control: public, immutable
Content-Type: application/json
Date: Tue, 08 Aug 2023 07:44:34 GMT
Etag: "81745ECE81D72D71851E43DDAB6EB18603D414755E3FCC4DBBCC7FA6BA4A8FE98316DC3A2CC92B75B98E5813CB47997CBE654CFCF4C00F5F3CB06AD722C7D1EF"
Expires: Thu, 08 Aug 2024 07:44:34 UTC
Last-Modified: Tue, 08 Aug 2023 04:09:19 GMT
Vary: Accept
X-Kubernetes-Pf-Flowschema-Uid: 499090c7-f609-4794-a535-f71628312ce1
X-Kubernetes-Pf-Prioritylevel-Uid: df3d59bd-c9b6-4324-9328-71dc0804503b
X-Varied-Accept: application/json

{"openapi":"3.0.0","info":{"title":"Kubernetes CRD Swagger","version":"v0.1.0"},"paths":{"/apis/mongodb.com/v1/mongodb":{"get":{"tags":["mongodbCom_v1"],"description":"list objects of kind MongoDB","operationId":"listMongodbComV1MongoDBForAllNamespaces","responses":{"200":{"description":"OK","content":{"application/json":{"schema":{"$ref":"#/components/schemas/com.mongodb.v1.MongoDBList"}},"application/yaml":{"schema":{"$ref":"#/components/schemas/com.mongodb.v1.MongoDBList"}}}},"401":{"description":"Unauthorized"}},"x-kubernetes-action":"list","x-kubernetes-group-version-kind":{"group":"mongodb.com","version":"v1","kind":"MongoDB"}},"parameters":[{"name":"allowWatchBookmarks","in":"query","description":"allowWatchBookmarks requests watch events with type \"BOOKMARK\". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server's discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored.","schema":{"type":"boolean","uniqueItems":true}},{"name":"continue","in":"query","description":"The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the response, as long as their keys are after the \"next key\".\n\nThis field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications.","schema":{"type":"string","uniqueItems":true}},{"name":"fieldSelector","in":"query","description":"A selector to restrict the list of returned objects by their fields. Defaults to everything.","schema":{"type":"string","uniqueItems":true}},{"name":"labelSelector","in":"query","description":"A selector to restrict the list of returned objects by their labels. Defaults to everything.","schema":{"type":"string","uniqueItems":true}},{"name":"limit","in":"query","description":"limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.","schema":{"type":"integer","uniqueItems":true}},{"name":"pretty","in":"query","description":"If 'true', then the output is pretty printed.","schema":{"type":"string","uniqueItems":true}},{"name":"resourceVersion","in":"query","description":"resourceVersion sets a constraint on what resource versions a request may be served from. See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.\n\nDefaults to unset","schema":{"type":"string","uniqueItems":true}},{"name":"resourceVersionMatch","in":"query","description":"resourceVersionMatch determines how resourceVersion is applied to list calls. It is highly recommended that resourceVersionMatch be set for list calls where resourceVersion is set See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.\n\nDefaults to unset","schema":{"type":"string","uniqueItems":true}},{"name":"sendInitialEvents","in":"query","description":"`sendInitialEvents=true` may be set together with `watch=true`. In that case, the watch stream will begin with synthetic events to produce the current state of objects in the collection. Once all such events have been sent, a synthetic \"Bookmark\" event  will be sent. The bookmark will report the ResourceVersion (RV) corresponding to the set of objects, and be marked with `\"k8s.io/initial-events-end\": \"true\"` annotation. Afterwards, the watch stream will proceed as usual, sending watch events corresponding to changes (subsequent to the RV) to objects watched.\n\nWhen `sendInitialEvents` option is set, we require `resourceVersionMatch` option to also be set. The semantic of the watch request is as following: - `resourceVersionMatch` = NotOlderThan\n  is interpreted as \"data at least as new as the provided `resourceVersion`\"\n  and the bookmark event is send when the state is synced\n  to a `resourceVersion` at least as fresh as the one provided by the ListOptions.\n  If `resourceVersion` is unset, this is interpreted as \"consistent read\" and the\n  bookmark event is send when the state is synced at least to the moment\n  when request started being processed.\n- `resourceVersionMatch` set to any other value or unset\n  Invalid error is returned.\n\nDefaults to true if `resourceVersion=\"\"` or `resourceVersion=\"0\"` (for backward compatibility reasons) and to false otherwise.","schema":{"type":"boolean","uniqueItems":true}},{"name":"timeoutSeconds","in":"query","description":"Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity.","schema":{"type":"integer","uniqueItems":true}},{"name":"watch","in":"query","description":"Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.","schema":{"type":"boolean","uniqueItems":true}}]},"/apis/mongodb.com/v1/mongodbmulti":{"get":{"tags":["mongodbCom_v1"],"description":"list objects of kind MongoDBMulti","operationId":"listMongodbComV1MongoDBMultiForAllNamespaces","responses":{"200":{"description":"OK","content":{"application/json":{"schema":{"$ref":"#/components/schemas/com.mongodb.v1.MongoDBMultiList"}},"application/yaml":{"schema":{"$ref":"#/components/schemas/com.mongodb.v1.MongoDBMultiList"}}}},"401":{"description":"Unauthorized"}},"x-kubernetes-action":"list","x-kubernetes-group-version-kind":{"group":"mongodb.com","version":"v1","kind":"MongoDBMulti"}},"parameters":[{"name":"allowWatchBookmarks","in":"query","description":"allowWatchBookmarks requests watch events with type \"BOOKMARK\". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server's discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored.","schema":{"type":"boolean","uniqueItems":true}},{"name":"continue","in":"query","description":"The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the response, as long as their keys are after the \"next key\".\n\nThis field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications.","schema":{"type":"string","uniqueItems":true}},{"name":"fieldSelector","in":"query","description":"A selector to restrict the list of returned objects by their fields. Defaults to everything.","schema":{"type":"string","uniqueItems":true}},{"name":"labelSelector","in":"query","description":"A selector to restrict the list of returned objects by their labels. Defaults to everything.","schema":{"type":"string","uniqueItems":true}},{"name":"limit","in":"query","description":"limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.","schema":{"type":"integer","uniqueItems":true}},{"name":"pretty","in":"query","description":"If 'true', then the output is pretty printed.","schema":{"type":"string","uniqueItems":true}},{"name":"resourceVersion","in":"query","description":"resourceVersion sets a constraint on what resource versions a request may be served from. See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.\n\nDefaults to unset","schema":{"type":"string","uniqueItems":true}},{"name":"resourceVersionMatch","in":"query","description":"resourceVersionMatch determines how resourceVersion is applied to list calls. It is highly recommended that resourceVersionMatch be set for list calls where resourceVersion is set See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.\n\nDefaults to unset","schema":{"type":"string","uniqueItems":true}},{"name":"sendInitialEvents","in":"query","description":"`sendInitialEvents=true` may be set together with `watch=true`. In that case, the watch stream will begin with synthetic events to produce the current state of objects in the collection. Once all such events have been sent, a synthetic \"Bookmark\" event  will be sent. The bookmark will report the ResourceVersion (RV) corresponding to the set of objects, and be marked with `\"k8s.io/initial-events-end\": \"true\"` annotation. Afterwards, the watch stream will proceed as usual, sending watch events corresponding to changes (subsequent to the RV) to objects watched.\n\nWhen `sendInitialEvents` option is set, we require `resourceVersionMatch` option to also be set. The semantic of the watch request is as following: - `resourceVersionMatch` = NotOlderThan\n  is interpreted as \"data at least as new as the provided `resourceVersion`\"\n  and the bookmark event is send when the state is synced\n  to a `resourceVersion` at least as fresh as the one provided by the ListOptions.\n  If `resourceVersion` is unset, this is interpreted as \"consistent read\" and the\n  bookmark event is send when the state is synced at least to the moment\n  when request started being processed.\n- `resourceVersionMatch` set to any other value or unset\n  Invalid error is returned.\n\nDefaults to true if `resourceVersion=\"\"` or `resourceVersion=\"0\"` (for backward compatibility reasons) and to false otherwise.","schema":{"type":"boolean","uniqueItems":true}},{"name":"timeoutSeconds","in":"query","description":"Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity.","schema":{"type":"integer","uniqueItems":true}},{"name":"watch","in":"query","description":"Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.","schema":{"type":"boolean","uniqueItems":true}}]},"/apis/mongodb.com/v1/mongodbmulticluster":{"get":{"tags":["mongodbCom_v1"],"description":"list objects of kind MongoDBMultiCluster","operationId":"listMongodbComV1MongoDBMultiClusterForAllNamespaces","responses":{"200":{"description":"OK","content":{"application/json":{"schema":{"$ref":"#/components/schemas/com.mongodb.v1.MongoDBMultiClusterList"}},"application/yaml":{"schema":{"$ref":"#/components/schemas/com.mongodb.v1.MongoDBMultiClusterList"}}}},"401":{"description":"Unauthorized"}},"x-kubernetes-action":"list","x-kubernetes-group-version-kind":{"group":"mongodb.com","version":"v1","kind":"MongoDBMultiCluster"}},"parameters":[{"name":"allowWatchBookmarks","in":"query","description":"allowWatchBookmarks requests watch events with type \"BOOKMARK\". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server's discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored.","schema":{"type":"boolean","uniqueItems":true}},{"name":"continue","in":"query","description":"The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the response, as long as their keys are after the \"next key\".\n\nThis field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications.","schema":{"type":"string","uniqueItems":true}},{"name":"fieldSelector","in":"query","description":"A selector to restrict the list of returned objects by their fields. Defaults to everything.","schema":{"type":"string","uniqueItems":true}},{"name":"labelSelector","in":"query","description":"A selector to restrict the list of returned objects by their labels. Defaults to everything.","schema":{"type":"string","uniqueItems":true}},{"name":"limit","in":"query","description":"limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.","schema":{"type":"integer","uniqueItems":true}},{"name":"pretty","in":"query","description":"If 'true', then the output is pretty printed.","schema":{"type":"string","uniqueItems":true}},{"name":"resourceVersion","in":"query","description":"resourceVersion sets a constraint on what resource versions a request may be served from. See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.\n\nDefaults to unset","schema":{"type":"string","uniqueItems":true}},{"name":"resourceVersionMatch","in":"query","description":"resourceVersionMatch determines how resourceVersion is applied to list calls. It is highly recommended that resourceVersionMatch be set for list calls where resourceVersion is set See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.\n\nDefaults to unset","schema":{"type":"string","uniqueItems":true}},{"name":"sendInitialEvents","in":"query","description":"`sendInitialEvents=true` may be set together with `watch=true`. In that case, the watch stream will begin with synthetic events to produce the current state of objects in the collection. Once all such events have been sent, a synthetic \"Bookmark\" event  will be sent. The bookmark will report the ResourceVersion (RV) corresponding to the set of objects, and be marked with `\"k8s.io/initial-events-end\": \"true\"` annotation. Afterwards, the watch stream will proceed as usual, sending watch events corresponding to changes (subsequent to the RV) to objects watched.\n\nWhen `sendInitialEvents` option is set, we require `resourceVersionMatch` option to also be set. The semantic of the watch request is as following: - `resourceVersionMatch` = NotOlderThan\n  is interpreted as \"data at least as new as the provided `resourceVersion`\"\n  and the bookmark event is send when the state is synced\n  to a `resourceVersion` at least as fresh as the one provided by the ListOptions.\n  If `resourceVersion` is unset, this is interpreted as \"consistent read\" and the\n  bookmark event is send when the state is synced at least to the moment\n  when request started being processed.\n- `resourceVersionMatch` set to any other value or unset\n  Invalid error is returned.\n\nDefaults to true if `resourceVersion=\"\"` or `resourceVersion=\"0\"` (for backward compatibility reasons) and to false otherwise.","schema":{"type":"boolean","uniqueItems":true}},{"name":"timeoutSeconds","in":"query","description":"Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity.","schema":{"type":"integer","uniqueItems":true}},{"name":"watch","in":"query","description":"Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.","schema":{"type":"boolean","uniqueItems":true}}]},"/apis/mongodb.com/v1/mongodbusers":{"get":{"tags":["mongodbCom_v1"],"description":"list objects of kind MongoDBUser","operationId":"listMongodbComV1MongoDBUserForAllNamespaces","responses":{"200":{"description":"OK","content":{"application/json":{"schema":{"$ref":"#/components/schemas/com.mongodb.v1.MongoDBUserList"}},"application/yaml":{"schema":{"$ref":"#/components/schemas/com.mongodb.v1.MongoDBUserList"}}}},"401":{"description":"Unauthorized"}},"x-kubernetes-action":"list","x-kubernetes-group-version-kind":{"group":"mongodb.com","version":"v1","kind":"MongoDBUser"}},"parameters":[{"name":"allowWatchBookmarks","in":"query","description":"allowWatchBookmarks requests watch events with type \"BOOKMARK\". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server's discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored.","schema":{"type":"boolean","uniqueItems":true}},{"name":"continue","in":"query","description":"The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the response, as long as their keys are after the \"next key\".\n\nThis field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications.","schema":{"type":"string","uniqueItems":true}},{"name":"fieldSelector","in":"query","description":"A selector to restrict the list of returned objects by their fields. Defaults to everything.","schema":{"type":"string","uniqueItems":true}},{"name":"labelSelector","in":"query","description":"A selector to restrict the list of returned objects by their labels. Defaults to everything.","schema":{"type":"string","uniqueItems":true}},{"name":"limit","in":"query","description":"limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.","schema":{"type":"integer","uniqueItems":true}},{"name":"pretty","in":"query","description":"If 'true', then the output is pretty printed.","schema":{"type":"string","uniqueItems":true}},{"name":"resourceVersion","in":"query","description":"resourceVersion sets a constraint on what resource versions a request may be served from. See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.\n\nDefaults to unset","schema":{"type":"string","uniqueItems":true}},{"name":"resourceVersionMatch","in":"query","description":"resourceVersionMatch determines how resourceVersion is applied to list calls. It is highly recommended that resourceVersionMatch be set for list calls where resourceVersion is set See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.\n\nDefaults to unset","schema":{"type":"string","uniqueItems":true}},{"name":"sendInitialEvents","in":"query","description":"`sendInitialEvents=true` may be set together with `watch=true`. In that case, the watch stream will begin with synthetic events to produce the current state of objects in the collection. Once all such events have been sent, a synthetic \"Bookmark\" event  will be sent. The bookmark will report the ResourceVersion (RV) corresponding to the set of objects, and be marked with `\"k8s.io/initial-events-end\": \"true\"` annotation. Afterwards, the watch stream will proceed as usual, sending watch events corresponding to changes (subsequent to the RV) to objects watched.\n\nWhen `sendInitialEvents` option is set, we require `resourceVersionMatch` option to also be set. The semantic of the watch request is as following: - `resourceVersionMatch` = NotOlderThan\n  is interpreted as \"data at least as new as the provided `resourceVersion`\"\n  and the bookmark event is send when the state is synced\n  to a `resourceVersion` at least as fresh as the one provided by the ListOptions.\n  If `resourceVersion` is unset, this is interpreted as \"consistent read\" and the\n  bookmark event is send when the state is synced at least to the moment\n  when request started being processed.\n- `resourceVersionMatch` set to any other value or unset\n  Invalid error is returned.\n\nDefaults to true if `resourceVersion=\"\"` or `resourceVersion=\"0\"` (for backward compatibility reasons) and to false otherwise.","schema":{"type":"boolean","uniqueItems":true}},{"name":"timeoutSeconds","in":"query","description":"Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity.","schema":{"type":"integer","uniqueItems":true}},{"name":"watch","in":"query","description":"Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.","schema":{"type":"boolean","uniqueItems":true}}]},"/apis/mongodb.com/v1/namespaces/{namespace}/mongodb":{"get":{"tags":["mongodbCom_v1"],"description":"list objects of kind MongoDB","operationId":"listMongodbComV1NamespacedMongoDB","parameters":[{"name":"allowWatchBookmarks","in":"query","description":"allowWatchBookmarks requests watch events with type \"BOOKMARK\". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server's discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored.","schema":{"type":"boolean","uniqueItems":true}},{"name":"continue","in":"query","description":"The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the response, as long as their keys are after the \"next key\".\n\nThis field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications.","schema":{"type":"string","uniqueItems":true}},{"name":"fieldSelector","in":"query","description":"A selector to restrict the list of returned objects by their fields. Defaults to everything.","schema":{"type":"string","uniqueItems":true}},{"name":"labelSelector","in":"query","description":"A selector to restrict the list of returned objects by their labels. Defaults to everything.","schema":{"type":"string","uniqueItems":true}},{"name":"limit","in":"query","description":"limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.","schema":{"type":"integer","uniqueItems":true}},{"name":"resourceVersion","in":"query","description":"resourceVersion sets a constraint on what resource versions a request may be served from. See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.\n\nDefaults to unset","schema":{"type":"string","uniqueItems":true}},{"name":"resourceVersionMatch","in":"query","description":"resourceVersionMatch determines how resourceVersion is applied to list calls. It is highly recommended that resourceVersionMatch be set for list calls where resourceVersion is set See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.\n\nDefaults to unset","schema":{"type":"string","uniqueItems":true}},{"name":"sendInitialEvents","in":"query","description":"`sendInitialEvents=true` may be set together with `watch=true`. In that case, the watch stream will begin with synthetic events to produce the current state of objects in the collection. Once all such events have been sent, a synthetic \"Bookmark\" event  will be sent. The bookmark will report the ResourceVersion (RV) corresponding to the set of objects, and be marked with `\"k8s.io/initial-events-end\": \"true\"` annotation. Afterwards, the watch stream will proceed as usual, sending watch events corresponding to changes (subsequent to the RV) to objects watched.\n\nWhen `sendInitialEvents` option is set, we require `resourceVersionMatch` option to also be set. The semantic of the watch request is as following: - `resourceVersionMatch` = NotOlderThan\n  is interpreted as \"data at least as new as the provided `resourceVersion`\"\n  and the bookmark event is send when the state is synced\n  to a `resourceVersion` at least as fresh as the one provided by the ListOptions.\n  If `resourceVersion` is unset, this is interpreted as \"consistent read\" and the\n  bookmark event is send when the state is synced at least to the moment\n  when request started being processed.\n- `resourceVersionMatch` set to any other value or unset\n  Invalid error is returned.\n\nDefaults to true if `resourceVersion=\"\"` or `resourceVersion=\"0\"` (for backward compatibility reasons) and to false otherwise.","schema":{"type":"boolean","uniqueItems":true}},{"name":"timeoutSeconds","in":"query","description":"Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity.","schema":{"type":"integer","uniqueItems":true}},{"name":"watch","in":"query","description":"Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.","schema":{"type":"boolean","uniqueItems":true}}],"responses":{"200":{"description":"OK","content":{"application/json":{"schema":{"$ref":"#/components/schemas/com.mongodb.v1.MongoDBList"}},"application/yaml":{"schema":{"$ref":"#/components/schemas/com.mongodb.v1.MongoDBList"}}}},"401":{"description":"Unauthorized"}},"x-kubernetes-action":"list","x-kubernetes-group-version-kind":{"group":"mongodb.com","version":"v1","kind":"MongoDB"}},"post":{"tags":["mongodbCom_v1"],"description":"create a MongoDB","operationId":"createMongodbComV1NamespacedMongoDB","parameters":[{"name":"dryRun","in":"query","description":"When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed","schema":{"type":"string","uniqueItems":true}},{"name":"fieldManager","in":"query","description":"fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint.","schema":{"type":"string","uniqueItems":true}},{"name":"fieldValidation","in":"query","description":"fieldValidation instructs the server on how to handle objects in the request (POST/PUT/PATCH) containing unknown or duplicate fields. Valid values are: - Ignore: This will ignore any unknown fields that are silently dropped from the object, and will ignore all but the last duplicate field that the decoder encounters. This is the default behavior prior to v1.23. - Warn: This will send a warning via the standard warning response header for each unknown field that is dropped from the object, and for each duplicate field that is encountered. The request will still succeed if there are no other errors, and will only persist the last of any duplicate fields. This is the default in v1.23+ - Strict: This will fail the request with a BadRequest error if any unknown fields would be dropped from the object, or if any duplicate fields are present. The error returned from the server will contain all unknown and duplicate fields encountered.","schema":{"type":"string","uniqueItems":true}}],"requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/com.mongodb.v1.MongoDB"}},"application/yaml":{"schema":{"$ref":"#/components/schemas/com.mongodb.v1.MongoDB"}}}},"responses":{"200":{"description":"OK","content":{"application/json":{"schema":{"$ref":"#/components/schemas/com.mongodb.v1.MongoDB"}},"application/yaml":{"schema":{"$ref":"#/components/schemas/com.mongodb.v1.MongoDB"}}}},"201":{"description":"Created","content":{"application/json":{"schema":{"$ref":"#/components/schemas/com.mongodb.v1.MongoDB"}},"application/yaml":{"schema":{"$ref":"#/components/schemas/com.mongodb.v1.MongoDB"}}}},"202":{"description":"Accepted","content":{"application/json":{"schema":{"$ref":"#/components/schemas/com.mongodb.v1.MongoDB"}},"application/yaml":{"schema":{"$ref":"#/components/schemas/com.mongodb.v1.MongoDB"}}}},"401":{"description":"Unauthorized"}},"x-kubernetes-action":"post","x-kubernetes-group-version-kind":{"group":"mongodb.com","version":"v1","kind":"MongoDB"}},"delete":{"tags":["mongodbCom_v1"],"description":"delete collection of MongoDB","operationId":"deleteMongodbComV1CollectionNamespacedMongoDB","parameters":[{"name":"allowWatchBookmarks","in":"query","description":"allowWatchBookmarks requests watch events with type \"BOOKMARK\". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server's discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored.","schema":{"type":"boolean","uniqueItems":true}},{"name":"continue","in":"query","description":"The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the response, as long as their keys are after the \"next key\".\n\nThis field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications.","schema":{"type":"string","uniqueItems":true}},{"name":"fieldSelector","in":"query","description":"A selector to restrict the list of returned objects by their fields. Defaults to everything.","schema":{"type":"string","uniqueItems":true}},{"name":"labelSelector","in":"query","description":"A selector to restrict the list of returned objects by their labels. Defaults to everything.","schema":{"type":"string","uniqueItems":true}},{"name":"limit","in":"query","description":"limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.","schema":{"type":"integer","uniqueItems":true}},{"name":"resourceVersion","in":"query","description":"resourceVersion sets a constraint on what resource versions a request may be served from. See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.\n\nDefaults to unset","schema":{"type":"string","uniqueItems":true}},{"name":"resourceVersionMatch","in":"query","description":"resourceVersionMatch determines how resourceVersion is applied to list calls. It is highly recommended that resourceVersionMatch be set for list calls where resourceVersion is set See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.\n\nDefaults to unset","schema":{"type":"string","uniqueItems":true}},{"name":"sendInitialEvents","in":"query","description":"`sendInitialEvents=true` may be set together with `watch=true`. In that case, the watch stream will begin with synthetic events to produce the current state of objects in the collection. Once all such events have been sent, a synthetic \"Bookmark\" event  will be sent. The bookmark will report the ResourceVersion (RV) corresponding to the set of objects, and be marked with `\"k8s.io/initial-events-end\": \"true\"` annotation. Afterwards, the watch stream will proceed as usual, sending watch events corresponding to changes (subsequent to the RV) to objects watched.\n\nWhen `sendInitialEvents` option is set, we require `resourceVersionMatch` option to also be set. The semantic of the watch request is as following: - `resourceVersionMatch` = NotOlderThan\n  is interpreted as \"data at least as new as the provided `resourceVersion`\"\n  and the bookmark event is send when the state is synced\n  to a `resourceVersion` at least as fresh as the one provided by the ListOptions.\n  If `resourceVersion` is unset, this is interpreted as \"consistent read\" and the\n  bookmark event is send when the state is synced at least to the moment\n  when request started being processed.\n- `resourceVersionMatch` set to any other value or unset\n  Invalid error is returned.\n\nDefaults to true if `resourceVersion=\"\"` or `resourceVersion=\"0\"` (for backward compatibility reasons) and to false otherwise.","schema":{"type":"boolean","uniqueItems":true}},{"name":"timeoutSeconds","in":"query","description":"Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity.","schema":{"type":"integer","uniqueItems":true}},{"name":"watch","in":"query","description":"Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.","schema":{"type":"boolean","uniqueItems":true}}],"responses":{"200":{"description":"OK","content":{"application/json":{"schema":{"$ref":"#/components/schemas/io.k8s.apimachinery.pkg.apis.meta.v1.Status"}},"application/yaml":{"schema":{"$ref":"#/components/schemas/io.k8s.apimachinery.pkg.apis.meta.v1.Status"}}}},"401":{"description":"Unauthorized"}},"x-kubernetes-action":"deletecollection","x-kubernetes-group-version-kind":{"group":"mongodb.com","version":"v1","kind":"MongoDB"}},"parameters":[{"name":"namespace","in":"path","description":"object name and auth scope, such as for teams and projects","required":true,"schema":{"type":"string","uniqueItems":true}},{"name":"pretty","in":"query","description":"If 'true', then the output is pretty printed.","schema":{"type":"string","uniqueItems":true}}]},"/apis/mongodb.com/v1/namespaces/{namespace}/mongodb/{name}":{"get":{"tags":["mongodbCom_v1"],"description":"read the specified MongoDB","operationId":"readMongodbComV1NamespacedMongoDB","parameters":[{"name":"resourceVersion","in":"query","description":"resourceVersion sets a constraint on what resource versions a request may be served from. See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.\n\nDefaults to unset","schema":{"type":"string","uniqueItems":true}}],"responses":{"200":{"description":"OK","content":{"application/json":{"schema":{"$ref":"#/components/schemas/com.mongodb.v1.MongoDB"}},"application/yaml":{"schema":{"$ref":"#/components/schemas/com.mongodb.v1.MongoDB"}}}},"401":{"description":"Unauthorized"}},"x-kubernetes-action":"get","x-kubernetes-group-version-kind":{"group":"mongodb.com","version":"v1","kind":"MongoDB"}},"put":{"tags":["mongodbCom_v1"],"description":"replace the specified MongoDB","operationId":"replaceMongodbComV1NamespacedMongoDB","parameters":[{"name":"dryRun","in":"query","description":"When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed","schema":{"type":"string","uniqueItems":true}},{"name":"fieldManager","in":"query","description":"fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint.","schema":{"type":"string","uniqueItems":true}},{"name":"fieldValidation","in":"query","description":"fieldValidation instructs the server on how to handle objects in the request (POST/PUT/PATCH) containing unknown or duplicate fields. Valid values are: - Ignore: This will ignore any unknown fields that are silently dropped from the object, and will ignore all but the last duplicate field that the decoder encounters. This is the default behavior prior to v1.23. - Warn: This will send a warning via the standard warning response header for each unknown field that is dropped from the object, and for each duplicate field that is encountered. The request will still succeed if there are no other errors, and will only persist the last of any duplicate fields. This is the default in v1.23+ - Strict: This will fail the request with a BadRequest error if any unknown fields would be dropped from the object, or if any duplicate fields are present. The error returned from the server will contain all unknown and duplicate fields encountered.","schema":{"type":"string","uniqueItems":true}}],"requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/com.mongodb.v1.MongoDB"}},"application/yaml":{"schema":{"$ref":"#/components/schemas/com.mongodb.v1.MongoDB"}}}},"responses":{"200":{"description":"OK","content":{"application/json":{"schema":{"$ref":"#/components/schemas/com.mongodb.v1.MongoDB"}},"application/yaml":{"schema":{"$ref":"#/components/schemas/com.mongodb.v1.MongoDB"}}}},"201":{"description":"Created","content":{"application/json":{"schema":{"$ref":"#/components/schemas/com.mongodb.v1.MongoDB"}},"application/yaml":{"schema":{"$ref":"#/components/schemas/com.mongodb.v1.MongoDB"}}}},"401":{"description":"Unauthorized"}},"x-kubernetes-action":"put","x-kubernetes-group-version-kind":{"group":"mongodb.com","version":"v1","kind":"MongoDB"}},"delete":{"tags":["mongodbCom_v1"],"description":"delete a MongoDB","operationId":"deleteMongodbComV1NamespacedMongoDB","parameters":[{"name":"dryRun","in":"query","description":"When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed","schema":{"type":"string","uniqueItems":true}},{"name":"gracePeriodSeconds","in":"query","description":"The duration in seconds before the object should be deleted. Value must be non-negative integer. The value zero indicates delete immediately. If this value is nil, the default grace period for the specified type will be used. Defaults to a per object value if not specified. zero means delete immediately.","schema":{"type":"integer","uniqueItems":true}},{"name":"orphanDependents","in":"query","description":"Deprecated: please use the PropagationPolicy, this field will be deprecated in 1.7. Should the dependent objects be orphaned. If true/false, the \"orphan\" finalizer will be added to/removed from the object's finalizers list. Either this field or PropagationPolicy may be set, but not both.","schema":{"type":"boolean","uniqueItems":true}},{"name":"propagationPolicy","in":"query","description":"Whether and how garbage collection will be performed. Either this field or OrphanDependents may be set, but not both. The default policy is decided by the existing finalizer set in the metadata.finalizers and the resource-specific default policy. Acceptable values are: 'Orphan' - orphan the dependents; 'Background' - allow the garbage collector to delete the dependents in the background; 'Foreground' - a cascading policy that deletes all dependents in the foreground.","schema":{"type":"string","uniqueItems":true}}],"requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/io.k8s.apimachinery.pkg.apis.meta.v1.DeleteOptions"}},"application/yaml":{"schema":{"$ref":"#/components/schemas/io.k8s.apimachinery.pkg.apis.meta.v1.DeleteOptions"}}}},"responses":{"200":{"description":"OK","content":{"application/json":{"schema":{"$ref":"#/components/schemas/io.k8s.apimachinery.pkg.apis.meta.v1.Status"}},"application/yaml":{"schema":{"$ref":"#/components/schemas/io.k8s.apimachinery.pkg.apis.meta.v1.Status"}}}},"202":{"description":"Accepted","content":{"application/json":{"schema":{"$ref":"#/components/schemas/io.k8s.apimachinery.pkg.apis.meta.v1.Status"}},"application/yaml":{"schema":{"$ref":"#/components/schemas/io.k8s.apimachinery.pkg.apis.meta.v1.Status"}}}},"401":{"description":"Unauthorized"}},"x-kubernetes-action":"delete","x-kubernetes-group-version-kind":{"group":"mongodb.com","version":"v1","kind":"MongoDB"}},"patch":{"tags":["mongodbCom_v1"],"description":"partially update the specified MongoDB","operationId":"patchMongodbComV1NamespacedMongoDB","parameters":[{"name":"dryRun","in":"query","description":"When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed","schema":{"type":"string","uniqueItems":true}},{"name":"fieldManager","in":"query","description":"fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint. This field is required for apply requests (application/apply-patch) but optional for non-apply patch types (JsonPatch, MergePatch, StrategicMergePatch).","schema":{"type":"string","uniqueItems":true}},{"name":"fieldValidation","in":"query","description":"fieldValidation instructs the server on how to handle objects in the request (POST/PUT/PATCH) containing unknown or duplicate fields. Valid values are: - Ignore: This will ignore any unknown fields that are silently dropped from the object, and will ignore all but the last duplicate field that the decoder encounters. This is the default behavior prior to v1.23. - Warn: This will send a warning via the standard warning response header for each unknown field that is dropped from the object, and for each duplicate field that is encountered. The request will still succeed if there are no other errors, and will only persist the last of any duplicate fields. This is the default in v1.23+ - Strict: This will fail the request with a BadRequest error if any unknown fields would be dropped from the object, or if any duplicate fields are present. The error returned from the server will contain all unknown and duplicate fields encountered.","schema":{"type":"string","uniqueItems":true}},{"name":"force","in":"query","description":"Force is going to \"force\" Apply requests. It means user will re-acquire conflicting fields owned by other people. Force flag must be unset for non-apply patch requests.","schema":{"type":"boolean","uniqueItems":true}}],"requestBody":{"content":{"application/apply-patch+yaml":{"schema":{"$ref":"#/components/schemas/io.k8s.apimachinery.pkg.apis.meta.v1.Patch"}},"application/json-patch+json":{"schema":{"$ref":"#/components/schemas/io.k8s.apimachinery.pkg.apis.meta.v1.Patch"}},"application/merge-patch+json":{"schema":{"$ref":"#/components/schemas/io.k8s.apimachinery.pkg.apis.meta.v1.Patch"}}}},"responses":{"200":{"description":"OK","content":{"application/json":{"schema":{"$ref":"#/components/schemas/com.mongodb.v1.MongoDB"}},"application/yaml":{"schema":{"$ref":"#/components/schemas/com.mongodb.v1.MongoDB"}}}},"401":{"description":"Unauthorized"}},"x-kubernetes-action":"patch","x-kubernetes-group-version-kind":{"group":"mongodb.com","version":"v1","kind":"MongoDB"}},"parameters":[{"name":"name","in":"path","description":"name of the MongoDB","required":true,"schema":{"type":"string","uniqueItems":true}},{"name":"namespace","in":"path","description":"object name and auth scope, such as for teams and projects","required":true,"schema":{"type":"string","uniqueItems":true}},{"name":"pretty","in":"query","description":"If 'true', then the output is pretty printed.","schema":{"type":"string","uniqueItems":true}}]},"/apis/mongodb.com/v1/namespaces/{namespace}/mongodb/{name}/status":{"get":{"tags":["mongodbCom_v1"],"description":"read status of the specified MongoDB","operationId":"readMongodbComV1NamespacedMongoDBStatus","parameters":[{"name":"resourceVersion","in":"query","description":"resourceVersion sets a constraint on what resource versions a request may be served from. See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.\n\nDefaults to unset","schema":{"type":"string","uniqueItems":true}}],"responses":{"200":{"description":"OK","content":{"application/json":{"schema":{"$ref":"#/components/schemas/com.mongodb.v1.MongoDB"}},"application/yaml":{"schema":{"$ref":"#/components/schemas/com.mongodb.v1.MongoDB"}}}},"401":{"description":"Unauthorized"}},"x-kubernetes-action":"get","x-kubernetes-group-version-kind":{"group":"mongodb.com","version":"v1","kind":"MongoDB"}},"put":{"tags":["mongodbCom_v1"],"description":"replace status of the specified MongoDB","operationId":"replaceMongodbComV1NamespacedMongoDBStatus","parameters":[{"name":"dryRun","in":"query","description":"When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed","schema":{"type":"string","uniqueItems":true}},{"name":"fieldManager","in":"query","description":"fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint.","schema":{"type":"string","uniqueItems":true}},{"name":"fieldValidation","in":"query","description":"fieldValidation instructs the server on how to handle objects in the request (POST/PUT/PATCH) containing unknown or duplicate fields. Valid values are: - Ignore: This will ignore any unknown fields that are silently dropped from the object, and will ignore all but the last duplicate field that the decoder encounters. This is the default behavior prior to v1.23. - Warn: This will send a warning via the standard warning response header for each unknown field that is dropped from the object, and for each duplicate field that is encountered. The request will still succeed if there are no other errors, and will only persist the last of any duplicate fields. This is the default in v1.23+ - Strict: This will fail the request with a BadRequest error if any unknown fields would be dropped from the object, or if any duplicate fields are present. The error returned from the server will contain all unknown and duplicate fields encountered.","schema":{"type":"string","uniqueItems":true}}],"requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/com.mongodb.v1.MongoDB"}},"application/yaml":{"schema":{"$ref":"#/components/schemas/com.mongodb.v1.MongoDB"}}}},"responses":{"200":{"description":"OK","content":{"application/json":{"schema":{"$ref":"#/components/schemas/com.mongodb.v1.MongoDB"}},"application/yaml":{"schema":{"$ref":"#/components/schemas/com.mongodb.v1.MongoDB"}}}},"201":{"description":"Created","content":{"application/json":{"schema":{"$ref":"#/components/schemas/com.mongodb.v1.MongoDB"}},"application/yaml":{"schema":{"$ref":"#/components/schemas/com.mongodb.v1.MongoDB"}}}},"401":{"description":"Unauthorized"}},"x-kubernetes-action":"put","x-kubernetes-group-version-kind":{"group":"mongodb.com","version":"v1","kind":"MongoDB"}},"patch":{"tags":["mongodbCom_v1"],"description":"partially update status of the specified MongoDB","operationId":"patchMongodbComV1NamespacedMongoDBStatus","parameters":[{"name":"dryRun","in":"query","description":"When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed","schema":{"type":"string","uniqueItems":true}},{"name":"fieldManager","in":"query","description":"fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint. This field is required for apply requests (application/apply-patch) but optional for non-apply patch types (JsonPatch, MergePatch, StrategicMergePatch).","schema":{"type":"string","uniqueItems":true}},{"name":"fieldValidation","in":"query","description":"fieldValidation instructs the server on how to handle objects in the request (POST/PUT/PATCH) containing unknown or duplicate fields. Valid values are: - Ignore: This will ignore any unknown fields that are silently dropped from the object, and will ignore all but the last duplicate field that the decoder encounters. This is the default behavior prior to v1.23. - Warn: This will send a warning via the standard warning response header for each unknown field that is dropped from the object, and for each duplicate field that is encountered. The request will still succeed if there are no other errors, and will only persist the last of any duplicate fields. This is the default in v1.23+ - Strict: This will fail the request with a BadRequest error if any unknown fields would be dropped from the object, or if any duplicate fields are present. The error returned from the server will contain all unknown and duplicate fields encountered.","schema":{"type":"string","uniqueItems":true}},{"name":"force","in":"query","description":"Force is going to \"force\" Apply requests. It means user will re-acquire conflicting fields owned by other people. Force flag must be unset for non-apply patch requests.","schema":{"type":"boolean","uniqueItems":true}}],"requestBody":{"content":{"application/apply-patch+yaml":{"schema":{"$ref":"#/components/schemas/io.k8s.apimachinery.pkg.apis.meta.v1.Patch"}},"application/json-patch+json":{"schema":{"$ref":"#/components/schemas/io.k8s.apimachinery.pkg.apis.meta.v1.Patch"}},"application/merge-patch+json":{"schema":{"$ref":"#/components/schemas/io.k8s.apimachinery.pkg.apis.meta.v1.Patch"}}}},"responses":{"200":{"description":"OK","content":{"application/json":{"schema":{"$ref":"#/components/schemas/com.mongodb.v1.MongoDB"}},"application/yaml":{"schema":{"$ref":"#/components/schemas/com.mongodb.v1.MongoDB"}}}},"401":{"description":"Unauthorized"}},"x-kubernetes-action":"patch","x-kubernetes-group-version-kind":{"group":"mongodb.com","version":"v1","kind":"MongoDB"}},"parameters":[{"name":"name","in":"path","description":"name of the MongoDB","required":true,"schema":{"type":"string","uniqueItems":true}},{"name":"namespace","in":"path","description":"object name and auth scope, such as for teams and projects","required":true,"schema":{"type":"string","uniqueItems":true}},{"name":"pretty","in":"query","description":"If 'true', then the output is pretty printed.","schema":{"type":"string","uniqueItems":true}}]},"/apis/mongodb.com/v1/namespaces/{namespace}/mongodbmulti":{"get":{"tags":["mongodbCom_v1"],"description":"list objects of kind MongoDBMulti","operationId":"listMongodbComV1NamespacedMongoDBMulti","parameters":[{"name":"allowWatchBookmarks","in":"query","description":"allowWatchBookmarks requests watch events with type \"BOOKMARK\". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server's discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored.","schema":{"type":"boolean","uniqueItems":true}},{"name":"continue","in":"query","description":"The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the response, as long as their keys are after the \"next key\".\n\nThis field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications.","schema":{"type":"string","uniqueItems":true}},{"name":"fieldSelector","in":"query","description":"A selector to restrict the list of returned objects by their fields. Defaults to everything.","schema":{"type":"string","uniqueItems":true}},{"name":"labelSelector","in":"query","description":"A selector to restrict the list of returned objects by their labels. Defaults to everything.","schema":{"type":"string","uniqueItems":true}},{"name":"limit","in":"query","description":"limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.","schema":{"type":"integer","uniqueItems":true}},{"name":"resourceVersion","in":"query","description":"resourceVersion sets a constraint on what resource versions a request may be served from. See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.\n\nDefaults to unset","schema":{"type":"string","uniqueItems":true}},{"name":"resourceVersionMatch","in":"query","description":"resourceVersionMatch determines how resourceVersion is applied to list calls. It is highly recommended that resourceVersionMatch be set for list calls where resourceVersion is set See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.\n\nDefaults to unset","schema":{"type":"string","uniqueItems":true}},{"name":"sendInitialEvents","in":"query","description":"`sendInitialEvents=true` may be set together with `watch=true`. In that case, the watch stream will begin with synthetic events to produce the current state of objects in the collection. Once all such events have been sent, a synthetic \"Bookmark\" event  will be sent. The bookmark will report the ResourceVersion (RV) corresponding to the set of objects, and be marked with `\"k8s.io/initial-events-end\": \"true\"` annotation. Afterwards, the watch stream will proceed as usual, sending watch events corresponding to changes (subsequent to the RV) to objects watched.\n\nWhen `sendInitialEvents` option is set, we require `resourceVersionMatch` option to also be set. The semantic of the watch request is as following: - `resourceVersionMatch` = NotOlderThan\n  is interpreted as \"data at least as new as the provided `resourceVersion`\"\n  and the bookmark event is send when the state is synced\n  to a `resourceVersion` at least as fresh as the one provided by the ListOptions.\n  If `resourceVersion` is unset, this is interpreted as \"consistent read\" and the\n  bookmark event is send when the state is synced at least to the moment\n  when request started being processed.\n- `resourceVersionMatch` set to any other value or unset\n  Invalid error is returned.\n\nDefaults to true if `resourceVersion=\"\"` or `resourceVersion=\"0\"` (for backward compatibility reasons) and to false otherwise.","schema":{"type":"boolean","uniqueItems":true}},{"name":"timeoutSeconds","in":"query","description":"Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity.","schema":{"type":"integer","uniqueItems":true}},{"name":"watch","in":"query","description":"Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.","schema":{"type":"boolean","uniqueItems":true}}],"responses":{"200":{"description":"OK","content":{"application/json":{"schema":{"$ref":"#/components/schemas/com.mongodb.v1.MongoDBMultiList"}},"application/yaml":{"schema":{"$ref":"#/components/schemas/com.mongodb.v1.MongoDBMultiList"}}}},"401":{"description":"Unauthorized"}},"x-kubernetes-action":"list","x-kubernetes-group-version-kind":{"group":"mongodb.com","version":"v1","kind":"MongoDBMulti"}},"post":{"tags":["mongodbCom_v1"],"description":"create a MongoDBMulti","operationId":"createMongodbComV1NamespacedMongoDBMulti","parameters":[{"name":"dryRun","in":"query","description":"When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed","schema":{"type":"string","uniqueItems":true}},{"name":"fieldManager","in":"query","description":"fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint.","schema":{"type":"string","uniqueItems":true}},{"name":"fieldValidation","in":"query","description":"fieldValidation instructs the server on how to handle objects in the request (POST/PUT/PATCH) containing unknown or duplicate fields. Valid values are: - Ignore: This will ignore any unknown fields that are silently dropped from the object, and will ignore all but the last duplicate field that the decoder encounters. This is the default behavior prior to v1.23. - Warn: This will send a warning via the standard warning response header for each unknown field that is dropped from the object, and for each duplicate field that is encountered. The request will still succeed if there are no other errors, and will only persist the last of any duplicate fields. This is the default in v1.23+ - Strict: This will fail the request with a BadRequest error if any unknown fields would be dropped from the object, or if any duplicate fields are present. The error returned from the server will contain all unknown and duplicate fields encountered.","schema":{"type":"string","uniqueItems":true}}],"requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/com.mongodb.v1.MongoDBMulti"}},"application/yaml":{"schema":{"$ref":"#/components/schemas/com.mongodb.v1.MongoDBMulti"}}}},"responses":{"200":{"description":"OK","content":{"application/json":{"schema":{"$ref":"#/components/schemas/com.mongodb.v1.MongoDBMulti"}},"application/yaml":{"schema":{"$ref":"#/components/schemas/com.mongodb.v1.MongoDBMulti"}}}},"201":{"description":"Created","content":{"application/json":{"schema":{"$ref":"#/components/schemas/com.mongodb.v1.MongoDBMulti"}},"application/yaml":{"schema":{"$ref":"#/components/schemas/com.mongodb.v1.MongoDBMulti"}}}},"202":{"description":"Accepted","content":{"application/json":{"schema":{"$ref":"#/components/schemas/com.mongodb.v1.MongoDBMulti"}},"application/yaml":{"schema":{"$ref":"#/components/schemas/com.mongodb.v1.MongoDBMulti"}}}},"401":{"description":"Unauthorized"}},"x-kubernetes-action":"post","x-kubernetes-group-version-kind":{"group":"mongodb.com","version":"v1","kind":"MongoDBMulti"}},"delete":{"tags":["mongodbCom_v1"],"description":"delete collection of MongoDBMulti","operationId":"deleteMongodbComV1CollectionNamespacedMongoDBMulti","parameters":[{"name":"allowWatchBookmarks","in":"query","description":"allowWatchBookmarks requests watch events with type \"BOOKMARK\". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server's discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored.","schema":{"type":"boolean","uniqueItems":true}},{"name":"continue","in":"query","description":"The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the response, as long as their keys are after the \"next key\".\n\nThis field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications.","schema":{"type":"string","uniqueItems":true}},{"name":"fieldSelector","in":"query","description":"A selector to restrict the list of returned objects by their fields. Defaults to everything.","schema":{"type":"string","uniqueItems":true}},{"name":"labelSelector","in":"query","description":"A selector to restrict the list of returned objects by their labels. Defaults to everything.","schema":{"type":"string","uniqueItems":true}},{"name":"limit","in":"query","description":"limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.","schema":{"type":"integer","uniqueItems":true}},{"name":"resourceVersion","in":"query","description":"resourceVersion sets a constraint on what resource versions a request may be served from. See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.\n\nDefaults to unset","schema":{"type":"string","uniqueItems":true}},{"name":"resourceVersionMatch","in":"query","description":"resourceVersionMatch determines how resourceVersion is applied to list calls. It is highly recommended that resourceVersionMatch be set for list calls where resourceVersion is set See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.\n\nDefaults to unset","schema":{"type":"string","uniqueItems":true}},{"name":"sendInitialEvents","in":"query","description":"`sendInitialEvents=true` may be set together with `watch=true`. In that case, the watch stream will begin with synthetic events to produce the current state of objects in the collection. Once all such events have been sent, a synthetic \"Bookmark\" event  will be sent. The bookmark will report the ResourceVersion (RV) corresponding to the set of objects, and be marked with `\"k8s.io/initial-events-end\": \"true\"` annotation. Afterwards, the watch stream will proceed as usual, sending watch events corresponding to changes (subsequent to the RV) to objects watched.\n\nWhen `sendInitialEvents` option is set, we require `resourceVersionMatch` option to also be set. The semantic of the watch request is as following: - `resourceVersionMatch` = NotOlderThan\n  is interpreted as \"data at least as new as the provided `resourceVersion`\"\n  and the bookmark event is send when the state is synced\n  to a `resourceVersion` at least as fresh as the one provided by the ListOptions.\n  If `resourceVersion` is unset, this is interpreted as \"consistent read\" and the\n  bookmark event is send when the state is synced at least to the moment\n  when request started being processed.\n- `resourceVersionMatch` set to any other value or unset\n  Invalid error is returned.\n\nDefaults to true if `resourceVersion=\"\"` or `resourceVersion=\"0\"` (for backward compatibility reasons) and to false otherwise.","schema":{"type":"boolean","uniqueItems":true}},{"name":"timeoutSeconds","in":"query","description":"Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity.","schema":{"type":"integer","uniqueItems":true}},{"name":"watch","in":"query","description":"Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.","schema":{"type":"boolean","uniqueItems":true}}],"responses":{"200":{"description":"OK","content":{"application/json":{"schema":{"$ref":"#/components/schemas/io.k8s.apimachinery.pkg.apis.meta.v1.Status"}},"application/yaml":{"schema":{"$ref":"#/components/schemas/io.k8s.apimachinery.pkg.apis.meta.v1.Status"}}}},"401":{"description":"Unauthorized"}},"x-kubernetes-action":"deletecollection","x-kubernetes-group-version-kind":{"group":"mongodb.com","version":"v1","kind":"MongoDBMulti"}},"parameters":[{"name":"namespace","in":"path","description":"object name and auth scope, such as for teams and projects","required":true,"schema":{"type":"string","uniqueItems":true}},{"name":"pretty","in":"query","description":"If 'true', then the output is pretty printed.","schema":{"type":"string","uniqueItems":true}}]},"/apis/mongodb.com/v1/namespaces/{namespace}/mongodbmulti/{name}":{"get":{"tags":["mongodbCom_v1"],"description":"read the specified MongoDBMulti","operationId":"readMongodbComV1NamespacedMongoDBMulti","parameters":[{"name":"resourceVersion","in":"query","description":"resourceVersion sets a constraint on what resource versions a request may be served from. See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.\n\nDefaults to unset","schema":{"type":"string","uniqueItems":true}}],"responses":{"200":{"description":"OK","content":{"application/json":{"schema":{"$ref":"#/components/schemas/com.mongodb.v1.MongoDBMulti"}},"application/yaml":{"schema":{"$ref":"#/components/schemas/com.mongodb.v1.MongoDBMulti"}}}},"401":{"description":"Unauthorized"}},"x-kubernetes-action":"get","x-kubernetes-group-version-kind":{"group":"mongodb.com","version":"v1","kind":"MongoDBMulti"}},"put":{"tags":["mongodbCom_v1"],"description":"replace the specified MongoDBMulti","operationId":"replaceMongodbComV1NamespacedMongoDBMulti","parameters":[{"name":"dryRun","in":"query","description":"When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed","schema":{"type":"string","uniqueItems":true}},{"name":"fieldManager","in":"query","description":"fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint.","schema":{"type":"string","uniqueItems":true}},{"name":"fieldValidation","in":"query","description":"fieldValidation instructs the server on how to handle objects in the request (POST/PUT/PATCH) containing unknown or duplicate fields. Valid values are: - Ignore: This will ignore any unknown fields that are silently dropped from the object, and will ignore all but the last duplicate field that the decoder encounters. This is the default behavior prior to v1.23. - Warn: This will send a warning via the standard warning response header for each unknown field that is dropped from the object, and for each duplicate field that is encountered. The request will still succeed if there are no other errors, and will only persist the last of any duplicate fields. This is the default in v1.23+ - Strict: This will fail the request with a BadRequest error if any unknown fields would be dropped from the object, or if any duplicate fields are present. The error returned from the server will contain all unknown and duplicate fields encountered.","schema":{"type":"string","uniqueItems":true}}],"requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/com.mongodb.v1.MongoDBMulti"}},"application/yaml":{"schema":{"$ref":"#/components/schemas/com.mongodb.v1.MongoDBMulti"}}}},"responses":{"200":{"description":"OK","content":{"application/json":{"schema":{"$ref":"#/components/schemas/com.mongodb.v1.MongoDBMulti"}},"application/yaml":{"schema":{"$ref":"#/components/schemas/com.mongodb.v1.MongoDBMulti"}}}},"201":{"description":"Created","content":{"application/json":{"schema":{"$ref":"#/components/schemas/com.mongodb.v1.MongoDBMulti"}},"application/yaml":{"schema":{"$ref":"#/components/schemas/com.mongodb.v1.MongoDBMulti"}}}},"401":{"description":"Unauthorized"}},"x-kubernetes-action":"put","x-kubernetes-group-version-kind":{"group":"mongodb.com","version":"v1","kind":"MongoDBMulti"}},"delete":{"tags":["mongodbCom_v1"],"description":"delete a MongoDBMulti","operationId":"deleteMongodbComV1NamespacedMongoDBMulti","parameters":[{"name":"dryRun","in":"query","description":"When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed","schema":{"type":"string","uniqueItems":true}},{"name":"gracePeriodSeconds","in":"query","description":"The duration in seconds before the object should be deleted. Value must be non-negative integer. The value zero indicates delete immediately. If this value is nil, the default grace period for the specified type will be used. Defaults to a per object value if not specified. zero means delete immediately.","schema":{"type":"integer","uniqueItems":true}},{"name":"orphanDependents","in":"query","description":"Deprecated: please use the PropagationPolicy, this field will be deprecated in 1.7. Should the dependent objects be orphaned. If true/false, the \"orphan\" finalizer will be added to/removed from the object's finalizers list. Either this field or PropagationPolicy may be set, but not both.","schema":{"type":"boolean","uniqueItems":true}},{"name":"propagationPolicy","in":"query","description":"Whether and how garbage collection will be performed. Either this field or OrphanDependents may be set, but not both. The default policy is decided by the existing finalizer set in the metadata.finalizers and the resource-specific default policy. Acceptable values are: 'Orphan' - orphan the dependents; 'Background' - allow the garbage collector to delete the dependents in the background; 'Foreground' - a cascading policy that deletes all dependents in the foreground.","schema":{"type":"string","uniqueItems":true}}],"requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/io.k8s.apimachinery.pkg.apis.meta.v1.DeleteOptions"}},"application/yaml":{"schema":{"$ref":"#/components/schemas/io.k8s.apimachinery.pkg.apis.meta.v1.DeleteOptions"}}}},"responses":{"200":{"description":"OK","content":{"application/json":{"schema":{"$ref":"#/components/schemas/io.k8s.apimachinery.pkg.apis.meta.v1.Status"}},"application/yaml":{"schema":{"$ref":"#/components/schemas/io.k8s.apimachinery.pkg.apis.meta.v1.Status"}}}},"202":{"description":"Accepted","content":{"application/json":{"schema":{"$ref":"#/components/schemas/io.k8s.apimachinery.pkg.apis.meta.v1.Status"}},"application/yaml":{"schema":{"$ref":"#/components/schemas/io.k8s.apimachinery.pkg.apis.meta.v1.Status"}}}},"401":{"description":"Unauthorized"}},"x-kubernetes-action":"delete","x-kubernetes-group-version-kind":{"group":"mongodb.com","version":"v1","kind":"MongoDBMulti"}},"patch":{"tags":["mongodbCom_v1"],"description":"partially update the specified MongoDBMulti","operationId":"patchMongodbComV1NamespacedMongoDBMulti","parameters":[{"name":"dryRun","in":"query","description":"When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed","schema":{"type":"string","uniqueItems":true}},{"name":"fieldManager","in":"query","description":"fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint. This field is required for apply requests (application/apply-patch) but optional for non-apply patch types (JsonPatch, MergePatch, StrategicMergePatch).","schema":{"type":"string","uniqueItems":true}},{"name":"fieldValidation","in":"query","description":"fieldValidation instructs the server on how to handle objects in the request (POST/PUT/PATCH) containing unknown or duplicate fields. Valid values are: - Ignore: This will ignore any unknown fields that are silently dropped from the object, and will ignore all but the last duplicate field that the decoder encounters. This is the default behavior prior to v1.23. - Warn: This will send a warning via the standard warning response header for each unknown field that is dropped from the object, and for each duplicate field that is encountered. The request will still succeed if there are no other errors, and will only persist the last of any duplicate fields. This is the default in v1.23+ - Strict: This will fail the request with a BadRequest error if any unknown fields would be dropped from the object, or if any duplicate fields are present. The error returned from the server will contain all unknown and duplicate fields encountered.","schema":{"type":"string","uniqueItems":true}},{"name":"force","in":"query","description":"Force is going to \"force\" Apply requests. It means user will re-acquire conflicting fields owned by other people. Force flag must be unset for non-apply patch requests.","schema":{"type":"boolean","uniqueItems":true}}],"requestBody":{"content":{"application/apply-patch+yaml":{"schema":{"$ref":"#/components/schemas/io.k8s.apimachinery.pkg.apis.meta.v1.Patch"}},"application/json-patch+json":{"schema":{"$ref":"#/components/schemas/io.k8s.apimachinery.pkg.apis.meta.v1.Patch"}},"application/merge-patch+json":{"schema":{"$ref":"#/components/schemas/io.k8s.apimachinery.pkg.apis.meta.v1.Patch"}}}},"responses":{"200":{"description":"OK","content":{"application/json":{"schema":{"$ref":"#/components/schemas/com.mongodb.v1.MongoDBMulti"}},"application/yaml":{"schema":{"$ref":"#/components/schemas/com.mongodb.v1.MongoDBMulti"}}}},"401":{"description":"Unauthorized"}},"x-kubernetes-action":"patch","x-kubernetes-group-version-kind":{"group":"mongodb.com","version":"v1","kind":"MongoDBMulti"}},"parameters":[{"name":"name","in":"path","description":"name of the MongoDBMulti","required":true,"schema":{"type":"string","uniqueItems":true}},{"name":"namespace","in":"path","description":"object name and auth scope, such as for teams and projects","required":true,"schema":{"type":"string","uniqueItems":true}},{"name":"pretty","in":"query","description":"If 'true', then the output is pretty printed.","schema":{"type":"string","uniqueItems":true}}]},"/apis/mongodb.com/v1/namespaces/{namespace}/mongodbmulti/{name}/status":{"get":{"tags":["mongodbCom_v1"],"description":"read status of the specified MongoDBMulti","operationId":"readMongodbComV1NamespacedMongoDBMultiStatus","parameters":[{"name":"resourceVersion","in":"query","description":"resourceVersion sets a constraint on what resource versions a request may be served from. See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.\n\nDefaults to unset","schema":{"type":"string","uniqueItems":true}}],"responses":{"200":{"description":"OK","content":{"application/json":{"schema":{"$ref":"#/components/schemas/com.mongodb.v1.MongoDBMulti"}},"application/yaml":{"schema":{"$ref":"#/components/schemas/com.mongodb.v1.MongoDBMulti"}}}},"401":{"description":"Unauthorized"}},"x-kubernetes-action":"get","x-kubernetes-group-version-kind":{"group":"mongodb.com","version":"v1","kind":"MongoDBMulti"}},"put":{"tags":["mongodbCom_v1"],"description":"replace status of the specified MongoDBMulti","operationId":"replaceMongodbComV1NamespacedMongoDBMultiStatus","parameters":[{"name":"dryRun","in":"query","description":"When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed","schema":{"type":"string","uniqueItems":true}},{"name":"fieldManager","in":"query","description":"fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint.","schema":{"type":"string","uniqueItems":true}},{"name":"fieldValidation","in":"query","description":"fieldValidation instructs the server on how to handle objects in the request (POST/PUT/PATCH) containing unknown or duplicate fields. Valid values are: - Ignore: This will ignore any unknown fields that are silently dropped from the object, and will ignore all but the last duplicate field that the decoder encounters. This is the default behavior prior to v1.23. - Warn: This will send a warning via the standard warning response header for each unknown field that is dropped from the object, and for each duplicate field that is encountered. The request will still succeed if there are no other errors, and will only persist the last of any duplicate fields. This is the default in v1.23+ - Strict: This will fail the request with a BadRequest error if any unknown fields would be dropped from the object, or if any duplicate fields are present. The error returned from the server will contain all unknown and duplicate fields encountered.","schema":{"type":"string","uniqueItems":true}}],"requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/com.mongodb.v1.MongoDBMulti"}},"application/yaml":{"schema":{"$ref":"#/components/schemas/com.mongodb.v1.MongoDBMulti"}}}},"responses":{"200":{"description":"OK","content":{"application/json":{"schema":{"$ref":"#/components/schemas/com.mongodb.v1.MongoDBMulti"}},"application/yaml":{"schema":{"$ref":"#/components/schemas/com.mongodb.v1.MongoDBMulti"}}}},"201":{"description":"Created","content":{"application/json":{"schema":{"$ref":"#/components/schemas/com.mongodb.v1.MongoDBMulti"}},"application/yaml":{"schema":{"$ref":"#/components/schemas/com.mongodb.v1.MongoDBMulti"}}}},"401":{"description":"Unauthorized"}},"x-kubernetes-action":"put","x-kubernetes-group-version-kind":{"group":"mongodb.com","version":"v1","kind":"MongoDBMulti"}},"patch":{"tags":["mongodbCom_v1"],"description":"partially update status of the specified MongoDBMulti","operationId":"patchMongodbComV1NamespacedMongoDBMultiStatus","parameters":[{"name":"dryRun","in":"query","description":"When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed","schema":{"type":"string","uniqueItems":true}},{"name":"fieldManager","in":"query","description":"fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint. This field is required for apply requests (application/apply-patch) but optional for non-apply patch types (JsonPatch, MergePatch, StrategicMergePatch).","schema":{"type":"string","uniqueItems":true}},{"name":"fieldValidation","in":"query","description":"fieldValidation instructs the server on how to handle objects in the request (POST/PUT/PATCH) containing unknown or duplicate fields. Valid values are: - Ignore: This will ignore any unknown fields that are silently dropped from the object, and will ignore all but the last duplicate field that the decoder encounters. This is the default behavior prior to v1.23. - Warn: This will send a warning via the standard warning response header for each unknown field that is dropped from the object, and for each duplicate field that is encountered. The request will still succeed if there are no other errors, and will only persist the last of any duplicate fields. This is the default in v1.23+ - Strict: This will fail the request with a BadRequest error if any unknown fields would be dropped from the object, or if any duplicate fields are present. The error returned from the server will contain all unknown and duplicate fields encountered.","schema":{"type":"string","uniqueItems":true}},{"name":"force","in":"query","description":"Force is going to \"force\" Apply requests. It means user will re-acquire conflicting fields owned by other people. Force flag must be unset for non-apply patch requests.","schema":{"type":"boolean","uniqueItems":true}}],"requestBody":{"content":{"application/apply-patch+yaml":{"schema":{"$ref":"#/components/schemas/io.k8s.apimachinery.pkg.apis.meta.v1.Patch"}},"application/json-patch+json":{"schema":{"$ref":"#/components/schemas/io.k8s.apimachinery.pkg.apis.meta.v1.Patch"}},"application/merge-patch+json":{"schema":{"$ref":"#/components/schemas/io.k8s.apimachinery.pkg.apis.meta.v1.Patch"}}}},"responses":{"200":{"description":"OK","content":{"application/json":{"schema":{"$ref":"#/components/schemas/com.mongodb.v1.MongoDBMulti"}},"application/yaml":{"schema":{"$ref":"#/components/schemas/com.mongodb.v1.MongoDBMulti"}}}},"401":{"description":"Unauthorized"}},"x-kubernetes-action":"patch","x-kubernetes-group-version-kind":{"group":"mongodb.com","version":"v1","kind":"MongoDBMulti"}},"parameters":[{"name":"name","in":"path","description":"name of the MongoDBMulti","required":true,"schema":{"type":"string","uniqueItems":true}},{"name":"namespace","in":"path","description":"object name and auth scope, such as for teams and projects","required":true,"schema":{"type":"string","uniqueItems":true}},{"name":"pretty","in":"query","description":"If 'true', then the output is pretty printed.","schema":{"type":"string","uniqueItems":true}}]},"/apis/mongodb.com/v1/namespaces/{namespace}/mongodbmulticluster":{"get":{"tags":["mongodbCom_v1"],"description":"list objects of kind MongoDBMultiCluster","operationId":"listMongodbComV1NamespacedMongoDBMultiCluster","parameters":[{"name":"allowWatchBookmarks","in":"query","description":"allowWatchBookmarks requests watch events with type \"BOOKMARK\". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server's discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored.","schema":{"type":"boolean","uniqueItems":true}},{"name":"continue","in":"query","description":"The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the response, as long as their keys are after the \"next key\".\n\nThis field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications.","schema":{"type":"string","uniqueItems":true}},{"name":"fieldSelector","in":"query","description":"A selector to restrict the list of returned objects by their fields. Defaults to everything.","schema":{"type":"string","uniqueItems":true}},{"name":"labelSelector","in":"query","description":"A selector to restrict the list of returned objects by their labels. Defaults to everything.","schema":{"type":"string","uniqueItems":true}},{"name":"limit","in":"query","description":"limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.","schema":{"type":"integer","uniqueItems":true}},{"name":"resourceVersion","in":"query","description":"resourceVersion sets a constraint on what resource versions a request may be served from. See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.\n\nDefaults to unset","schema":{"type":"string","uniqueItems":true}},{"name":"resourceVersionMatch","in":"query","description":"resourceVersionMatch determines how resourceVersion is applied to list calls. It is highly recommended that resourceVersionMatch be set for list calls where resourceVersion is set See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.\n\nDefaults to unset","schema":{"type":"string","uniqueItems":true}},{"name":"sendInitialEvents","in":"query","description":"`sendInitialEvents=true` may be set together with `watch=true`. In that case, the watch stream will begin with synthetic events to produce the current state of objects in the collection. Once all such events have been sent, a synthetic \"Bookmark\" event  will be sent. The bookmark will report the ResourceVersion (RV) corresponding to the set of objects, and be marked with `\"k8s.io/initial-events-end\": \"true\"` annotation. Afterwards, the watch stream will proceed as usual, sending watch events corresponding to changes (subsequent to the RV) to objects watched.\n\nWhen `sendInitialEvents` option is set, we require `resourceVersionMatch` option to also be set. The semantic of the watch request is as following: - `resourceVersionMatch` = NotOlderThan\n  is interpreted as \"data at least as new as the provided `resourceVersion`\"\n  and the bookmark event is send when the state is synced\n  to a `resourceVersion` at least as fresh as the one provided by the ListOptions.\n  If `resourceVersion` is unset, this is interpreted as \"consistent read\" and the\n  bookmark event is send when the state is synced at least to the moment\n  when request started being processed.\n- `resourceVersionMatch` set to any other value or unset\n  Invalid error is returned.\n\nDefaults to true if `resourceVersion=\"\"` or `resourceVersion=\"0\"` (for backward compatibility reasons) and to false otherwise.","schema":{"type":"boolean","uniqueItems":true}},{"name":"timeoutSeconds","in":"query","description":"Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity.","schema":{"type":"integer","uniqueItems":true}},{"name":"watch","in":"query","description":"Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.","schema":{"type":"boolean","uniqueItems":true}}],"responses":{"200":{"description":"OK","content":{"application/json":{"schema":{"$ref":"#/components/schemas/com.mongodb.v1.MongoDBMultiClusterList"}},"application/yaml":{"schema":{"$ref":"#/components/schemas/com.mongodb.v1.MongoDBMultiClusterList"}}}},"401":{"description":"Unauthorized"}},"x-kubernetes-action":"list","x-kubernetes-group-version-kind":{"group":"mongodb.com","version":"v1","kind":"MongoDBMultiCluster"}},"post":{"tags":["mongodbCom_v1"],"description":"create a MongoDBMultiCluster","operationId":"createMongodbComV1NamespacedMongoDBMultiCluster","parameters":[{"name":"dryRun","in":"query","description":"When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed","schema":{"type":"string","uniqueItems":true}},{"name":"fieldManager","in":"query","description":"fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint.","schema":{"type":"string","uniqueItems":true}},{"name":"fieldValidation","in":"query","description":"fieldValidation instructs the server on how to handle objects in the request (POST/PUT/PATCH) containing unknown or duplicate fields. Valid values are: - Ignore: This will ignore any unknown fields that are silently dropped from the object, and will ignore all but the last duplicate field that the decoder encounters. This is the default behavior prior to v1.23. - Warn: This will send a warning via the standard warning response header for each unknown field that is dropped from the object, and for each duplicate field that is encountered. The request will still succeed if there are no other errors, and will only persist the last of any duplicate fields. This is the default in v1.23+ - Strict: This will fail the request with a BadRequest error if any unknown fields would be dropped from the object, or if any duplicate fields are present. The error returned from the server will contain all unknown and duplicate fields encountered.","schema":{"type":"string","uniqueItems":true}}],"requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/com.mongodb.v1.MongoDBMultiCluster"}},"application/yaml":{"schema":{"$ref":"#/components/schemas/com.mongodb.v1.MongoDBMultiCluster"}}}},"responses":{"200":{"description":"OK","content":{"application/json":{"schema":{"$ref":"#/components/schemas/com.mongodb.v1.MongoDBMultiCluster"}},"application/yaml":{"schema":{"$ref":"#/components/schemas/com.mongodb.v1.MongoDBMultiCluster"}}}},"201":{"description":"Created","content":{"application/json":{"schema":{"$ref":"#/components/schemas/com.mongodb.v1.MongoDBMultiCluster"}},"application/yaml":{"schema":{"$ref":"#/components/schemas/com.mongodb.v1.MongoDBMultiCluster"}}}},"202":{"description":"Accepted","content":{"application/json":{"schema":{"$ref":"#/components/schemas/com.mongodb.v1.MongoDBMultiCluster"}},"application/yaml":{"schema":{"$ref":"#/components/schemas/com.mongodb.v1.MongoDBMultiCluster"}}}},"401":{"description":"Unauthorized"}},"x-kubernetes-action":"post","x-kubernetes-group-version-kind":{"group":"mongodb.com","version":"v1","kind":"MongoDBMultiCluster"}},"delete":{"tags":["mongodbCom_v1"],"description":"delete collection of MongoDBMultiCluster","operationId":"deleteMongodbComV1CollectionNamespacedMongoDBMultiCluster","parameters":[{"name":"allowWatchBookmarks","in":"query","description":"allowWatchBookmarks requests watch events with type \"BOOKMARK\". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server's discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored.","schema":{"type":"boolean","uniqueItems":true}},{"name":"continue","in":"query","description":"The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the response, as long as their keys are after the \"next key\".\n\nThis field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications.","schema":{"type":"string","uniqueItems":true}},{"name":"fieldSelector","in":"query","description":"A selector to restrict the list of returned objects by their fields. Defaults to everything.","schema":{"type":"string","uniqueItems":true}},{"name":"labelSelector","in":"query","description":"A selector to restrict the list of returned objects by their labels. Defaults to everything.","schema":{"type":"string","uniqueItems":true}},{"name":"limit","in":"query","description":"limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.","schema":{"type":"integer","uniqueItems":true}},{"name":"resourceVersion","in":"query","description":"resourceVersion sets a constraint on what resource versions a request may be served from. See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.\n\nDefaults to unset","schema":{"type":"string","uniqueItems":true}},{"name":"resourceVersionMatch","in":"query","description":"resourceVersionMatch determines how resourceVersion is applied to list calls. It is highly recommended that resourceVersionMatch be set for list calls where resourceVersion is set See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.\n\nDefaults to unset","schema":{"type":"string","uniqueItems":true}},{"name":"sendInitialEvents","in":"query","description":"`sendInitialEvents=true` may be set together with `watch=true`. In that case, the watch stream will begin with synthetic events to produce the current state of objects in the collection. Once all such events have been sent, a synthetic \"Bookmark\" event  will be sent. The bookmark will report the ResourceVersion (RV) corresponding to the set of objects, and be marked with `\"k8s.io/initial-events-end\": \"true\"` annotation. Afterwards, the watch stream will proceed as usual, sending watch events corresponding to changes (subsequent to the RV) to objects watched.\n\nWhen `sendInitialEvents` option is set, we require `resourceVersionMatch` option to also be set. The semantic of the watch request is as following: - `resourceVersionMatch` = NotOlderThan\n  is interpreted as \"data at least as new as the provided `resourceVersion`\"\n  and the bookmark event is send when the state is synced\n  to a `resourceVersion` at least as fresh as the one provided by the ListOptions.\n  If `resourceVersion` is unset, this is interpreted as \"consistent read\" and the\n  bookmark event is send when the state is synced at least to the moment\n  when request started being processed.\n- `resourceVersionMatch` set to any other value or unset\n  Invalid error is returned.\n\nDefaults to true if `resourceVersion=\"\"` or `resourceVersion=\"0\"` (for backward compatibility reasons) and to false otherwise.","schema":{"type":"boolean","uniqueItems":true}},{"name":"timeoutSeconds","in":"query","description":"Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity.","schema":{"type":"integer","uniqueItems":true}},{"name":"watch","in":"query","description":"Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.","schema":{"type":"boolean","uniqueItems":true}}],"responses":{"200":{"description":"OK","content":{"application/json":{"schema":{"$ref":"#/components/schemas/io.k8s.apimachinery.pkg.apis.meta.v1.Status"}},"application/yaml":{"schema":{"$ref":"#/components/schemas/io.k8s.apimachinery.pkg.apis.meta.v1.Status"}}}},"401":{"description":"Unauthorized"}},"x-kubernetes-action":"deletecollection","x-kubernetes-group-version-kind":{"group":"mongodb.com","version":"v1","kind":"MongoDBMultiCluster"}},"parameters":[{"name":"namespace","in":"path","description":"object name and auth scope, such as for teams and projects","required":true,"schema":{"type":"string","uniqueItems":true}},{"name":"pretty","in":"query","description":"If 'true', then the output is pretty printed.","schema":{"type":"string","uniqueItems":true}}]},"/apis/mongodb.com/v1/namespaces/{namespace}/mongodbmulticluster/{name}":{"get":{"tags":["mongodbCom_v1"],"description":"read the specified MongoDBMultiCluster","operationId":"readMongodbComV1NamespacedMongoDBMultiCluster","parameters":[{"name":"resourceVersion","in":"query","description":"resourceVersion sets a constraint on what resource versions a request may be served from. See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.\n\nDefaults to unset","schema":{"type":"string","uniqueItems":true}}],"responses":{"200":{"description":"OK","content":{"application/json":{"schema":{"$ref":"#/components/schemas/com.mongodb.v1.MongoDBMultiCluster"}},"application/yaml":{"schema":{"$ref":"#/components/schemas/com.mongodb.v1.MongoDBMultiCluster"}}}},"401":{"description":"Unauthorized"}},"x-kubernetes-action":"get","x-kubernetes-group-version-kind":{"group":"mongodb.com","version":"v1","kind":"MongoDBMultiCluster"}},"put":{"tags":["mongodbCom_v1"],"description":"replace the specified MongoDBMultiCluster","operationId":"replaceMongodbComV1NamespacedMongoDBMultiCluster","parameters":[{"name":"dryRun","in":"query","description":"When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed","schema":{"type":"string","uniqueItems":true}},{"name":"fieldManager","in":"query","description":"fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint.","schema":{"type":"string","uniqueItems":true}},{"name":"fieldValidation","in":"query","description":"fieldValidation instructs the server on how to handle objects in the request (POST/PUT/PATCH) containing unknown or duplicate fields. Valid values are: - Ignore: This will ignore any unknown fields that are silently dropped from the object, and will ignore all but the last duplicate field that the decoder encounters. This is the default behavior prior to v1.23. - Warn: This will send a warning via the standard warning response header for each unknown field that is dropped from the object, and for each duplicate field that is encountered. The request will still succeed if there are no other errors, and will only persist the last of any duplicate fields. This is the default in v1.23+ - Strict: This will fail the request with a BadRequest error if any unknown fields would be dropped from the object, or if any duplicate fields are present. The error returned from the server will contain all unknown and duplicate fields encountered.","schema":{"type":"string","uniqueItems":true}}],"requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/com.mongodb.v1.MongoDBMultiCluster"}},"application/yaml":{"schema":{"$ref":"#/components/schemas/com.mongodb.v1.MongoDBMultiCluster"}}}},"responses":{"200":{"description":"OK","content":{"application/json":{"schema":{"$ref":"#/components/schemas/com.mongodb.v1.MongoDBMultiCluster"}},"application/yaml":{"schema":{"$ref":"#/components/schemas/com.mongodb.v1.MongoDBMultiCluster"}}}},"201":{"description":"Created","content":{"application/json":{"schema":{"$ref":"#/components/schemas/com.mongodb.v1.MongoDBMultiCluster"}},"application/yaml":{"schema":{"$ref":"#/components/schemas/com.mongodb.v1.MongoDBMultiCluster"}}}},"401":{"description":"Unauthorized"}},"x-kubernetes-action":"put","x-kubernetes-group-version-kind":{"group":"mongodb.com","version":"v1","kind":"MongoDBMultiCluster"}},"delete":{"tags":["mongodbCom_v1"],"description":"delete a MongoDBMultiCluster","operationId":"deleteMongodbComV1NamespacedMongoDBMultiCluster","parameters":[{"name":"dryRun","in":"query","description":"When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed","schema":{"type":"string","uniqueItems":true}},{"name":"gracePeriodSeconds","in":"query","description":"The duration in seconds before the object should be deleted. Value must be non-negative integer. The value zero indicates delete immediately. If this value is nil, the default grace period for the specified type will be used. Defaults to a per object value if not specified. zero means delete immediately.","schema":{"type":"integer","uniqueItems":true}},{"name":"orphanDependents","in":"query","description":"Deprecated: please use the PropagationPolicy, this field will be deprecated in 1.7. Should the dependent objects be orphaned. If true/false, the \"orphan\" finalizer will be added to/removed from the object's finalizers list. Either this field or PropagationPolicy may be set, but not both.","schema":{"type":"boolean","uniqueItems":true}},{"name":"propagationPolicy","in":"query","description":"Whether and how garbage collection will be performed. Either this field or OrphanDependents may be set, but not both. The default policy is decided by the existing finalizer set in the metadata.finalizers and the resource-specific default policy. Acceptable values are: 'Orphan' - orphan the dependents; 'Background' - allow the garbage collector to delete the dependents in the background; 'Foreground' - a cascading policy that deletes all dependents in the foreground.","schema":{"type":"string","uniqueItems":true}}],"requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/io.k8s.apimachinery.pkg.apis.meta.v1.DeleteOptions"}},"application/yaml":{"schema":{"$ref":"#/components/schemas/io.k8s.apimachinery.pkg.apis.meta.v1.DeleteOptions"}}}},"responses":{"200":{"description":"OK","content":{"application/json":{"schema":{"$ref":"#/components/schemas/io.k8s.apimachinery.pkg.apis.meta.v1.Status"}},"application/yaml":{"schema":{"$ref":"#/components/schemas/io.k8s.apimachinery.pkg.apis.meta.v1.Status"}}}},"202":{"description":"Accepted","content":{"application/json":{"schema":{"$ref":"#/components/schemas/io.k8s.apimachinery.pkg.apis.meta.v1.Status"}},"application/yaml":{"schema":{"$ref":"#/components/schemas/io.k8s.apimachinery.pkg.apis.meta.v1.Status"}}}},"401":{"description":"Unauthorized"}},"x-kubernetes-action":"delete","x-kubernetes-group-version-kind":{"group":"mongodb.com","version":"v1","kind":"MongoDBMultiCluster"}},"patch":{"tags":["mongodbCom_v1"],"description":"partially update the specified MongoDBMultiCluster","operationId":"patchMongodbComV1NamespacedMongoDBMultiCluster","parameters":[{"name":"dryRun","in":"query","description":"When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed","schema":{"type":"string","uniqueItems":true}},{"name":"fieldManager","in":"query","description":"fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint. This field is required for apply requests (application/apply-patch) but optional for non-apply patch types (JsonPatch, MergePatch, StrategicMergePatch).","schema":{"type":"string","uniqueItems":true}},{"name":"fieldValidation","in":"query","description":"fieldValidation instructs the server on how to handle objects in the request (POST/PUT/PATCH) containing unknown or duplicate fields. Valid values are: - Ignore: This will ignore any unknown fields that are silently dropped from the object, and will ignore all but the last duplicate field that the decoder encounters. This is the default behavior prior to v1.23. - Warn: This will send a warning via the standard warning response header for each unknown field that is dropped from the object, and for each duplicate field that is encountered. The request will still succeed if there are no other errors, and will only persist the last of any duplicate fields. This is the default in v1.23+ - Strict: This will fail the request with a BadRequest error if any unknown fields would be dropped from the object, or if any duplicate fields are present. The error returned from the server will contain all unknown and duplicate fields encountered.","schema":{"type":"string","uniqueItems":true}},{"name":"force","in":"query","description":"Force is going to \"force\" Apply requests. It means user will re-acquire conflicting fields owned by other people. Force flag must be unset for non-apply patch requests.","schema":{"type":"boolean","uniqueItems":true}}],"requestBody":{"content":{"application/apply-patch+yaml":{"schema":{"$ref":"#/components/schemas/io.k8s.apimachinery.pkg.apis.meta.v1.Patch"}},"application/json-patch+json":{"schema":{"$ref":"#/components/schemas/io.k8s.apimachinery.pkg.apis.meta.v1.Patch"}},"application/merge-patch+json":{"schema":{"$ref":"#/components/schemas/io.k8s.apimachinery.pkg.apis.meta.v1.Patch"}}}},"responses":{"200":{"description":"OK","content":{"application/json":{"schema":{"$ref":"#/components/schemas/com.mongodb.v1.MongoDBMultiCluster"}},"application/yaml":{"schema":{"$ref":"#/components/schemas/com.mongodb.v1.MongoDBMultiCluster"}}}},"401":{"description":"Unauthorized"}},"x-kubernetes-action":"patch","x-kubernetes-group-version-kind":{"group":"mongodb.com","version":"v1","kind":"MongoDBMultiCluster"}},"parameters":[{"name":"name","in":"path","description":"name of the MongoDBMultiCluster","required":true,"schema":{"type":"string","uniqueItems":true}},{"name":"namespace","in":"path","description":"object name and auth scope, such as for teams and projects","required":true,"schema":{"type":"string","uniqueItems":true}},{"name":"pretty","in":"query","description":"If 'true', then the output is pretty printed.","schema":{"type":"string","uniqueItems":true}}]},"/apis/mongodb.com/v1/namespaces/{namespace}/mongodbmulticluster/{name}/status":{"get":{"tags":["mongodbCom_v1"],"description":"read status of the specified MongoDBMultiCluster","operationId":"readMongodbComV1NamespacedMongoDBMultiClusterStatus","parameters":[{"name":"resourceVersion","in":"query","description":"resourceVersion sets a constraint on what resource versions a request may be served from. See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.\n\nDefaults to unset","schema":{"type":"string","uniqueItems":true}}],"responses":{"200":{"description":"OK","content":{"application/json":{"schema":{"$ref":"#/components/schemas/com.mongodb.v1.MongoDBMultiCluster"}},"application/yaml":{"schema":{"$ref":"#/components/schemas/com.mongodb.v1.MongoDBMultiCluster"}}}},"401":{"description":"Unauthorized"}},"x-kubernetes-action":"get","x-kubernetes-group-version-kind":{"group":"mongodb.com","version":"v1","kind":"MongoDBMultiCluster"}},"put":{"tags":["mongodbCom_v1"],"description":"replace status of the specified MongoDBMultiCluster","operationId":"replaceMongodbComV1NamespacedMongoDBMultiClusterStatus","parameters":[{"name":"dryRun","in":"query","description":"When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed","schema":{"type":"string","uniqueItems":true}},{"name":"fieldManager","in":"query","description":"fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint.","schema":{"type":"string","uniqueItems":true}},{"name":"fieldValidation","in":"query","description":"fieldValidation instructs the server on how to handle objects in the request (POST/PUT/PATCH) containing unknown or duplicate fields. Valid values are: - Ignore: This will ignore any unknown fields that are silently dropped from the object, and will ignore all but the last duplicate field that the decoder encounters. This is the default behavior prior to v1.23. - Warn: This will send a warning via the standard warning response header for each unknown field that is dropped from the object, and for each duplicate field that is encountered. The request will still succeed if there are no other errors, and will only persist the last of any duplicate fields. This is the default in v1.23+ - Strict: This will fail the request with a BadRequest error if any unknown fields would be dropped from the object, or if any duplicate fields are present. The error returned from the server will contain all unknown and duplicate fields encountered.","schema":{"type":"string","uniqueItems":true}}],"requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/com.mongodb.v1.MongoDBMultiCluster"}},"application/yaml":{"schema":{"$ref":"#/components/schemas/com.mongodb.v1.MongoDBMultiCluster"}}}},"responses":{"200":{"description":"OK","content":{"application/json":{"schema":{"$ref":"#/components/schemas/com.mongodb.v1.MongoDBMultiCluster"}},"application/yaml":{"schema":{"$ref":"#/components/schemas/com.mongodb.v1.MongoDBMultiCluster"}}}},"201":{"description":"Created","content":{"application/json":{"schema":{"$ref":"#/components/schemas/com.mongodb.v1.MongoDBMultiCluster"}},"application/yaml":{"schema":{"$ref":"#/components/schemas/com.mongodb.v1.MongoDBMultiCluster"}}}},"401":{"description":"Unauthorized"}},"x-kubernetes-action":"put","x-kubernetes-group-version-kind":{"group":"mongodb.com","version":"v1","kind":"MongoDBMultiCluster"}},"patch":{"tags":["mongodbCom_v1"],"description":"partially update status of the specified MongoDBMultiCluster","operationId":"patchMongodbComV1NamespacedMongoDBMultiClusterStatus","parameters":[{"name":"dryRun","in":"query","description":"When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed","schema":{"type":"string","uniqueItems":true}},{"name":"fieldManager","in":"query","description":"fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint. This field is required for apply requests (application/apply-patch) but optional for non-apply patch types (JsonPatch, MergePatch, StrategicMergePatch).","schema":{"type":"string","uniqueItems":true}},{"name":"fieldValidation","in":"query","description":"fieldValidation instructs the server on how to handle objects in the request (POST/PUT/PATCH) containing unknown or duplicate fields. Valid values are: - Ignore: This will ignore any unknown fields that are silently dropped from the object, and will ignore all but the last duplicate field that the decoder encounters. This is the default behavior prior to v1.23. - Warn: This will send a warning via the standard warning response header for each unknown field that is dropped from the object, and for each duplicate field that is encountered. The request will still succeed if there are no other errors, and will only persist the last of any duplicate fields. This is the default in v1.23+ - Strict: This will fail the request with a BadRequest error if any unknown fields would be dropped from the object, or if any duplicate fields are present. The error returned from the server will contain all unknown and duplicate fields encountered.","schema":{"type":"string","uniqueItems":true}},{"name":"force","in":"query","description":"Force is going to \"force\" Apply requests. It means user will re-acquire conflicting fields owned by other people. Force flag must be unset for non-apply patch requests.","schema":{"type":"boolean","uniqueItems":true}}],"requestBody":{"content":{"application/apply-patch+yaml":{"schema":{"$ref":"#/components/schemas/io.k8s.apimachinery.pkg.apis.meta.v1.Patch"}},"application/json-patch+json":{"schema":{"$ref":"#/components/schemas/io.k8s.apimachinery.pkg.apis.meta.v1.Patch"}},"application/merge-patch+json":{"schema":{"$ref":"#/components/schemas/io.k8s.apimachinery.pkg.apis.meta.v1.Patch"}}}},"responses":{"200":{"description":"OK","content":{"application/json":{"schema":{"$ref":"#/components/schemas/com.mongodb.v1.MongoDBMultiCluster"}},"application/yaml":{"schema":{"$ref":"#/components/schemas/com.mongodb.v1.MongoDBMultiCluster"}}}},"401":{"description":"Unauthorized"}},"x-kubernetes-action":"patch","x-kubernetes-group-version-kind":{"group":"mongodb.com","version":"v1","kind":"MongoDBMultiCluster"}},"parameters":[{"name":"name","in":"path","description":"name of the MongoDBMultiCluster","required":true,"schema":{"type":"string","uniqueItems":true}},{"name":"namespace","in":"path","description":"object name and auth scope, such as for teams and projects","required":true,"schema":{"type":"string","uniqueItems":true}},{"name":"pretty","in":"query","description":"If 'true', then the output is pretty printed.","schema":{"type":"string","uniqueItems":true}}]},"/apis/mongodb.com/v1/namespaces/{namespace}/mongodbusers":{"get":{"tags":["mongodbCom_v1"],"description":"list objects of kind MongoDBUser","operationId":"listMongodbComV1NamespacedMongoDBUser","parameters":[{"name":"allowWatchBookmarks","in":"query","description":"allowWatchBookmarks requests watch events with type \"BOOKMARK\". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server's discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored.","schema":{"type":"boolean","uniqueItems":true}},{"name":"continue","in":"query","description":"The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the response, as long as their keys are after the \"next key\".\n\nThis field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications.","schema":{"type":"string","uniqueItems":true}},{"name":"fieldSelector","in":"query","description":"A selector to restrict the list of returned objects by their fields. Defaults to everything.","schema":{"type":"string","uniqueItems":true}},{"name":"labelSelector","in":"query","description":"A selector to restrict the list of returned objects by their labels. Defaults to everything.","schema":{"type":"string","uniqueItems":true}},{"name":"limit","in":"query","description":"limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.","schema":{"type":"integer","uniqueItems":true}},{"name":"resourceVersion","in":"query","description":"resourceVersion sets a constraint on what resource versions a request may be served from. See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.\n\nDefaults to unset","schema":{"type":"string","uniqueItems":true}},{"name":"resourceVersionMatch","in":"query","description":"resourceVersionMatch determines how resourceVersion is applied to list calls. It is highly recommended that resourceVersionMatch be set for list calls where resourceVersion is set See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.\n\nDefaults to unset","schema":{"type":"string","uniqueItems":true}},{"name":"sendInitialEvents","in":"query","description":"`sendInitialEvents=true` may be set together with `watch=true`. In that case, the watch stream will begin with synthetic events to produce the current state of objects in the collection. Once all such events have been sent, a synthetic \"Bookmark\" event  will be sent. The bookmark will report the ResourceVersion (RV) corresponding to the set of objects, and be marked with `\"k8s.io/initial-events-end\": \"true\"` annotation. Afterwards, the watch stream will proceed as usual, sending watch events corresponding to changes (subsequent to the RV) to objects watched.\n\nWhen `sendInitialEvents` option is set, we require `resourceVersionMatch` option to also be set. The semantic of the watch request is as following: - `resourceVersionMatch` = NotOlderThan\n  is interpreted as \"data at least as new as the provided `resourceVersion`\"\n  and the bookmark event is send when the state is synced\n  to a `resourceVersion` at least as fresh as the one provided by the ListOptions.\n  If `resourceVersion` is unset, this is interpreted as \"consistent read\" and the\n  bookmark event is send when the state is synced at least to the moment\n  when request started being processed.\n- `resourceVersionMatch` set to any other value or unset\n  Invalid error is returned.\n\nDefaults to true if `resourceVersion=\"\"` or `resourceVersion=\"0\"` (for backward compatibility reasons) and to false otherwise.","schema":{"type":"boolean","uniqueItems":true}},{"name":"timeoutSeconds","in":"query","description":"Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity.","schema":{"type":"integer","uniqueItems":true}},{"name":"watch","in":"query","description":"Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.","schema":{"type":"boolean","uniqueItems":true}}],"responses":{"200":{"description":"OK","content":{"application/json":{"schema":{"$ref":"#/components/schemas/com.mongodb.v1.MongoDBUserList"}},"application/yaml":{"schema":{"$ref":"#/components/schemas/com.mongodb.v1.MongoDBUserList"}}}},"401":{"description":"Unauthorized"}},"x-kubernetes-action":"list","x-kubernetes-group-version-kind":{"group":"mongodb.com","version":"v1","kind":"MongoDBUser"}},"post":{"tags":["mongodbCom_v1"],"description":"create a MongoDBUser","operationId":"createMongodbComV1NamespacedMongoDBUser","parameters":[{"name":"dryRun","in":"query","description":"When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed","schema":{"type":"string","uniqueItems":true}},{"name":"fieldManager","in":"query","description":"fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint.","schema":{"type":"string","uniqueItems":true}},{"name":"fieldValidation","in":"query","description":"fieldValidation instructs the server on how to handle objects in the request (POST/PUT/PATCH) containing unknown or duplicate fields. Valid values are: - Ignore: This will ignore any unknown fields that are silently dropped from the object, and will ignore all but the last duplicate field that the decoder encounters. This is the default behavior prior to v1.23. - Warn: This will send a warning via the standard warning response header for each unknown field that is dropped from the object, and for each duplicate field that is encountered. The request will still succeed if there are no other errors, and will only persist the last of any duplicate fields. This is the default in v1.23+ - Strict: This will fail the request with a BadRequest error if any unknown fields would be dropped from the object, or if any duplicate fields are present. The error returned from the server will contain all unknown and duplicate fields encountered.","schema":{"type":"string","uniqueItems":true}}],"requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/com.mongodb.v1.MongoDBUser"}},"application/yaml":{"schema":{"$ref":"#/components/schemas/com.mongodb.v1.MongoDBUser"}}}},"responses":{"200":{"description":"OK","content":{"application/json":{"schema":{"$ref":"#/components/schemas/com.mongodb.v1.MongoDBUser"}},"application/yaml":{"schema":{"$ref":"#/components/schemas/com.mongodb.v1.MongoDBUser"}}}},"201":{"description":"Created","content":{"application/json":{"schema":{"$ref":"#/components/schemas/com.mongodb.v1.MongoDBUser"}},"application/yaml":{"schema":{"$ref":"#/components/schemas/com.mongodb.v1.MongoDBUser"}}}},"202":{"description":"Accepted","content":{"application/json":{"schema":{"$ref":"#/components/schemas/com.mongodb.v1.MongoDBUser"}},"application/yaml":{"schema":{"$ref":"#/components/schemas/com.mongodb.v1.MongoDBUser"}}}},"401":{"description":"Unauthorized"}},"x-kubernetes-action":"post","x-kubernetes-group-version-kind":{"group":"mongodb.com","version":"v1","kind":"MongoDBUser"}},"delete":{"tags":["mongodbCom_v1"],"description":"delete collection of MongoDBUser","operationId":"deleteMongodbComV1CollectionNamespacedMongoDBUser","parameters":[{"name":"allowWatchBookmarks","in":"query","description":"allowWatchBookmarks requests watch events with type \"BOOKMARK\". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server's discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored.","schema":{"type":"boolean","uniqueItems":true}},{"name":"continue","in":"query","description":"The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the response, as long as their keys are after the \"next key\".\n\nThis field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications.","schema":{"type":"string","uniqueItems":true}},{"name":"fieldSelector","in":"query","description":"A selector to restrict the list of returned objects by their fields. Defaults to everything.","schema":{"type":"string","uniqueItems":true}},{"name":"labelSelector","in":"query","description":"A selector to restrict the list of returned objects by their labels. Defaults to everything.","schema":{"type":"string","uniqueItems":true}},{"name":"limit","in":"query","description":"limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.","schema":{"type":"integer","uniqueItems":true}},{"name":"resourceVersion","in":"query","description":"resourceVersion sets a constraint on what resource versions a request may be served from. See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.\n\nDefaults to unset","schema":{"type":"string","uniqueItems":true}},{"name":"resourceVersionMatch","in":"query","description":"resourceVersionMatch determines how resourceVersion is applied to list calls. It is highly recommended that resourceVersionMatch be set for list calls where resourceVersion is set See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.\n\nDefaults to unset","schema":{"type":"string","uniqueItems":true}},{"name":"sendInitialEvents","in":"query","description":"`sendInitialEvents=true` may be set together with `watch=true`. In that case, the watch stream will begin with synthetic events to produce the current state of objects in the collection. Once all such events have been sent, a synthetic \"Bookmark\" event  will be sent. The bookmark will report the ResourceVersion (RV) corresponding to the set of objects, and be marked with `\"k8s.io/initial-events-end\": \"true\"` annotation. Afterwards, the watch stream will proceed as usual, sending watch events corresponding to changes (subsequent to the RV) to objects watched.\n\nWhen `sendInitialEvents` option is set, we require `resourceVersionMatch` option to also be set. The semantic of the watch request is as following: - `resourceVersionMatch` = NotOlderThan\n  is interpreted as \"data at least as new as the provided `resourceVersion`\"\n  and the bookmark event is send when the state is synced\n  to a `resourceVersion` at least as fresh as the one provided by the ListOptions.\n  If `resourceVersion` is unset, this is interpreted as \"consistent read\" and the\n  bookmark event is send when the state is synced at least to the moment\n  when request started being processed.\n- `resourceVersionMatch` set to any other value or unset\n  Invalid error is returned.\n\nDefaults to true if `resourceVersion=\"\"` or `resourceVersion=\"0\"` (for backward compatibility reasons) and to false otherwise.","schema":{"type":"boolean","uniqueItems":true}},{"name":"timeoutSeconds","in":"query","description":"Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity.","schema":{"type":"integer","uniqueItems":true}},{"name":"watch","in":"query","description":"Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.","schema":{"type":"boolean","uniqueItems":true}}],"responses":{"200":{"description":"OK","content":{"application/json":{"schema":{"$ref":"#/components/schemas/io.k8s.apimachinery.pkg.apis.meta.v1.Status"}},"application/yaml":{"schema":{"$ref":"#/components/schemas/io.k8s.apimachinery.pkg.apis.meta.v1.Status"}}}},"401":{"description":"Unauthorized"}},"x-kubernetes-action":"deletecollection","x-kubernetes-group-version-kind":{"group":"mongodb.com","version":"v1","kind":"MongoDBUser"}},"parameters":[{"name":"namespace","in":"path","description":"object name and auth scope, such as for teams and projects","required":true,"schema":{"type":"string","uniqueItems":true}},{"name":"pretty","in":"query","description":"If 'true', then the output is pretty printed.","schema":{"type":"string","uniqueItems":true}}]},"/apis/mongodb.com/v1/namespaces/{namespace}/mongodbusers/{name}":{"get":{"tags":["mongodbCom_v1"],"description":"read the specified MongoDBUser","operationId":"readMongodbComV1NamespacedMongoDBUser","parameters":[{"name":"resourceVersion","in":"query","description":"resourceVersion sets a constraint on what resource versions a request may be served from. See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.\n\nDefaults to unset","schema":{"type":"string","uniqueItems":true}}],"responses":{"200":{"description":"OK","content":{"application/json":{"schema":{"$ref":"#/components/schemas/com.mongodb.v1.MongoDBUser"}},"application/yaml":{"schema":{"$ref":"#/components/schemas/com.mongodb.v1.MongoDBUser"}}}},"401":{"description":"Unauthorized"}},"x-kubernetes-action":"get","x-kubernetes-group-version-kind":{"group":"mongodb.com","version":"v1","kind":"MongoDBUser"}},"put":{"tags":["mongodbCom_v1"],"description":"replace the specified MongoDBUser","operationId":"replaceMongodbComV1NamespacedMongoDBUser","parameters":[{"name":"dryRun","in":"query","description":"When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed","schema":{"type":"string","uniqueItems":true}},{"name":"fieldManager","in":"query","description":"fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint.","schema":{"type":"string","uniqueItems":true}},{"name":"fieldValidation","in":"query","description":"fieldValidation instructs the server on how to handle objects in the request (POST/PUT/PATCH) containing unknown or duplicate fields. Valid values are: - Ignore: This will ignore any unknown fields that are silently dropped from the object, and will ignore all but the last duplicate field that the decoder encounters. This is the default behavior prior to v1.23. - Warn: This will send a warning via the standard warning response header for each unknown field that is dropped from the object, and for each duplicate field that is encountered. The request will still succeed if there are no other errors, and will only persist the last of any duplicate fields. This is the default in v1.23+ - Strict: This will fail the request with a BadRequest error if any unknown fields would be dropped from the object, or if any duplicate fields are present. The error returned from the server will contain all unknown and duplicate fields encountered.","schema":{"type":"string","uniqueItems":true}}],"requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/com.mongodb.v1.MongoDBUser"}},"application/yaml":{"schema":{"$ref":"#/components/schemas/com.mongodb.v1.MongoDBUser"}}}},"responses":{"200":{"description":"OK","content":{"application/json":{"schema":{"$ref":"#/components/schemas/com.mongodb.v1.MongoDBUser"}},"application/yaml":{"schema":{"$ref":"#/components/schemas/com.mongodb.v1.MongoDBUser"}}}},"201":{"description":"Created","content":{"application/json":{"schema":{"$ref":"#/components/schemas/com.mongodb.v1.MongoDBUser"}},"application/yaml":{"schema":{"$ref":"#/components/schemas/com.mongodb.v1.MongoDBUser"}}}},"401":{"description":"Unauthorized"}},"x-kubernetes-action":"put","x-kubernetes-group-version-kind":{"group":"mongodb.com","version":"v1","kind":"MongoDBUser"}},"delete":{"tags":["mongodbCom_v1"],"description":"delete a MongoDBUser","operationId":"deleteMongodbComV1NamespacedMongoDBUser","parameters":[{"name":"dryRun","in":"query","description":"When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed","schema":{"type":"string","uniqueItems":true}},{"name":"gracePeriodSeconds","in":"query","description":"The duration in seconds before the object should be deleted. Value must be non-negative integer. The value zero indicates delete immediately. If this value is nil, the default grace period for the specified type will be used. Defaults to a per object value if not specified. zero means delete immediately.","schema":{"type":"integer","uniqueItems":true}},{"name":"orphanDependents","in":"query","description":"Deprecated: please use the PropagationPolicy, this field will be deprecated in 1.7. Should the dependent objects be orphaned. If true/false, the \"orphan\" finalizer will be added to/removed from the object's finalizers list. Either this field or PropagationPolicy may be set, but not both.","schema":{"type":"boolean","uniqueItems":true}},{"name":"propagationPolicy","in":"query","description":"Whether and how garbage collection will be performed. Either this field or OrphanDependents may be set, but not both. The default policy is decided by the existing finalizer set in the metadata.finalizers and the resource-specific default policy. Acceptable values are: 'Orphan' - orphan the dependents; 'Background' - allow the garbage collector to delete the dependents in the background; 'Foreground' - a cascading policy that deletes all dependents in the foreground.","schema":{"type":"string","uniqueItems":true}}],"requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/io.k8s.apimachinery.pkg.apis.meta.v1.DeleteOptions"}},"application/yaml":{"schema":{"$ref":"#/components/schemas/io.k8s.apimachinery.pkg.apis.meta.v1.DeleteOptions"}}}},"responses":{"200":{"description":"OK","content":{"application/json":{"schema":{"$ref":"#/components/schemas/io.k8s.apimachinery.pkg.apis.meta.v1.Status"}},"application/yaml":{"schema":{"$ref":"#/components/schemas/io.k8s.apimachinery.pkg.apis.meta.v1.Status"}}}},"202":{"description":"Accepted","content":{"application/json":{"schema":{"$ref":"#/components/schemas/io.k8s.apimachinery.pkg.apis.meta.v1.Status"}},"application/yaml":{"schema":{"$ref":"#/components/schemas/io.k8s.apimachinery.pkg.apis.meta.v1.Status"}}}},"401":{"description":"Unauthorized"}},"x-kubernetes-action":"delete","x-kubernetes-group-version-kind":{"group":"mongodb.com","version":"v1","kind":"MongoDBUser"}},"patch":{"tags":["mongodbCom_v1"],"description":"partially update the specified MongoDBUser","operationId":"patchMongodbComV1NamespacedMongoDBUser","parameters":[{"name":"dryRun","in":"query","description":"When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed","schema":{"type":"string","uniqueItems":true}},{"name":"fieldManager","in":"query","description":"fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint. This field is required for apply requests (application/apply-patch) but optional for non-apply patch types (JsonPatch, MergePatch, StrategicMergePatch).","schema":{"type":"string","uniqueItems":true}},{"name":"fieldValidation","in":"query","description":"fieldValidation instructs the server on how to handle objects in the request (POST/PUT/PATCH) containing unknown or duplicate fields. Valid values are: - Ignore: This will ignore any unknown fields that are silently dropped from the object, and will ignore all but the last duplicate field that the decoder encounters. This is the default behavior prior to v1.23. - Warn: This will send a warning via the standard warning response header for each unknown field that is dropped from the object, and for each duplicate field that is encountered. The request will still succeed if there are no other errors, and will only persist the last of any duplicate fields. This is the default in v1.23+ - Strict: This will fail the request with a BadRequest error if any unknown fields would be dropped from the object, or if any duplicate fields are present. The error returned from the server will contain all unknown and duplicate fields encountered.","schema":{"type":"string","uniqueItems":true}},{"name":"force","in":"query","description":"Force is going to \"force\" Apply requests. It means user will re-acquire conflicting fields owned by other people. Force flag must be unset for non-apply patch requests.","schema":{"type":"boolean","uniqueItems":true}}],"requestBody":{"content":{"application/apply-patch+yaml":{"schema":{"$ref":"#/components/schemas/io.k8s.apimachinery.pkg.apis.meta.v1.Patch"}},"application/json-patch+json":{"schema":{"$ref":"#/components/schemas/io.k8s.apimachinery.pkg.apis.meta.v1.Patch"}},"application/merge-patch+json":{"schema":{"$ref":"#/components/schemas/io.k8s.apimachinery.pkg.apis.meta.v1.Patch"}}}},"responses":{"200":{"description":"OK","content":{"application/json":{"schema":{"$ref":"#/components/schemas/com.mongodb.v1.MongoDBUser"}},"application/yaml":{"schema":{"$ref":"#/components/schemas/com.mongodb.v1.MongoDBUser"}}}},"401":{"description":"Unauthorized"}},"x-kubernetes-action":"patch","x-kubernetes-group-version-kind":{"group":"mongodb.com","version":"v1","kind":"MongoDBUser"}},"parameters":[{"name":"name","in":"path","description":"name of the MongoDBUser","required":true,"schema":{"type":"string","uniqueItems":true}},{"name":"namespace","in":"path","description":"object name and auth scope, such as for teams and projects","required":true,"schema":{"type":"string","uniqueItems":true}},{"name":"pretty","in":"query","description":"If 'true', then the output is pretty printed.","schema":{"type":"string","uniqueItems":true}}]},"/apis/mongodb.com/v1/namespaces/{namespace}/mongodbusers/{name}/status":{"get":{"tags":["mongodbCom_v1"],"description":"read status of the specified MongoDBUser","operationId":"readMongodbComV1NamespacedMongoDBUserStatus","parameters":[{"name":"resourceVersion","in":"query","description":"resourceVersion sets a constraint on what resource versions a request may be served from. See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.\n\nDefaults to unset","schema":{"type":"string","uniqueItems":true}}],"responses":{"200":{"description":"OK","content":{"application/json":{"schema":{"$ref":"#/components/schemas/com.mongodb.v1.MongoDBUser"}},"application/yaml":{"schema":{"$ref":"#/components/schemas/com.mongodb.v1.MongoDBUser"}}}},"401":{"description":"Unauthorized"}},"x-kubernetes-action":"get","x-kubernetes-group-version-kind":{"group":"mongodb.com","version":"v1","kind":"MongoDBUser"}},"put":{"tags":["mongodbCom_v1"],"description":"replace status of the specified MongoDBUser","operationId":"replaceMongodbComV1NamespacedMongoDBUserStatus","parameters":[{"name":"dryRun","in":"query","description":"When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed","schema":{"type":"string","uniqueItems":true}},{"name":"fieldManager","in":"query","description":"fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint.","schema":{"type":"string","uniqueItems":true}},{"name":"fieldValidation","in":"query","description":"fieldValidation instructs the server on how to handle objects in the request (POST/PUT/PATCH) containing unknown or duplicate fields. Valid values are: - Ignore: This will ignore any unknown fields that are silently dropped from the object, and will ignore all but the last duplicate field that the decoder encounters. This is the default behavior prior to v1.23. - Warn: This will send a warning via the standard warning response header for each unknown field that is dropped from the object, and for each duplicate field that is encountered. The request will still succeed if there are no other errors, and will only persist the last of any duplicate fields. This is the default in v1.23+ - Strict: This will fail the request with a BadRequest error if any unknown fields would be dropped from the object, or if any duplicate fields are present. The error returned from the server will contain all unknown and duplicate fields encountered.","schema":{"type":"string","uniqueItems":true}}],"requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/com.mongodb.v1.MongoDBUser"}},"application/yaml":{"schema":{"$ref":"#/components/schemas/com.mongodb.v1.MongoDBUser"}}}},"responses":{"200":{"description":"OK","content":{"application/json":{"schema":{"$ref":"#/components/schemas/com.mongodb.v1.MongoDBUser"}},"application/yaml":{"schema":{"$ref":"#/components/schemas/com.mongodb.v1.MongoDBUser"}}}},"201":{"description":"Created","content":{"application/json":{"schema":{"$ref":"#/components/schemas/com.mongodb.v1.MongoDBUser"}},"application/yaml":{"schema":{"$ref":"#/components/schemas/com.mongodb.v1.MongoDBUser"}}}},"401":{"description":"Unauthorized"}},"x-kubernetes-action":"put","x-kubernetes-group-version-kind":{"group":"mongodb.com","version":"v1","kind":"MongoDBUser"}},"patch":{"tags":["mongodbCom_v1"],"description":"partially update status of the specified MongoDBUser","operationId":"patchMongodbComV1NamespacedMongoDBUserStatus","parameters":[{"name":"dryRun","in":"query","description":"When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed","schema":{"type":"string","uniqueItems":true}},{"name":"fieldManager","in":"query","description":"fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint. This field is required for apply requests (application/apply-patch) but optional for non-apply patch types (JsonPatch, MergePatch, StrategicMergePatch).","schema":{"type":"string","uniqueItems":true}},{"name":"fieldValidation","in":"query","description":"fieldValidation instructs the server on how to handle objects in the request (POST/PUT/PATCH) containing unknown or duplicate fields. Valid values are: - Ignore: This will ignore any unknown fields that are silently dropped from the object, and will ignore all but the last duplicate field that the decoder encounters. This is the default behavior prior to v1.23. - Warn: This will send a warning via the standard warning response header for each unknown field that is dropped from the object, and for each duplicate field that is encountered. The request will still succeed if there are no other errors, and will only persist the last of any duplicate fields. This is the default in v1.23+ - Strict: This will fail the request with a BadRequest error if any unknown fields would be dropped from the object, or if any duplicate fields are present. The error returned from the server will contain all unknown and duplicate fields encountered.","schema":{"type":"string","uniqueItems":true}},{"name":"force","in":"query","description":"Force is going to \"force\" Apply requests. It means user will re-acquire conflicting fields owned by other people. Force flag must be unset for non-apply patch requests.","schema":{"type":"boolean","uniqueItems":true}}],"requestBody":{"content":{"application/apply-patch+yaml":{"schema":{"$ref":"#/components/schemas/io.k8s.apimachinery.pkg.apis.meta.v1.Patch"}},"application/json-patch+json":{"schema":{"$ref":"#/components/schemas/io.k8s.apimachinery.pkg.apis.meta.v1.Patch"}},"application/merge-patch+json":{"schema":{"$ref":"#/components/schemas/io.k8s.apimachinery.pkg.apis.meta.v1.Patch"}}}},"responses":{"200":{"description":"OK","content":{"application/json":{"schema":{"$ref":"#/components/schemas/com.mongodb.v1.MongoDBUser"}},"application/yaml":{"schema":{"$ref":"#/components/schemas/com.mongodb.v1.MongoDBUser"}}}},"401":{"description":"Unauthorized"}},"x-kubernetes-action":"patch","x-kubernetes-group-version-kind":{"group":"mongodb.com","version":"v1","kind":"MongoDBUser"}},"parameters":[{"name":"name","in":"path","description":"name of the MongoDBUser","required":true,"schema":{"type":"string","uniqueItems":true}},{"name":"namespace","in":"path","description":"object name and auth scope, such as for teams and projects","required":true,"schema":{"type":"string","uniqueItems":true}},{"name":"pretty","in":"query","description":"If 'true', then the output is pretty printed.","schema":{"type":"string","uniqueItems":true}}]},"/apis/mongodb.com/v1/namespaces/{namespace}/opsmanagers":{"get":{"tags":["mongodbCom_v1"],"description":"list objects of kind MongoDBOpsManager","operationId":"listMongodbComV1NamespacedMongoDBOpsManager","parameters":[{"name":"allowWatchBookmarks","in":"query","description":"allowWatchBookmarks requests watch events with type \"BOOKMARK\". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server's discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored.","schema":{"type":"boolean","uniqueItems":true}},{"name":"continue","in":"query","description":"The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the response, as long as their keys are after the \"next key\".\n\nThis field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications.","schema":{"type":"string","uniqueItems":true}},{"name":"fieldSelector","in":"query","description":"A selector to restrict the list of returned objects by their fields. Defaults to everything.","schema":{"type":"string","uniqueItems":true}},{"name":"labelSelector","in":"query","description":"A selector to restrict the list of returned objects by their labels. Defaults to everything.","schema":{"type":"string","uniqueItems":true}},{"name":"limit","in":"query","description":"limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.","schema":{"type":"integer","uniqueItems":true}},{"name":"resourceVersion","in":"query","description":"resourceVersion sets a constraint on what resource versions a request may be served from. See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.\n\nDefaults to unset","schema":{"type":"string","uniqueItems":true}},{"name":"resourceVersionMatch","in":"query","description":"resourceVersionMatch determines how resourceVersion is applied to list calls. It is highly recommended that resourceVersionMatch be set for list calls where resourceVersion is set See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.\n\nDefaults to unset","schema":{"type":"string","uniqueItems":true}},{"name":"sendInitialEvents","in":"query","description":"`sendInitialEvents=true` may be set together with `watch=true`. In that case, the watch stream will begin with synthetic events to produce the current state of objects in the collection. Once all such events have been sent, a synthetic \"Bookmark\" event  will be sent. The bookmark will report the ResourceVersion (RV) corresponding to the set of objects, and be marked with `\"k8s.io/initial-events-end\": \"true\"` annotation. Afterwards, the watch stream will proceed as usual, sending watch events corresponding to changes (subsequent to the RV) to objects watched.\n\nWhen `sendInitialEvents` option is set, we require `resourceVersionMatch` option to also be set. The semantic of the watch request is as following: - `resourceVersionMatch` = NotOlderThan\n  is interpreted as \"data at least as new as the provided `resourceVersion`\"\n  and the bookmark event is send when the state is synced\n  to a `resourceVersion` at least as fresh as the one provided by the ListOptions.\n  If `resourceVersion` is unset, this is interpreted as \"consistent read\" and the\n  bookmark event is send when the state is synced at least to the moment\n  when request started being processed.\n- `resourceVersionMatch` set to any other value or unset\n  Invalid error is returned.\n\nDefaults to true if `resourceVersion=\"\"` or `resourceVersion=\"0\"` (for backward compatibility reasons) and to false otherwise.","schema":{"type":"boolean","uniqueItems":true}},{"name":"timeoutSeconds","in":"query","description":"Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity.","schema":{"type":"integer","uniqueItems":true}},{"name":"watch","in":"query","description":"Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.","schema":{"type":"boolean","uniqueItems":true}}],"responses":{"200":{"description":"OK","content":{"application/json":{"schema":{"$ref":"#/components/schemas/com.mongodb.v1.MongoDBOpsManagerList"}},"application/yaml":{"schema":{"$ref":"#/components/schemas/com.mongodb.v1.MongoDBOpsManagerList"}}}},"401":{"description":"Unauthorized"}},"x-kubernetes-action":"list","x-kubernetes-group-version-kind":{"group":"mongodb.com","version":"v1","kind":"MongoDBOpsManager"}},"post":{"tags":["mongodbCom_v1"],"description":"create a MongoDBOpsManager","operationId":"createMongodbComV1NamespacedMongoDBOpsManager","parameters":[{"name":"dryRun","in":"query","description":"When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed","schema":{"type":"string","uniqueItems":true}},{"name":"fieldManager","in":"query","description":"fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint.","schema":{"type":"string","uniqueItems":true}},{"name":"fieldValidation","in":"query","description":"fieldValidation instructs the server on how to handle objects in the request (POST/PUT/PATCH) containing unknown or duplicate fields. Valid values are: - Ignore: This will ignore any unknown fields that are silently dropped from the object, and will ignore all but the last duplicate field that the decoder encounters. This is the default behavior prior to v1.23. - Warn: This will send a warning via the standard warning response header for each unknown field that is dropped from the object, and for each duplicate field that is encountered. The request will still succeed if there are no other errors, and will only persist the last of any duplicate fields. This is the default in v1.23+ - Strict: This will fail the request with a BadRequest error if any unknown fields would be dropped from the object, or if any duplicate fields are present. The error returned from the server will contain all unknown and duplicate fields encountered.","schema":{"type":"string","uniqueItems":true}}],"requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/com.mongodb.v1.MongoDBOpsManager"}},"application/yaml":{"schema":{"$ref":"#/components/schemas/com.mongodb.v1.MongoDBOpsManager"}}}},"responses":{"200":{"description":"OK","content":{"application/json":{"schema":{"$ref":"#/components/schemas/com.mongodb.v1.MongoDBOpsManager"}},"application/yaml":{"schema":{"$ref":"#/components/schemas/com.mongodb.v1.MongoDBOpsManager"}}}},"201":{"description":"Created","content":{"application/json":{"schema":{"$ref":"#/components/schemas/com.mongodb.v1.MongoDBOpsManager"}},"application/yaml":{"schema":{"$ref":"#/components/schemas/com.mongodb.v1.MongoDBOpsManager"}}}},"202":{"description":"Accepted","content":{"application/json":{"schema":{"$ref":"#/components/schemas/com.mongodb.v1.MongoDBOpsManager"}},"application/yaml":{"schema":{"$ref":"#/components/schemas/com.mongodb.v1.MongoDBOpsManager"}}}},"401":{"description":"Unauthorized"}},"x-kubernetes-action":"post","x-kubernetes-group-version-kind":{"group":"mongodb.com","version":"v1","kind":"MongoDBOpsManager"}},"delete":{"tags":["mongodbCom_v1"],"description":"delete collection of MongoDBOpsManager","operationId":"deleteMongodbComV1CollectionNamespacedMongoDBOpsManager","parameters":[{"name":"allowWatchBookmarks","in":"query","description":"allowWatchBookmarks requests watch events with type \"BOOKMARK\". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server's discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored.","schema":{"type":"boolean","uniqueItems":true}},{"name":"continue","in":"query","description":"The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the response, as long as their keys are after the \"next key\".\n\nThis field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications.","schema":{"type":"string","uniqueItems":true}},{"name":"fieldSelector","in":"query","description":"A selector to restrict the list of returned objects by their fields. Defaults to everything.","schema":{"type":"string","uniqueItems":true}},{"name":"labelSelector","in":"query","description":"A selector to restrict the list of returned objects by their labels. Defaults to everything.","schema":{"type":"string","uniqueItems":true}},{"name":"limit","in":"query","description":"limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.","schema":{"type":"integer","uniqueItems":true}},{"name":"resourceVersion","in":"query","description":"resourceVersion sets a constraint on what resource versions a request may be served from. See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.\n\nDefaults to unset","schema":{"type":"string","uniqueItems":true}},{"name":"resourceVersionMatch","in":"query","description":"resourceVersionMatch determines how resourceVersion is applied to list calls. It is highly recommended that resourceVersionMatch be set for list calls where resourceVersion is set See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.\n\nDefaults to unset","schema":{"type":"string","uniqueItems":true}},{"name":"sendInitialEvents","in":"query","description":"`sendInitialEvents=true` may be set together with `watch=true`. In that case, the watch stream will begin with synthetic events to produce the current state of objects in the collection. Once all such events have been sent, a synthetic \"Bookmark\" event  will be sent. The bookmark will report the ResourceVersion (RV) corresponding to the set of objects, and be marked with `\"k8s.io/initial-events-end\": \"true\"` annotation. Afterwards, the watch stream will proceed as usual, sending watch events corresponding to changes (subsequent to the RV) to objects watched.\n\nWhen `sendInitialEvents` option is set, we require `resourceVersionMatch` option to also be set. The semantic of the watch request is as following: - `resourceVersionMatch` = NotOlderThan\n  is interpreted as \"data at least as new as the provided `resourceVersion`\"\n  and the bookmark event is send when the state is synced\n  to a `resourceVersion` at least as fresh as the one provided by the ListOptions.\n  If `resourceVersion` is unset, this is interpreted as \"consistent read\" and the\n  bookmark event is send when the state is synced at least to the moment\n  when request started being processed.\n- `resourceVersionMatch` set to any other value or unset\n  Invalid error is returned.\n\nDefaults to true if `resourceVersion=\"\"` or `resourceVersion=\"0\"` (for backward compatibility reasons) and to false otherwise.","schema":{"type":"boolean","uniqueItems":true}},{"name":"timeoutSeconds","in":"query","description":"Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity.","schema":{"type":"integer","uniqueItems":true}},{"name":"watch","in":"query","description":"Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.","schema":{"type":"boolean","uniqueItems":true}}],"responses":{"200":{"description":"OK","content":{"application/json":{"schema":{"$ref":"#/components/schemas/io.k8s.apimachinery.pkg.apis.meta.v1.Status"}},"application/yaml":{"schema":{"$ref":"#/components/schemas/io.k8s.apimachinery.pkg.apis.meta.v1.Status"}}}},"401":{"description":"Unauthorized"}},"x-kubernetes-action":"deletecollection","x-kubernetes-group-version-kind":{"group":"mongodb.com","version":"v1","kind":"MongoDBOpsManager"}},"parameters":[{"name":"namespace","in":"path","description":"object name and auth scope, such as for teams and projects","required":true,"schema":{"type":"string","uniqueItems":true}},{"name":"pretty","in":"query","description":"If 'true', then the output is pretty printed.","schema":{"type":"string","uniqueItems":true}}]},"/apis/mongodb.com/v1/namespaces/{namespace}/opsmanagers/{name}":{"get":{"tags":["mongodbCom_v1"],"description":"read the specified MongoDBOpsManager","operationId":"readMongodbComV1NamespacedMongoDBOpsManager","parameters":[{"name":"resourceVersion","in":"query","description":"resourceVersion sets a constraint on what resource versions a request may be served from. See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.\n\nDefaults to unset","schema":{"type":"string","uniqueItems":true}}],"responses":{"200":{"description":"OK","content":{"application/json":{"schema":{"$ref":"#/components/schemas/com.mongodb.v1.MongoDBOpsManager"}},"application/yaml":{"schema":{"$ref":"#/components/schemas/com.mongodb.v1.MongoDBOpsManager"}}}},"401":{"description":"Unauthorized"}},"x-kubernetes-action":"get","x-kubernetes-group-version-kind":{"group":"mongodb.com","version":"v1","kind":"MongoDBOpsManager"}},"put":{"tags":["mongodbCom_v1"],"description":"replace the specified MongoDBOpsManager","operationId":"replaceMongodbComV1NamespacedMongoDBOpsManager","parameters":[{"name":"dryRun","in":"query","description":"When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed","schema":{"type":"string","uniqueItems":true}},{"name":"fieldManager","in":"query","description":"fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint.","schema":{"type":"string","uniqueItems":true}},{"name":"fieldValidation","in":"query","description":"fieldValidation instructs the server on how to handle objects in the request (POST/PUT/PATCH) containing unknown or duplicate fields. Valid values are: - Ignore: This will ignore any unknown fields that are silently dropped from the object, and will ignore all but the last duplicate field that the decoder encounters. This is the default behavior prior to v1.23. - Warn: This will send a warning via the standard warning response header for each unknown field that is dropped from the object, and for each duplicate field that is encountered. The request will still succeed if there are no other errors, and will only persist the last of any duplicate fields. This is the default in v1.23+ - Strict: This will fail the request with a BadRequest error if any unknown fields would be dropped from the object, or if any duplicate fields are present. The error returned from the server will contain all unknown and duplicate fields encountered.","schema":{"type":"string","uniqueItems":true}}],"requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/com.mongodb.v1.MongoDBOpsManager"}},"application/yaml":{"schema":{"$ref":"#/components/schemas/com.mongodb.v1.MongoDBOpsManager"}}}},"responses":{"200":{"description":"OK","content":{"application/json":{"schema":{"$ref":"#/components/schemas/com.mongodb.v1.MongoDBOpsManager"}},"application/yaml":{"schema":{"$ref":"#/components/schemas/com.mongodb.v1.MongoDBOpsManager"}}}},"201":{"description":"Created","content":{"application/json":{"schema":{"$ref":"#/components/schemas/com.mongodb.v1.MongoDBOpsManager"}},"application/yaml":{"schema":{"$ref":"#/components/schemas/com.mongodb.v1.MongoDBOpsManager"}}}},"401":{"description":"Unauthorized"}},"x-kubernetes-action":"put","x-kubernetes-group-version-kind":{"group":"mongodb.com","version":"v1","kind":"MongoDBOpsManager"}},"delete":{"tags":["mongodbCom_v1"],"description":"delete a MongoDBOpsManager","operationId":"deleteMongodbComV1NamespacedMongoDBOpsManager","parameters":[{"name":"dryRun","in":"query","description":"When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed","schema":{"type":"string","uniqueItems":true}},{"name":"gracePeriodSeconds","in":"query","description":"The duration in seconds before the object should be deleted. Value must be non-negative integer. The value zero indicates delete immediately. If this value is nil, the default grace period for the specified type will be used. Defaults to a per object value if not specified. zero means delete immediately.","schema":{"type":"integer","uniqueItems":true}},{"name":"orphanDependents","in":"query","description":"Deprecated: please use the PropagationPolicy, this field will be deprecated in 1.7. Should the dependent objects be orphaned. If true/false, the \"orphan\" finalizer will be added to/removed from the object's finalizers list. Either this field or PropagationPolicy may be set, but not both.","schema":{"type":"boolean","uniqueItems":true}},{"name":"propagationPolicy","in":"query","description":"Whether and how garbage collection will be performed. Either this field or OrphanDependents may be set, but not both. The default policy is decided by the existing finalizer set in the metadata.finalizers and the resource-specific default policy. Acceptable values are: 'Orphan' - orphan the dependents; 'Background' - allow the garbage collector to delete the dependents in the background; 'Foreground' - a cascading policy that deletes all dependents in the foreground.","schema":{"type":"string","uniqueItems":true}}],"requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/io.k8s.apimachinery.pkg.apis.meta.v1.DeleteOptions"}},"application/yaml":{"schema":{"$ref":"#/components/schemas/io.k8s.apimachinery.pkg.apis.meta.v1.DeleteOptions"}}}},"responses":{"200":{"description":"OK","content":{"application/json":{"schema":{"$ref":"#/components/schemas/io.k8s.apimachinery.pkg.apis.meta.v1.Status"}},"application/yaml":{"schema":{"$ref":"#/components/schemas/io.k8s.apimachinery.pkg.apis.meta.v1.Status"}}}},"202":{"description":"Accepted","content":{"application/json":{"schema":{"$ref":"#/components/schemas/io.k8s.apimachinery.pkg.apis.meta.v1.Status"}},"application/yaml":{"schema":{"$ref":"#/components/schemas/io.k8s.apimachinery.pkg.apis.meta.v1.Status"}}}},"401":{"description":"Unauthorized"}},"x-kubernetes-action":"delete","x-kubernetes-group-version-kind":{"group":"mongodb.com","version":"v1","kind":"MongoDBOpsManager"}},"patch":{"tags":["mongodbCom_v1"],"description":"partially update the specified MongoDBOpsManager","operationId":"patchMongodbComV1NamespacedMongoDBOpsManager","parameters":[{"name":"dryRun","in":"query","description":"When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed","schema":{"type":"string","uniqueItems":true}},{"name":"fieldManager","in":"query","description":"fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint. This field is required for apply requests (application/apply-patch) but optional for non-apply patch types (JsonPatch, MergePatch, StrategicMergePatch).","schema":{"type":"string","uniqueItems":true}},{"name":"fieldValidation","in":"query","description":"fieldValidation instructs the server on how to handle objects in the request (POST/PUT/PATCH) containing unknown or duplicate fields. Valid values are: - Ignore: This will ignore any unknown fields that are silently dropped from the object, and will ignore all but the last duplicate field that the decoder encounters. This is the default behavior prior to v1.23. - Warn: This will send a warning via the standard warning response header for each unknown field that is dropped from the object, and for each duplicate field that is encountered. The request will still succeed if there are no other errors, and will only persist the last of any duplicate fields. This is the default in v1.23+ - Strict: This will fail the request with a BadRequest error if any unknown fields would be dropped from the object, or if any duplicate fields are present. The error returned from the server will contain all unknown and duplicate fields encountered.","schema":{"type":"string","uniqueItems":true}},{"name":"force","in":"query","description":"Force is going to \"force\" Apply requests. It means user will re-acquire conflicting fields owned by other people. Force flag must be unset for non-apply patch requests.","schema":{"type":"boolean","uniqueItems":true}}],"requestBody":{"content":{"application/apply-patch+yaml":{"schema":{"$ref":"#/components/schemas/io.k8s.apimachinery.pkg.apis.meta.v1.Patch"}},"application/json-patch+json":{"schema":{"$ref":"#/components/schemas/io.k8s.apimachinery.pkg.apis.meta.v1.Patch"}},"application/merge-patch+json":{"schema":{"$ref":"#/components/schemas/io.k8s.apimachinery.pkg.apis.meta.v1.Patch"}}}},"responses":{"200":{"description":"OK","content":{"application/json":{"schema":{"$ref":"#/components/schemas/com.mongodb.v1.MongoDBOpsManager"}},"application/yaml":{"schema":{"$ref":"#/components/schemas/com.mongodb.v1.MongoDBOpsManager"}}}},"401":{"description":"Unauthorized"}},"x-kubernetes-action":"patch","x-kubernetes-group-version-kind":{"group":"mongodb.com","version":"v1","kind":"MongoDBOpsManager"}},"parameters":[{"name":"name","in":"path","description":"name of the MongoDBOpsManager","required":true,"schema":{"type":"string","uniqueItems":true}},{"name":"namespace","in":"path","description":"object name and auth scope, such as for teams and projects","required":true,"schema":{"type":"string","uniqueItems":true}},{"name":"pretty","in":"query","description":"If 'true', then the output is pretty printed.","schema":{"type":"string","uniqueItems":true}}]},"/apis/mongodb.com/v1/namespaces/{namespace}/opsmanagers/{name}/status":{"get":{"tags":["mongodbCom_v1"],"description":"read status of the specified MongoDBOpsManager","operationId":"readMongodbComV1NamespacedMongoDBOpsManagerStatus","parameters":[{"name":"resourceVersion","in":"query","description":"resourceVersion sets a constraint on what resource versions a request may be served from. See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.\n\nDefaults to unset","schema":{"type":"string","uniqueItems":true}}],"responses":{"200":{"description":"OK","content":{"application/json":{"schema":{"$ref":"#/components/schemas/com.mongodb.v1.MongoDBOpsManager"}},"application/yaml":{"schema":{"$ref":"#/components/schemas/com.mongodb.v1.MongoDBOpsManager"}}}},"401":{"description":"Unauthorized"}},"x-kubernetes-action":"get","x-kubernetes-group-version-kind":{"group":"mongodb.com","version":"v1","kind":"MongoDBOpsManager"}},"put":{"tags":["mongodbCom_v1"],"description":"replace status of the specified MongoDBOpsManager","operationId":"replaceMongodbComV1NamespacedMongoDBOpsManagerStatus","parameters":[{"name":"dryRun","in":"query","description":"When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed","schema":{"type":"string","uniqueItems":true}},{"name":"fieldManager","in":"query","description":"fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint.","schema":{"type":"string","uniqueItems":true}},{"name":"fieldValidation","in":"query","description":"fieldValidation instructs the server on how to handle objects in the request (POST/PUT/PATCH) containing unknown or duplicate fields. Valid values are: - Ignore: This will ignore any unknown fields that are silently dropped from the object, and will ignore all but the last duplicate field that the decoder encounters. This is the default behavior prior to v1.23. - Warn: This will send a warning via the standard warning response header for each unknown field that is dropped from the object, and for each duplicate field that is encountered. The request will still succeed if there are no other errors, and will only persist the last of any duplicate fields. This is the default in v1.23+ - Strict: This will fail the request with a BadRequest error if any unknown fields would be dropped from the object, or if any duplicate fields are present. The error returned from the server will contain all unknown and duplicate fields encountered.","schema":{"type":"string","uniqueItems":true}}],"requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/com.mongodb.v1.MongoDBOpsManager"}},"application/yaml":{"schema":{"$ref":"#/components/schemas/com.mongodb.v1.MongoDBOpsManager"}}}},"responses":{"200":{"description":"OK","content":{"application/json":{"schema":{"$ref":"#/components/schemas/com.mongodb.v1.MongoDBOpsManager"}},"application/yaml":{"schema":{"$ref":"#/components/schemas/com.mongodb.v1.MongoDBOpsManager"}}}},"201":{"description":"Created","content":{"application/json":{"schema":{"$ref":"#/components/schemas/com.mongodb.v1.MongoDBOpsManager"}},"application/yaml":{"schema":{"$ref":"#/components/schemas/com.mongodb.v1.MongoDBOpsManager"}}}},"401":{"description":"Unauthorized"}},"x-kubernetes-action":"put","x-kubernetes-group-version-kind":{"group":"mongodb.com","version":"v1","kind":"MongoDBOpsManager"}},"patch":{"tags":["mongodbCom_v1"],"description":"partially update status of the specified MongoDBOpsManager","operationId":"patchMongodbComV1NamespacedMongoDBOpsManagerStatus","parameters":[{"name":"dryRun","in":"query","description":"When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed","schema":{"type":"string","uniqueItems":true}},{"name":"fieldManager","in":"query","description":"fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint. This field is required for apply requests (application/apply-patch) but optional for non-apply patch types (JsonPatch, MergePatch, StrategicMergePatch).","schema":{"type":"string","uniqueItems":true}},{"name":"fieldValidation","in":"query","description":"fieldValidation instructs the server on how to handle objects in the request (POST/PUT/PATCH) containing unknown or duplicate fields. Valid values are: - Ignore: This will ignore any unknown fields that are silently dropped from the object, and will ignore all but the last duplicate field that the decoder encounters. This is the default behavior prior to v1.23. - Warn: This will send a warning via the standard warning response header for each unknown field that is dropped from the object, and for each duplicate field that is encountered. The request will still succeed if there are no other errors, and will only persist the last of any duplicate fields. This is the default in v1.23+ - Strict: This will fail the request with a BadRequest error if any unknown fields would be dropped from the object, or if any duplicate fields are present. The error returned from the server will contain all unknown and duplicate fields encountered.","schema":{"type":"string","uniqueItems":true}},{"name":"force","in":"query","description":"Force is going to \"force\" Apply requests. It means user will re-acquire conflicting fields owned by other people. Force flag must be unset for non-apply patch requests.","schema":{"type":"boolean","uniqueItems":true}}],"requestBody":{"content":{"application/apply-patch+yaml":{"schema":{"$ref":"#/components/schemas/io.k8s.apimachinery.pkg.apis.meta.v1.Patch"}},"application/json-patch+json":{"schema":{"$ref":"#/components/schemas/io.k8s.apimachinery.pkg.apis.meta.v1.Patch"}},"application/merge-patch+json":{"schema":{"$ref":"#/components/schemas/io.k8s.apimachinery.pkg.apis.meta.v1.Patch"}}}},"responses":{"200":{"description":"OK","content":{"application/json":{"schema":{"$ref":"#/components/schemas/com.mongodb.v1.MongoDBOpsManager"}},"application/yaml":{"schema":{"$ref":"#/components/schemas/com.mongodb.v1.MongoDBOpsManager"}}}},"401":{"description":"Unauthorized"}},"x-kubernetes-action":"patch","x-kubernetes-group-version-kind":{"group":"mongodb.com","version":"v1","kind":"MongoDBOpsManager"}},"parameters":[{"name":"name","in":"path","description":"name of the MongoDBOpsManager","required":true,"schema":{"type":"string","uniqueItems":true}},{"name":"namespace","in":"path","description":"object name and auth scope, such as for teams and projects","required":true,"schema":{"type":"string","uniqueItems":true}},{"name":"pretty","in":"query","description":"If 'true', then the output is pretty printed.","schema":{"type":"string","uniqueItems":true}}]},"/apis/mongodb.com/v1/opsmanagers":{"get":{"tags":["mongodbCom_v1"],"description":"list objects of kind MongoDBOpsManager","operationId":"listMongodbComV1MongoDBOpsManagerForAllNamespaces","responses":{"200":{"description":"OK","content":{"application/json":{"schema":{"$ref":"#/components/schemas/com.mongodb.v1.MongoDBOpsManagerList"}},"application/yaml":{"schema":{"$ref":"#/components/schemas/com.mongodb.v1.MongoDBOpsManagerList"}}}},"401":{"description":"Unauthorized"}},"x-kubernetes-action":"list","x-kubernetes-group-version-kind":{"group":"mongodb.com","version":"v1","kind":"MongoDBOpsManager"}},"parameters":[{"name":"allowWatchBookmarks","in":"query","description":"allowWatchBookmarks requests watch events with type \"BOOKMARK\". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server's discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored.","schema":{"type":"boolean","uniqueItems":true}},{"name":"continue","in":"query","description":"The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the response, as long as their keys are after the \"next key\".\n\nThis field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications.","schema":{"type":"string","uniqueItems":true}},{"name":"fieldSelector","in":"query","description":"A selector to restrict the list of returned objects by their fields. Defaults to everything.","schema":{"type":"string","uniqueItems":true}},{"name":"labelSelector","in":"query","description":"A selector to restrict the list of returned objects by their labels. Defaults to everything.","schema":{"type":"string","uniqueItems":true}},{"name":"limit","in":"query","description":"limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.","schema":{"type":"integer","uniqueItems":true}},{"name":"pretty","in":"query","description":"If 'true', then the output is pretty printed.","schema":{"type":"string","uniqueItems":true}},{"name":"resourceVersion","in":"query","description":"resourceVersion sets a constraint on what resource versions a request may be served from. See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.\n\nDefaults to unset","schema":{"type":"string","uniqueItems":true}},{"name":"resourceVersionMatch","in":"query","description":"resourceVersionMatch determines how resourceVersion is applied to list calls. It is highly recommended that resourceVersionMatch be set for list calls where resourceVersion is set See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for details.\n\nDefaults to unset","schema":{"type":"string","uniqueItems":true}},{"name":"sendInitialEvents","in":"query","description":"`sendInitialEvents=true` may be set together with `watch=true`. In that case, the watch stream will begin with synthetic events to produce the current state of objects in the collection. Once all such events have been sent, a synthetic \"Bookmark\" event  will be sent. The bookmark will report the ResourceVersion (RV) corresponding to the set of objects, and be marked with `\"k8s.io/initial-events-end\": \"true\"` annotation. Afterwards, the watch stream will proceed as usual, sending watch events corresponding to changes (subsequent to the RV) to objects watched.\n\nWhen `sendInitialEvents` option is set, we require `resourceVersionMatch` option to also be set. The semantic of the watch request is as following: - `resourceVersionMatch` = NotOlderThan\n  is interpreted as \"data at least as new as the provided `resourceVersion`\"\n  and the bookmark event is send when the state is synced\n  to a `resourceVersion` at least as fresh as the one provided by the ListOptions.\n  If `resourceVersion` is unset, this is interpreted as \"consistent read\" and the\n  bookmark event is send when the state is synced at least to the moment\n  when request started being processed.\n- `resourceVersionMatch` set to any other value or unset\n  Invalid error is returned.\n\nDefaults to true if `resourceVersion=\"\"` or `resourceVersion=\"0\"` (for backward compatibility reasons) and to false otherwise.","schema":{"type":"boolean","uniqueItems":true}},{"name":"timeoutSeconds","in":"query","description":"Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity.","schema":{"type":"integer","uniqueItems":true}},{"name":"watch","in":"query","description":"Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.","schema":{"type":"boolean","uniqueItems":true}}]}},"components":{"schemas":{"com.mongodb.v1.MongoDB":{"type":"object","required":["spec"],"properties":{"apiVersion":{"description":"APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources","type":"string"},"kind":{"description":"Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds","type":"string"},"metadata":{"description":"Standard object's metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata","allOf":[{"$ref":"#/components/schemas/io.k8s.apimachinery.pkg.apis.meta.v1.ObjectMeta"}]},"spec":{"type":"object","required":["credentials","type","version"],"properties":{"additionalMongodConfig":{"description":"AdditionalMongodConfig is additional configuration that can be passed to each data-bearing mongod at runtime. Uses the same structure as the mongod configuration file: https://docs.mongodb.com/manual/reference/configuration-options/","type":"object","x-kubernetes-preserve-unknown-fields":true},"agent":{"type":"object","properties":{"logLevel":{"type":"string"},"maxLogFileDurationHours":{"type":"integer"},"startupOptions":{"type":"object","additionalProperties":{"type":"string"}}}},"backup":{"description":"Backup contains configuration options for configuring backup for this MongoDB resource","type":"object","properties":{"assignmentLabels":{"description":"Assignment Labels set in the Ops Manager","type":"array","items":{"type":"string"}},"autoTerminateOnDeletion":{"description":"AutoTerminateOnDeletion indicates if the Operator should stop and terminate the Backup before the cleanup, when the MongoDB CR is deleted","type":"boolean"},"encryption":{"description":"Encryption settings","type":"object","properties":{"kmip":{"description":"Kmip corresponds to the KMIP configuration assigned to the Ops Manager Project's configuration.","type":"object","required":["client"],"properties":{"client":{"description":"KMIP Client configuration","type":"object","properties":{"clientCertificatePrefix":{"description":"A prefix used to construct KMIP client certificate (and corresponding password) Secret names. The names are generated using the following pattern: KMIP Client Certificate (TLS Secret): \u003cclientCertificatePrefix\u003e-\u003cCR Name\u003e-kmip-client KMIP Client Certificate Password: \u003cclientCertificatePrefix\u003e-\u003cCR Name\u003e-kmip-client-password The expected key inside is called \"password\".","type":"string"}}}}}}},"mode":{"type":"string","enum":["enabled","disabled","terminated"]},"snapshotSchedule":{"type":"object","properties":{"clusterCheckpointIntervalMin":{"type":"integer","enum":[15,30,60]},"dailySnapshotRetentionDays":{"description":"Number of days to retain daily snapshots. Setting 0 will disable this rule.","type":"integer","maximum":365,"minimum":0},"fullIncrementalDayOfWeek":{"description":"Day of the week when Ops Manager takes a full snapshot. This ensures a recent complete backup. Ops Manager sets the default value to SUNDAY.","type":"string","enum":["SUNDAY","MONDAY","TUESDAY","WEDNESDAY","THURSDAY","FRIDAY","SATURDAY"]},"monthlySnapshotRetentionMonths":{"description":"Number of months to retain weekly snapshots. Setting 0 will disable this rule.","type":"integer","maximum":36,"minimum":0},"pointInTimeWindowHours":{"description":"Number of hours in the past for which a point-in-time snapshot can be created.","type":"integer","enum":[1,2,3,4,5,6,7,15,30,60,90,120,180,360]},"referenceHourOfDay":{"description":"Hour of the day to schedule snapshots using a 24-hour clock, in UTC.","type":"integer","maximum":23,"minimum":0},"referenceMinuteOfHour":{"description":"Minute of the hour to schedule snapshots, in UTC.","type":"integer","maximum":59,"minimum":0},"snapshotIntervalHours":{"description":"Number of hours between snapshots.","type":"integer","enum":[6,8,12,24]},"snapshotRetentionDays":{"description":"Number of days to keep recent snapshots.","type":"integer","maximum":365,"minimum":1},"weeklySnapshotRetentionWeeks":{"description":"Number of weeks to retain weekly snapshots. Setting 0 will disable this rule","type":"integer","maximum":365,"minimum":0}}}}},"cloudManager":{"type":"object","properties":{"configMapRef":{"type":"object","properties":{"name":{"type":"string"}}}}},"clusterDomain":{"type":"string","format":"hostname"},"configServerCount":{"type":"integer"},"configSrv":{"type":"object","properties":{"additionalMongodConfig":{"type":"object","x-kubernetes-preserve-unknown-fields":true},"agent":{"type":"object","properties":{"logLevel":{"type":"string"},"maxLogFileDurationHours":{"type":"integer"},"startupOptions":{"type":"object","additionalProperties":{"type":"string"}}}}},"x-kubernetes-preserve-unknown-fields":true},"configSrvPodSpec":{"type":"object","properties":{"persistence":{"type":"object","properties":{"multiple":{"type":"object","properties":{"data":{"type":"object","properties":{"labelSelector":{"type":"object","x-kubernetes-preserve-unknown-fields":true},"storage":{"type":"string"},"storageClass":{"type":"string"}}},"journal":{"type":"object","properties":{"labelSelector":{"type":"object","x-kubernetes-preserve-unknown-fields":true},"storage":{"type":"string"},"storageClass":{"type":"string"}}},"logs":{"type":"object","properties":{"labelSelector":{"type":"object","x-kubernetes-preserve-unknown-fields":true},"storage":{"type":"string"},"storageClass":{"type":"string"}}}}},"single":{"type":"object","properties":{"labelSelector":{"type":"object","x-kubernetes-preserve-unknown-fields":true},"storage":{"type":"string"},"storageClass":{"type":"string"}}}}},"podTemplate":{"type":"object","x-kubernetes-preserve-unknown-fields":true}}},"connectivity":{"type":"object","properties":{"replicaSetHorizons":{"description":"ReplicaSetHorizons holds list of maps of horizons to be configured in each of MongoDB processes. Horizons map horizon names to the node addresses for each process in the replicaset, e.g.: [ { \"internal\": \"my-rs-0.my-internal-domain.com:31843\", \"external\": \"my-rs-0.my-external-domain.com:21467\" }, { \"internal\": \"my-rs-1.my-internal-domain.com:31843\", \"external\": \"my-rs-1.my-external-domain.com:21467\" }, ... ] The key of each item in the map is an arbitrary, user-chosen string that represents the name of the horizon. The value of the item is the host and, optionally, the port that this mongod node will be connected to from.","type":"array","items":{"type":"object","additionalProperties":{"type":"string"}}}}},"credentials":{"description":"Name of the Secret holding credentials information","type":"string"},"exposedExternally":{"description":"DEPRECATED: use ExternalAccessConfiguration instead","type":"boolean"},"externalAccess":{"description":"ExternalAccessConfiguration provides external access configuration.","type":"object","properties":{"externalDomain":{"description":"An external domain that is used for exposing MongoDB to the outside world.","type":"string"},"externalService":{"description":"Provides a way to override the default (NodePort) Service","type":"object","properties":{"annotations":{"description":"A map of annotations that shall be added to the externally available Service.","type":"object","additionalProperties":{"type":"string"}},"spec":{"description":"A wrapper for the Service spec object.","type":"object","x-kubernetes-preserve-unknown-fields":true}}}}},"featureCompatibilityVersion":{"type":"string"},"logLevel":{"type":"string","enum":["DEBUG","INFO","WARN","ERROR","FATAL"]},"memberConfig":{"description":"MemberConfig","type":"array","items":{"type":"object","properties":{"priority":{"type":"string"},"tags":{"type":"object","additionalProperties":{"type":"string"}},"votes":{"type":"integer"}}},"x-kubernetes-preserve-unknown-fields":true},"members":{"description":"Amount of members for this MongoDB Replica Set","type":"integer"},"mongodsPerShardCount":{"type":"integer"},"mongos":{"type":"object","properties":{"additionalMongodConfig":{"type":"object","x-kubernetes-preserve-unknown-fields":true},"agent":{"type":"object","properties":{"logLevel":{"type":"string"},"maxLogFileDurationHours":{"type":"integer"},"startupOptions":{"type":"object","additionalProperties":{"type":"string"}}}}},"x-kubernetes-preserve-unknown-fields":true},"mongosCount":{"type":"integer"},"mongosPodSpec":{"type":"object","properties":{"persistence":{"type":"object","properties":{"multiple":{"type":"object","properties":{"data":{"type":"object","properties":{"labelSelector":{"type":"object","x-kubernetes-preserve-unknown-fields":true},"storage":{"type":"string"},"storageClass":{"type":"string"}}},"journal":{"type":"object","properties":{"labelSelector":{"type":"object","x-kubernetes-preserve-unknown-fields":true},"storage":{"type":"string"},"storageClass":{"type":"string"}}},"logs":{"type":"object","properties":{"labelSelector":{"type":"object","x-kubernetes-preserve-unknown-fields":true},"storage":{"type":"string"},"storageClass":{"type":"string"}}}}},"single":{"type":"object","properties":{"labelSelector":{"type":"object","x-kubernetes-preserve-unknown-fields":true},"storage":{"type":"string"},"storageClass":{"type":"string"}}}}},"podTemplate":{"type":"object","x-kubernetes-preserve-unknown-fields":true}}},"opsManager":{"type":"object","properties":{"configMapRef":{"type":"object","properties":{"name":{"type":"string"}}}}},"persistent":{"type":"boolean"},"podSpec":{"type":"object","properties":{"persistence":{"type":"object","properties":{"multiple":{"type":"object","properties":{"data":{"type":"object","properties":{"labelSelector":{"type":"object","x-kubernetes-preserve-unknown-fields":true},"storage":{"type":"string"},"storageClass":{"type":"string"}}},"journal":{"type":"object","properties":{"labelSelector":{"type":"object","x-kubernetes-preserve-unknown-fields":true},"storage":{"type":"string"},"storageClass":{"type":"string"}}},"logs":{"type":"object","properties":{"labelSelector":{"type":"object","x-kubernetes-preserve-unknown-fields":true},"storage":{"type":"string"},"storageClass":{"type":"string"}}}}},"single":{"type":"object","properties":{"labelSelector":{"type":"object","x-kubernetes-preserve-unknown-fields":true},"storage":{"type":"string"},"storageClass":{"type":"string"}}}}},"podTemplate":{"type":"object","x-kubernetes-preserve-unknown-fields":true}}},"prometheus":{"description":"Prometheus configurations.","type":"object","required":["passwordSecretRef","username"],"properties":{"metricsPath":{"description":"Indicates path to the metrics endpoint.","type":"string","pattern":"^\\/[a-z0-9]+$"},"passwordSecretRef":{"description":"Name of a Secret containing a HTTP Basic Auth Password.","type":"object","required":["name"],"properties":{"key":{"description":"Key is the key in the secret storing this password. Defaults to \"password\"","type":"string"},"name":{"description":"Name is the name of the secret storing this user's password","type":"string"}}},"port":{"description":"Port where metrics endpoint will bind to. Defaults to 9216.","type":"integer"},"tlsSecretKeyRef":{"description":"Name of a Secret (type kubernetes.io/tls) holding the certificates to use in the Prometheus endpoint.","type":"object","required":["name"],"properties":{"key":{"description":"Key is the key in the secret storing this password. Defaults to \"password\"","type":"string"},"name":{"description":"Name is the name of the secret storing this user's password","type":"string"}}},"username":{"description":"HTTP Basic Auth Username for metrics endpoint.","type":"string"}}},"security":{"type":"object","properties":{"authentication":{"description":"Authentication holds various authentication related settings that affect this MongoDB resource.","type":"object","required":["enabled"],"properties":{"agents":{"description":"Agents contains authentication configuration properties for the agents","type":"object","required":["mode"],"properties":{"automationLdapGroupDN":{"type":"string"},"automationPasswordSecretRef":{"description":"SecretKeySelector selects a key of a Secret.","type":"object","required":["key"],"properties":{"key":{"description":"The key of the secret to select from.  Must be a valid secret key.","type":"string"},"name":{"description":"Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?","type":"string"},"optional":{"description":"Specify whether the Secret or its key must be defined","type":"boolean"}},"x-kubernetes-map-type":"atomic"},"automationUserName":{"type":"string"},"clientCertificateSecretRef":{"type":"object","x-kubernetes-preserve-unknown-fields":true},"mode":{"description":"Mode is the desired Authentication mode that the agents will use","type":"string"}}},"enabled":{"type":"boolean"},"ignoreUnknownUsers":{"description":"IgnoreUnknownUsers maps to the inverse of auth.authoritativeSet","type":"boolean"},"internalCluster":{"type":"string"},"ldap":{"description":"LDAP Configuration","type":"object","properties":{"authzQueryTemplate":{"type":"string"},"bindQueryPasswordSecretRef":{"type":"object","required":["name"],"properties":{"name":{"type":"string"}}},"bindQueryUser":{"type":"string"},"caConfigMapRef":{"description":"Allows to point at a ConfigMap/key with a CA file to mount on the Pod","type":"object","required":["key"],"properties":{"key":{"description":"The key to select.","type":"string"},"name":{"description":"Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?","type":"string"},"optional":{"description":"Specify whether the ConfigMap or its key must be defined","type":"boolean"}},"x-kubernetes-map-type":"atomic"},"servers":{"type":"array","items":{"type":"string"}},"timeoutMS":{"type":"integer"},"transportSecurity":{"type":"string","enum":["tls","none"]},"userCacheInvalidationInterval":{"type":"integer"},"userToDNMapping":{"type":"string"},"validateLDAPServerConfig":{"type":"boolean"}}},"modes":{"type":"array","items":{"type":"string"}},"requireClientTLSAuthentication":{"description":"Clients should present valid TLS certificates","type":"boolean"}}},"certsSecretPrefix":{"type":"string"},"roles":{"type":"array","items":{"type":"object","required":["db","role"],"properties":{"authenticationRestrictions":{"type":"array","items":{"type":"object","properties":{"clientSource":{"type":"array","items":{"type":"string"}},"serverAddress":{"type":"array","items":{"type":"string"}}}}},"db":{"type":"string"},"privileges":{"type":"array","items":{"type":"object","required":["actions","resource"],"properties":{"actions":{"type":"array","items":{"type":"string"}},"resource":{"type":"object","properties":{"cluster":{"type":"boolean"},"collection":{"type":"string"},"db":{"type":"string"}}}}}},"role":{"type":"string"},"roles":{"type":"array","items":{"type":"object","required":["db","role"],"properties":{"db":{"type":"string"},"role":{"type":"string"}}}}}}},"tls":{"type":"object","properties":{"additionalCertificateDomains":{"type":"array","items":{"type":"string"}},"ca":{"description":"CA corresponds to a ConfigMap containing an entry for the CA certificate (ca.pem) used to validate the certificates created already.","type":"string"},"enabled":{"description":"DEPRECATED please enable TLS by setting `security.certsSecretPrefix` or `security.tls.secretRef.prefix`. Enables TLS for this resource. This will make the operator try to mount a Secret with a defined name (\u003cresource-name\u003e-cert). This is only used when enabling TLS on a MongoDB resource, and not on the AppDB, where TLS is configured by setting `secretRef.Name`.","type":"boolean"}}}}},"service":{"description":"DEPRECATED please use `spec.statefulSet.spec.serviceName` to provide a custom service name. this is an optional service, it will get the name \"\u003crsName\u003e-service\" in case not provided","type":"string"},"shard":{"type":"object","properties":{"additionalMongodConfig":{"type":"object","x-kubernetes-preserve-unknown-fields":true},"agent":{"type":"object","properties":{"logLevel":{"type":"string"},"maxLogFileDurationHours":{"type":"integer"},"startupOptions":{"type":"object","additionalProperties":{"type":"string"}}}}},"x-kubernetes-preserve-unknown-fields":true},"shardCount":{"type":"integer"},"shardPodSpec":{"type":"object","properties":{"persistence":{"type":"object","properties":{"multiple":{"type":"object","properties":{"data":{"type":"object","properties":{"labelSelector":{"type":"object","x-kubernetes-preserve-unknown-fields":true},"storage":{"type":"string"},"storageClass":{"type":"string"}}},"journal":{"type":"object","properties":{"labelSelector":{"type":"object","x-kubernetes-preserve-unknown-fields":true},"storage":{"type":"string"},"storageClass":{"type":"string"}}},"logs":{"type":"object","properties":{"labelSelector":{"type":"object","x-kubernetes-preserve-unknown-fields":true},"storage":{"type":"string"},"storageClass":{"type":"string"}}}}},"single":{"type":"object","properties":{"labelSelector":{"type":"object","x-kubernetes-preserve-unknown-fields":true},"storage":{"type":"string"},"storageClass":{"type":"string"}}}}},"podTemplate":{"type":"object","x-kubernetes-preserve-unknown-fields":true}}},"shardSpecificPodSpec":{"description":"ShardSpecificPodSpec allows you to provide a Statefulset override per shard.","type":"array","items":{"type":"object","properties":{"persistence":{"type":"object","properties":{"multiple":{"type":"object","properties":{"data":{"type":"object","properties":{"labelSelector":{"type":"object","x-kubernetes-preserve-unknown-fields":true},"storage":{"type":"string"},"storageClass":{"type":"string"}}},"journal":{"type":"object","properties":{"labelSelector":{"type":"object","x-kubernetes-preserve-unknown-fields":true},"storage":{"type":"string"},"storageClass":{"type":"string"}}},"logs":{"type":"object","properties":{"labelSelector":{"type":"object","x-kubernetes-preserve-unknown-fields":true},"storage":{"type":"string"},"storageClass":{"type":"string"}}}}},"single":{"type":"object","properties":{"labelSelector":{"type":"object","x-kubernetes-preserve-unknown-fields":true},"storage":{"type":"string"},"storageClass":{"type":"string"}}}}},"podTemplate":{"type":"object","x-kubernetes-preserve-unknown-fields":true}}}},"statefulSet":{"description":"StatefulSetConfiguration provides the statefulset override for each of the cluster's statefulset if  \"StatefulSetConfiguration\" is specified at cluster level under \"clusterSpecList\" that takes precedence over the global one","type":"object","required":["spec"],"properties":{"spec":{"type":"object","x-kubernetes-preserve-unknown-fields":true}}},"type":{"type":"string","enum":["Standalone","ReplicaSet","ShardedCluster"]},"version":{"type":"string","pattern":"^[0-9]+.[0-9]+.[0-9]+(-.+)?$|^$"}},"x-kubernetes-preserve-unknown-fields":true},"status":{"type":"object","required":["phase","version"],"properties":{"backup":{"type":"object","required":["statusName"],"properties":{"statusName":{"type":"string"}}},"configServerCount":{"type":"integer"},"lastTransition":{"type":"string"},"link":{"type":"string"},"members":{"type":"integer"},"message":{"type":"string"},"mongodsPerShardCount":{"type":"integer"},"mongosCount":{"type":"integer"},"observedGeneration":{"type":"integer","format":"int64"},"phase":{"type":"string"},"resourcesNotReady":{"type":"array","items":{"description":"ResourceNotReady describes the dependent resource which is not ready yet","type":"object","required":["kind","name"],"properties":{"errors":{"type":"array","items":{"type":"object","properties":{"message":{"type":"string"},"reason":{"type":"string"}}}},"kind":{"description":"ResourceKind specifies a kind of a Kubernetes resource. Used in status of a Custom Resource","type":"string"},"message":{"type":"string"},"name":{"type":"string"}}}},"shardCount":{"type":"integer"},"version":{"type":"string"},"warnings":{"type":"array","items":{"type":"string"}}}}},"x-kubernetes-group-version-kind":[{"group":"mongodb.com","kind":"MongoDB","version":"v1"}]},"com.mongodb.v1.MongoDBList":{"description":"MongoDBList is a list of MongoDB","type":"object","required":["items"],"properties":{"apiVersion":{"description":"APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources","type":"string"},"items":{"description":"List of mongodb. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md","type":"array","items":{"$ref":"#/components/schemas/com.mongodb.v1.MongoDB"}},"kind":{"description":"Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds","type":"string"},"metadata":{"description":"Standard list metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds","allOf":[{"$ref":"#/components/schemas/io.k8s.apimachinery.pkg.apis.meta.v1.ListMeta"}]}},"x-kubernetes-group-version-kind":[{"group":"mongodb.com","kind":"MongoDBList","version":"v1"}]},"com.mongodb.v1.MongoDBMulti":{"type":"object","required":["spec"],"properties":{"apiVersion":{"description":"APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources","type":"string"},"kind":{"description":"Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds","type":"string"},"metadata":{"description":"Standard object's metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata","allOf":[{"$ref":"#/components/schemas/io.k8s.apimachinery.pkg.apis.meta.v1.ObjectMeta"}]},"spec":{"type":"object","required":["credentials","type","version"],"properties":{"additionalMongodConfig":{"description":"AdditionalMongodConfig is additional configuration that can be passed to each data-bearing mongod at runtime. Uses the same structure as the mongod configuration file: https://docs.mongodb.com/manual/reference/configuration-options/","type":"object","x-kubernetes-preserve-unknown-fields":true},"agent":{"type":"object","properties":{"startupOptions":{"type":"object","additionalProperties":{"type":"string"}}}},"backup":{"description":"Backup contains configuration options for configuring backup for this MongoDB resource","type":"object","properties":{"assignmentLabels":{"description":"Assignment Labels set in the Ops Manager","type":"array","items":{"type":"string"}},"autoTerminateOnDeletion":{"description":"AutoTerminateOnDeletion indicates if the Operator should stop and terminate the Backup before the cleanup, when the MongoDB CR is deleted","type":"boolean"},"encryption":{"description":"Encryption settings","type":"object","properties":{"kmip":{"description":"Kmip corresponds to the KMIP configuration assigned to the Ops Manager Project's configuration.","type":"object","required":["client"],"properties":{"client":{"description":"KMIP Client configuration","type":"object","properties":{"clientCertificatePrefix":{"description":"A prefix used to construct KMIP client certificate (and corresponding password) Secret names. The names are generated using the following pattern: KMIP Client Certificate (TLS Secret): \u003cclientCertificatePrefix\u003e-\u003cCR Name\u003e-kmip-client KMIP Client Certificate Password: \u003cclientCertificatePrefix\u003e-\u003cCR Name\u003e-kmip-client-password The expected key inside is called \"password\".","type":"string"}}}}}}},"mode":{"type":"string","enum":["enabled","disabled","terminated"]},"snapshotSchedule":{"type":"object","properties":{"clusterCheckpointIntervalMin":{"type":"integer","enum":[15,30,60]},"dailySnapshotRetentionDays":{"description":"Number of days to retain daily snapshots. Setting 0 will disable this rule.","type":"integer","maximum":365,"minimum":0},"fullIncrementalDayOfWeek":{"description":"Day of the week when Ops Manager takes a full snapshot. This ensures a recent complete backup. Ops Manager sets the default value to SUNDAY.","type":"string","enum":["SUNDAY","MONDAY","TUESDAY","WEDNESDAY","THURSDAY","FRIDAY","SATURDAY"]},"monthlySnapshotRetentionMonths":{"description":"Number of months to retain weekly snapshots. Setting 0 will disable this rule.","type":"integer","maximum":36,"minimum":0},"pointInTimeWindowHours":{"description":"Number of hours in the past for which a point-in-time snapshot can be created.","type":"integer","enum":[1,2,3,4,5,6,7,15,30,60,90,120,180,360]},"referenceHourOfDay":{"description":"Hour of the day to schedule snapshots using a 24-hour clock, in UTC.","type":"integer","maximum":23,"minimum":0},"referenceMinuteOfHour":{"description":"Minute of the hour to schedule snapshots, in UTC.","type":"integer","maximum":59,"minimum":0},"snapshotIntervalHours":{"description":"Number of hours between snapshots.","type":"integer","enum":[6,8,12,24]},"snapshotRetentionDays":{"description":"Number of days to keep recent snapshots.","type":"integer","maximum":365,"minimum":1},"weeklySnapshotRetentionWeeks":{"description":"Number of weeks to retain weekly snapshots. Setting 0 will disable this rule","type":"integer","maximum":365,"minimum":0}}}}},"cloudManager":{"type":"object","properties":{"configMapRef":{"type":"object","properties":{"name":{"type":"string"}}}}},"clusterDomain":{"type":"string","format":"hostname"},"clusterSpecList":{"description":"ClusterSpecList holds a list with a clusterSpec corresponding to each cluster","type":"object","properties":{"clusterSpecs":{"type":"array","items":{"description":"ClusterSpecItem is the mongodb multi-cluster spec that is specific to a particular Kubernetes cluster, this maps to the statefulset created in each cluster","type":"object","required":["members"],"properties":{"clusterName":{"description":"ClusterName is name of the cluster where the MongoDB Statefulset will be scheduled, the name should have a one on one mapping with the service-account created in the central cluster to talk to the workload clusters.","type":"string"},"exposedExternally":{"description":"ExposedExternally determines whether a NodePort service should be created for the resource","type":"boolean"},"members":{"description":"Amount of members for this MongoDB Replica Set","type":"integer"},"service":{"description":"this is an optional service, it will get the name \"\u003crsName\u003e-service\" in case not provided","type":"string"},"statefulSet":{"description":"StatefulSetConfiguration holds the optional custom StatefulSet that should be merged into the operator created one.","type":"object","required":["spec"],"properties":{"spec":{"type":"object","x-kubernetes-preserve-unknown-fields":true}}}}}}}},"connectivity":{"type":"object","properties":{"replicaSetHorizons":{"type":"array","items":{"description":"MongoDBHorizonConfig holds a map of horizon names to the node addresses, e.g. {   \"internal\": \"my-rs-2.my-internal-domain.com:31843\",   \"external\": \"my-rs-2.my-external-domain.com:21467\" } The key of each item in the map is an arbitrary, user-chosen string that represents the name of the horizon. The value of the item is the host and, optionally, the port that this mongod node will be connected to from.","type":"object","additionalProperties":{"type":"string"}}}}},"credentials":{"description":"Name of the Secret holding credentials information","type":"string"},"duplicateServiceObjects":{"description":"In few service mesh options for ex: Istio, by default we would need to duplicate the service objects created per pod in all the clusters to enable DNS resolution. Users can however configure their ServiceMesh with DNS proxy(https://istio.io/latest/docs/ops/configuration/traffic-management/dns-proxy/) enabled in which case the operator doesn't need to create the service objects per cluster. This options tells the operator whether it should create the service objects in all the clusters or not. By default, if not specified the operator would create the duplicate svc objects.","type":"boolean"},"featureCompatibilityVersion":{"type":"string"},"logLevel":{"type":"string","enum":["DEBUG","INFO","WARN","ERROR","FATAL"]},"opsManager":{"type":"object","properties":{"configMapRef":{"type":"object","properties":{"name":{"type":"string"}}}}},"persistent":{"type":"boolean"},"security":{"type":"object","properties":{"authentication":{"description":"Authentication holds various authentication related settings that affect this MongoDB resource.","type":"object","required":["enabled"],"properties":{"agents":{"description":"Agents contains authentication configuration properties for the agents","type":"object","required":["mode"],"properties":{"automationLdapGroupDN":{"type":"string"},"automationPasswordSecretRef":{"description":"SecretKeySelector selects a key of a Secret.","type":"object","required":["key"],"properties":{"key":{"description":"The key of the secret to select from.  Must be a valid secret key.","type":"string"},"name":{"description":"Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?","type":"string"},"optional":{"description":"Specify whether the Secret or its key must be defined","type":"boolean"}},"x-kubernetes-map-type":"atomic"},"automationUserName":{"type":"string"},"clientCertificateSecretRef":{"type":"object","x-kubernetes-preserve-unknown-fields":true},"mode":{"description":"Mode is the desired Authentication mode that the agents will use","type":"string"}}},"enabled":{"type":"boolean"},"ignoreUnknownUsers":{"description":"IgnoreUnknownUsers maps to the inverse of auth.authoritativeSet","type":"boolean"},"internalCluster":{"type":"string"},"ldap":{"description":"LDAP Configuration","type":"object","properties":{"authzQueryTemplate":{"type":"string"},"bindQueryPasswordSecretRef":{"type":"object","required":["name"],"properties":{"name":{"type":"string"}}},"bindQueryUser":{"type":"string"},"caConfigMapRef":{"description":"Allows to point at a ConfigMap/key with a CA file to mount on the Pod","type":"object","required":["key"],"properties":{"key":{"description":"The key to select.","type":"string"},"name":{"description":"Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?","type":"string"},"optional":{"description":"Specify whether the ConfigMap or its key must be defined","type":"boolean"}},"x-kubernetes-map-type":"atomic"},"servers":{"type":"array","items":{"type":"string"}},"timeoutMS":{"type":"integer"},"transportSecurity":{"type":"string","enum":["tls","none"]},"userCacheInvalidationInterval":{"type":"integer"},"userToDNMapping":{"type":"string"},"validateLDAPServerConfig":{"type":"boolean"}}},"modes":{"type":"array","items":{"type":"string"}},"requireClientTLSAuthentication":{"description":"Clients should present valid TLS certificates","type":"boolean"}}},"certsSecretPrefix":{"type":"string"},"roles":{"type":"array","items":{"type":"object","required":["db","role"],"properties":{"authenticationRestrictions":{"type":"array","items":{"type":"object","properties":{"clientSource":{"type":"array","items":{"type":"string"}},"serverAddress":{"type":"array","items":{"type":"string"}}}}},"db":{"type":"string"},"privileges":{"type":"array","items":{"type":"object","required":["actions","resource"],"properties":{"actions":{"type":"array","items":{"type":"string"}},"resource":{"type":"object","properties":{"cluster":{"type":"boolean"},"collection":{"type":"string"},"db":{"type":"string"}}}}}},"role":{"type":"string"},"roles":{"type":"array","items":{"type":"object","required":["db","role"],"properties":{"db":{"type":"string"},"role":{"type":"string"}}}}}}},"tls":{"type":"object","properties":{"additionalCertificateDomains":{"type":"array","items":{"type":"string"}},"ca":{"description":"CA corresponds to a ConfigMap containing an entry for the CA certificate (ca.pem) used to validate the certificates created already.","type":"string"},"enabled":{"description":"DEPRECATED please enable TLS by setting `security.certsSecretPrefix` or `security.tls.secretRef.prefix`. Enables TLS for this resource. This will make the operator try to mount a Secret with a defined name (\u003cresource-name\u003e-cert). This is only used when enabling TLS on a MongoDB resource, and not on the AppDB, where TLS is configured by setting `secretRef.Name`.","type":"boolean"}}}}},"statefulSet":{"description":"StatefulSetConfiguration provides the statefulset override for each of the cluster's statefulset if  \"StatefulSetConfiguration\" is specified at cluster level under \"clusterSpecList\" that takes precedence over the global one","type":"object","required":["spec"],"properties":{"spec":{"type":"object","x-kubernetes-preserve-unknown-fields":true}}},"type":{"type":"string","enum":["ReplicaSet"]},"version":{"type":"string","pattern":"^[0-9]+.[0-9]+.[0-9]+(-.+)?$|^$"}}},"status":{"type":"object","required":["phase","version"],"properties":{"backup":{"type":"object","required":["statusName"],"properties":{"statusName":{"type":"string"}}},"clusterStatusList":{"description":"ClusterStatusList holds a list of clusterStatuses corresponding to each cluster","type":"object","properties":{"clusterStatuses":{"type":"array","items":{"description":"ClusterStatusItem is the mongodb multi-cluster spec that is specific to a particular Kubernetes cluster, this maps to the statefulset created in each cluster","type":"object","required":["phase"],"properties":{"clusterName":{"description":"ClusterName is name of the cluster where the MongoDB Statefulset will be scheduled, the name should have a one on one mapping with the service-account created in the central cluster to talk to the workload clusters.","type":"string"},"lastTransition":{"type":"string"},"members":{"type":"integer"},"message":{"type":"string"},"observedGeneration":{"type":"integer","format":"int64"},"phase":{"type":"string"},"resourcesNotReady":{"type":"array","items":{"description":"ResourceNotReady describes the dependent resource which is not ready yet","type":"object","required":["kind","name"],"properties":{"errors":{"type":"array","items":{"type":"object","properties":{"message":{"type":"string"},"reason":{"type":"string"}}}},"kind":{"description":"ResourceKind specifies a kind of a Kubernetes resource. Used in status of a Custom Resource","type":"string"},"message":{"type":"string"},"name":{"type":"string"}}}},"warnings":{"type":"array","items":{"type":"string"}}}}}}},"lastTransition":{"type":"string"},"link":{"type":"string"},"message":{"type":"string"},"observedGeneration":{"type":"integer","format":"int64"},"phase":{"type":"string"},"resourcesNotReady":{"type":"array","items":{"description":"ResourceNotReady describes the dependent resource which is not ready yet","type":"object","required":["kind","name"],"properties":{"errors":{"type":"array","items":{"type":"object","properties":{"message":{"type":"string"},"reason":{"type":"string"}}}},"kind":{"description":"ResourceKind specifies a kind of a Kubernetes resource. Used in status of a Custom Resource","type":"string"},"message":{"type":"string"},"name":{"type":"string"}}}},"version":{"type":"string"},"warnings":{"type":"array","items":{"type":"string"}}}}},"x-kubernetes-group-version-kind":[{"group":"mongodb.com","kind":"MongoDBMulti","version":"v1"}]},"com.mongodb.v1.MongoDBMultiCluster":{"type":"object","required":["spec"],"properties":{"apiVersion":{"description":"APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources","type":"string"},"kind":{"description":"Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds","type":"string"},"metadata":{"description":"Standard object's metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata","allOf":[{"$ref":"#/components/schemas/io.k8s.apimachinery.pkg.apis.meta.v1.ObjectMeta"}]},"spec":{"type":"object","required":["credentials","type","version"],"properties":{"additionalMongodConfig":{"description":"AdditionalMongodConfig is additional configuration that can be passed to each data-bearing mongod at runtime. Uses the same structure as the mongod configuration file: https://docs.mongodb.com/manual/reference/configuration-options/","type":"object","x-kubernetes-preserve-unknown-fields":true},"agent":{"type":"object","properties":{"logLevel":{"type":"string"},"maxLogFileDurationHours":{"type":"integer"},"startupOptions":{"type":"object","additionalProperties":{"type":"string"}}}},"backup":{"description":"Backup contains configuration options for configuring backup for this MongoDB resource","type":"object","properties":{"assignmentLabels":{"description":"Assignment Labels set in the Ops Manager","type":"array","items":{"type":"string"}},"autoTerminateOnDeletion":{"description":"AutoTerminateOnDeletion indicates if the Operator should stop and terminate the Backup before the cleanup, when the MongoDB CR is deleted","type":"boolean"},"encryption":{"description":"Encryption settings","type":"object","properties":{"kmip":{"description":"Kmip corresponds to the KMIP configuration assigned to the Ops Manager Project's configuration.","type":"object","required":["client"],"properties":{"client":{"description":"KMIP Client configuration","type":"object","properties":{"clientCertificatePrefix":{"description":"A prefix used to construct KMIP client certificate (and corresponding password) Secret names. The names are generated using the following pattern: KMIP Client Certificate (TLS Secret): \u003cclientCertificatePrefix\u003e-\u003cCR Name\u003e-kmip-client KMIP Client Certificate Password: \u003cclientCertificatePrefix\u003e-\u003cCR Name\u003e-kmip-client-password The expected key inside is called \"password\".","type":"string"}}}}}}},"mode":{"type":"string","enum":["enabled","disabled","terminated"]},"snapshotSchedule":{"type":"object","properties":{"clusterCheckpointIntervalMin":{"type":"integer","enum":[15,30,60]},"dailySnapshotRetentionDays":{"description":"Number of days to retain daily snapshots. Setting 0 will disable this rule.","type":"integer","maximum":365,"minimum":0},"fullIncrementalDayOfWeek":{"description":"Day of the week when Ops Manager takes a full snapshot. This ensures a recent complete backup. Ops Manager sets the default value to SUNDAY.","type":"string","enum":["SUNDAY","MONDAY","TUESDAY","WEDNESDAY","THURSDAY","FRIDAY","SATURDAY"]},"monthlySnapshotRetentionMonths":{"description":"Number of months to retain weekly snapshots. Setting 0 will disable this rule.","type":"integer","maximum":36,"minimum":0},"pointInTimeWindowHours":{"description":"Number of hours in the past for which a point-in-time snapshot can be created.","type":"integer","enum":[1,2,3,4,5,6,7,15,30,60,90,120,180,360]},"referenceHourOfDay":{"description":"Hour of the day to schedule snapshots using a 24-hour clock, in UTC.","type":"integer","maximum":23,"minimum":0},"referenceMinuteOfHour":{"description":"Minute of the hour to schedule snapshots, in UTC.","type":"integer","maximum":59,"minimum":0},"snapshotIntervalHours":{"description":"Number of hours between snapshots.","type":"integer","enum":[6,8,12,24]},"snapshotRetentionDays":{"description":"Number of days to keep recent snapshots.","type":"integer","maximum":365,"minimum":1},"weeklySnapshotRetentionWeeks":{"description":"Number of weeks to retain weekly snapshots. Setting 0 will disable this rule","type":"integer","maximum":365,"minimum":0}}}}},"cloudManager":{"type":"object","properties":{"configMapRef":{"type":"object","properties":{"name":{"type":"string"}}}}},"clusterDomain":{"type":"string","format":"hostname"},"clusterSpecList":{"type":"array","items":{"description":"ClusterSpecItem is the mongodb multi-cluster spec that is specific to a particular Kubernetes cluster, this maps to the statefulset created in each cluster","type":"object","required":["members"],"properties":{"clusterName":{"description":"ClusterName is name of the cluster where the MongoDB Statefulset will be scheduled, the name should have a one on one mapping with the service-account created in the central cluster to talk to the workload clusters.","type":"string"},"exposedExternally":{"description":"DEPRECATED: use ExternalAccessConfiguration instead","type":"boolean"},"externalAccess":{"description":"ExternalAccessConfiguration provides external access configuration for Multi-Cluster.","type":"object","properties":{"externalDomain":{"description":"An external domain that is used for exposing MongoDB to the outside world.","type":"string"},"externalService":{"description":"Provides a way to override the default (NodePort) Service","type":"object","properties":{"annotations":{"description":"A map of annotations that shall be added to the externally available Service.","type":"object","additionalProperties":{"type":"string"}},"spec":{"description":"A wrapper for the Service spec object.","type":"object","x-kubernetes-preserve-unknown-fields":true}}}}},"memberConfig":{"description":"MemberConfig","type":"array","items":{"type":"object","properties":{"priority":{"type":"string"},"tags":{"type":"object","additionalProperties":{"type":"string"}},"votes":{"type":"integer"}}},"x-kubernetes-preserve-unknown-fields":true},"members":{"description":"Amount of members for this MongoDB Replica Set","type":"integer"},"service":{"description":"this is an optional service, it will get the name \"\u003crsName\u003e-service\" in case not provided","type":"string"},"statefulSet":{"description":"StatefulSetConfiguration holds the optional custom StatefulSet that should be merged into the operator created one.","type":"object","required":["spec"],"properties":{"spec":{"type":"object","x-kubernetes-preserve-unknown-fields":true}}}}}},"connectivity":{"type":"object","properties":{"replicaSetHorizons":{"description":"ReplicaSetHorizons holds list of maps of horizons to be configured in each of MongoDB processes. Horizons map horizon names to the node addresses for each process in the replicaset, e.g.: [ { \"internal\": \"my-rs-0.my-internal-domain.com:31843\", \"external\": \"my-rs-0.my-external-domain.com:21467\" }, { \"internal\": \"my-rs-1.my-internal-domain.com:31843\", \"external\": \"my-rs-1.my-external-domain.com:21467\" }, ... ] The key of each item in the map is an arbitrary, user-chosen string that represents the name of the horizon. The value of the item is the host and, optionally, the port that this mongod node will be connected to from.","type":"array","items":{"type":"object","additionalProperties":{"type":"string"}}}}},"credentials":{"description":"Name of the Secret holding credentials information","type":"string"},"duplicateServiceObjects":{"description":"In few service mesh options for ex: Istio, by default we would need to duplicate the service objects created per pod in all the clusters to enable DNS resolution. Users can however configure their ServiceMesh with DNS proxy(https://istio.io/latest/docs/ops/configuration/traffic-management/dns-proxy/) enabled in which case the operator doesn't need to create the service objects per cluster. This options tells the operator whether it should create the service objects in all the clusters or not. By default, if not specified the operator would create the duplicate svc objects.","type":"boolean"},"exposedExternally":{"description":"DEPRECATED: use ExternalAccessConfiguration instead","type":"boolean"},"externalAccess":{"description":"ExternalAccessConfiguration provides external access configuration.","type":"object","properties":{"externalDomain":{"description":"An external domain that is used for exposing MongoDB to the outside world.","type":"string"},"externalService":{"description":"Provides a way to override the default (NodePort) Service","type":"object","properties":{"annotations":{"description":"A map of annotations that shall be added to the externally available Service.","type":"object","additionalProperties":{"type":"string"}},"spec":{"description":"A wrapper for the Service spec object.","type":"object","x-kubernetes-preserve-unknown-fields":true}}}}},"featureCompatibilityVersion":{"type":"string"},"logLevel":{"type":"string","enum":["DEBUG","INFO","WARN","ERROR","FATAL"]},"opsManager":{"type":"object","properties":{"configMapRef":{"type":"object","properties":{"name":{"type":"string"}}}}},"persistent":{"type":"boolean"},"prometheus":{"description":"Prometheus configurations.","type":"object","required":["passwordSecretRef","username"],"properties":{"metricsPath":{"description":"Indicates path to the metrics endpoint.","type":"string","pattern":"^\\/[a-z0-9]+$"},"passwordSecretRef":{"description":"Name of a Secret containing a HTTP Basic Auth Password.","type":"object","required":["name"],"properties":{"key":{"description":"Key is the key in the secret storing this password. Defaults to \"password\"","type":"string"},"name":{"description":"Name is the name of the secret storing this user's password","type":"string"}}},"port":{"description":"Port where metrics endpoint will bind to. Defaults to 9216.","type":"integer"},"tlsSecretKeyRef":{"description":"Name of a Secret (type kubernetes.io/tls) holding the certificates to use in the Prometheus endpoint.","type":"object","required":["name"],"properties":{"key":{"description":"Key is the key in the secret storing this password. Defaults to \"password\"","type":"string"},"name":{"description":"Name is the name of the secret storing this user's password","type":"string"}}},"username":{"description":"HTTP Basic Auth Username for metrics endpoint.","type":"string"}}},"security":{"type":"object","properties":{"authentication":{"description":"Authentication holds various authentication related settings that affect this MongoDB resource.","type":"object","required":["enabled"],"properties":{"agents":{"description":"Agents contains authentication configuration properties for the agents","type":"object","required":["mode"],"properties":{"automationLdapGroupDN":{"type":"string"},"automationPasswordSecretRef":{"description":"SecretKeySelector selects a key of a Secret.","type":"object","required":["key"],"properties":{"key":{"description":"The key of the secret to select from.  Must be a valid secret key.","type":"string"},"name":{"description":"Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?","type":"string"},"optional":{"description":"Specify whether the Secret or its key must be defined","type":"boolean"}},"x-kubernetes-map-type":"atomic"},"automationUserName":{"type":"string"},"clientCertificateSecretRef":{"type":"object","x-kubernetes-preserve-unknown-fields":true},"mode":{"description":"Mode is the desired Authentication mode that the agents will use","type":"string"}}},"enabled":{"type":"boolean"},"ignoreUnknownUsers":{"description":"IgnoreUnknownUsers maps to the inverse of auth.authoritativeSet","type":"boolean"},"internalCluster":{"type":"string"},"ldap":{"description":"LDAP Configuration","type":"object","properties":{"authzQueryTemplate":{"type":"string"},"bindQueryPasswordSecretRef":{"type":"object","required":["name"],"properties":{"name":{"type":"string"}}},"bindQueryUser":{"type":"string"},"caConfigMapRef":{"description":"Allows to point at a ConfigMap/key with a CA file to mount on the Pod","type":"object","required":["key"],"properties":{"key":{"description":"The key to select.","type":"string"},"name":{"description":"Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?","type":"string"},"optional":{"description":"Specify whether the ConfigMap or its key must be defined","type":"boolean"}},"x-kubernetes-map-type":"atomic"},"servers":{"type":"array","items":{"type":"string"}},"timeoutMS":{"type":"integer"},"transportSecurity":{"type":"string","enum":["tls","none"]},"userCacheInvalidationInterval":{"type":"integer"},"userToDNMapping":{"type":"string"},"validateLDAPServerConfig":{"type":"boolean"}}},"modes":{"type":"array","items":{"type":"string"}},"requireClientTLSAuthentication":{"description":"Clients should present valid TLS certificates","type":"boolean"}}},"certsSecretPrefix":{"type":"string"},"roles":{"type":"array","items":{"type":"object","required":["db","role"],"properties":{"authenticationRestrictions":{"type":"array","items":{"type":"object","properties":{"clientSource":{"type":"array","items":{"type":"string"}},"serverAddress":{"type":"array","items":{"type":"string"}}}}},"db":{"type":"string"},"privileges":{"type":"array","items":{"type":"object","required":["actions","resource"],"properties":{"actions":{"type":"array","items":{"type":"string"}},"resource":{"type":"object","properties":{"cluster":{"type":"boolean"},"collection":{"type":"string"},"db":{"type":"string"}}}}}},"role":{"type":"string"},"roles":{"type":"array","items":{"type":"object","required":["db","role"],"properties":{"db":{"type":"string"},"role":{"type":"string"}}}}}}},"tls":{"type":"object","properties":{"additionalCertificateDomains":{"type":"array","items":{"type":"string"}},"ca":{"description":"CA corresponds to a ConfigMap containing an entry for the CA certificate (ca.pem) used to validate the certificates created already.","type":"string"},"enabled":{"description":"DEPRECATED please enable TLS by setting `security.certsSecretPrefix` or `security.tls.secretRef.prefix`. Enables TLS for this resource. This will make the operator try to mount a Secret with a defined name (\u003cresource-name\u003e-cert). This is only used when enabling TLS on a MongoDB resource, and not on the AppDB, where TLS is configured by setting `secretRef.Name`.","type":"boolean"}}}}},"statefulSet":{"description":"StatefulSetConfiguration provides the statefulset override for each of the cluster's statefulset if  \"StatefulSetConfiguration\" is specified at cluster level under \"clusterSpecList\" that takes precedence over the global one","type":"object","required":["spec"],"properties":{"spec":{"type":"object","x-kubernetes-preserve-unknown-fields":true}}},"type":{"type":"string","enum":["Standalone","ReplicaSet","ShardedCluster"]},"version":{"type":"string","pattern":"^[0-9]+.[0-9]+.[0-9]+(-.+)?$|^$"}},"x-kubernetes-preserve-unknown-fields":true},"status":{"type":"object","required":["phase","version"],"properties":{"backup":{"type":"object","required":["statusName"],"properties":{"statusName":{"type":"string"}}},"clusterStatusList":{"description":"ClusterStatusList holds a list of clusterStatuses corresponding to each cluster","type":"object","properties":{"clusterStatuses":{"type":"array","items":{"description":"ClusterStatusItem is the mongodb multi-cluster spec that is specific to a particular Kubernetes cluster, this maps to the statefulset created in each cluster","type":"object","required":["phase"],"properties":{"clusterName":{"description":"ClusterName is name of the cluster where the MongoDB Statefulset will be scheduled, the name should have a one on one mapping with the service-account created in the central cluster to talk to the workload clusters.","type":"string"},"lastTransition":{"type":"string"},"members":{"type":"integer"},"message":{"type":"string"},"observedGeneration":{"type":"integer","format":"int64"},"phase":{"type":"string"},"resourcesNotReady":{"type":"array","items":{"description":"ResourceNotReady describes the dependent resource which is not ready yet","type":"object","required":["kind","name"],"properties":{"errors":{"type":"array","items":{"type":"object","properties":{"message":{"type":"string"},"reason":{"type":"string"}}}},"kind":{"description":"ResourceKind specifies a kind of a Kubernetes resource. Used in status of a Custom Resource","type":"string"},"message":{"type":"string"},"name":{"type":"string"}}}},"warnings":{"type":"array","items":{"type":"string"}}}}}}},"lastTransition":{"type":"string"},"link":{"type":"string"},"message":{"type":"string"},"observedGeneration":{"type":"integer","format":"int64"},"phase":{"type":"string"},"resourcesNotReady":{"type":"array","items":{"description":"ResourceNotReady describes the dependent resource which is not ready yet","type":"object","required":["kind","name"],"properties":{"errors":{"type":"array","items":{"type":"object","properties":{"message":{"type":"string"},"reason":{"type":"string"}}}},"kind":{"description":"ResourceKind specifies a kind of a Kubernetes resource. Used in status of a Custom Resource","type":"string"},"message":{"type":"string"},"name":{"type":"string"}}}},"version":{"type":"string"},"warnings":{"type":"array","items":{"type":"string"}}}}},"x-kubernetes-group-version-kind":[{"group":"mongodb.com","kind":"MongoDBMultiCluster","version":"v1"}]},"com.mongodb.v1.MongoDBMultiClusterList":{"description":"MongoDBMultiClusterList is a list of MongoDBMultiCluster","type":"object","required":["items"],"properties":{"apiVersion":{"description":"APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources","type":"string"},"items":{"description":"List of mongodbmulticluster. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md","type":"array","items":{"$ref":"#/components/schemas/com.mongodb.v1.MongoDBMultiCluster"}},"kind":{"description":"Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds","type":"string"},"metadata":{"description":"Standard list metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds","allOf":[{"$ref":"#/components/schemas/io.k8s.apimachinery.pkg.apis.meta.v1.ListMeta"}]}},"x-kubernetes-group-version-kind":[{"group":"mongodb.com","kind":"MongoDBMultiClusterList","version":"v1"}]},"com.mongodb.v1.MongoDBMultiList":{"description":"MongoDBMultiList is a list of MongoDBMulti","type":"object","required":["items"],"properties":{"apiVersion":{"description":"APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources","type":"string"},"items":{"description":"List of mongodbmulti. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md","type":"array","items":{"$ref":"#/components/schemas/com.mongodb.v1.MongoDBMulti"}},"kind":{"description":"Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds","type":"string"},"metadata":{"description":"Standard list metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds","allOf":[{"$ref":"#/components/schemas/io.k8s.apimachinery.pkg.apis.meta.v1.ListMeta"}]}},"x-kubernetes-group-version-kind":[{"group":"mongodb.com","kind":"MongoDBMultiList","version":"v1"}]},"com.mongodb.v1.MongoDBOpsManager":{"type":"object","required":["spec"],"properties":{"apiVersion":{"description":"APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources","type":"string"},"kind":{"description":"Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds","type":"string"},"metadata":{"description":"Standard object's metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata","allOf":[{"$ref":"#/components/schemas/io.k8s.apimachinery.pkg.apis.meta.v1.ObjectMeta"}]},"spec":{"type":"object","required":["applicationDatabase","version"],"properties":{"adminCredentials":{"description":"AdminSecret is the secret for the first admin user to create has the fields: \"Username\", \"Password\", \"FirstName\", \"LastName\"","type":"string"},"applicationDatabase":{"type":"object","required":["version"],"properties":{"additionalMongodConfig":{"description":"AdditionalMongodConfig is additional configuration that can be passed to each data-bearing mongod at runtime. Uses the same structure as the mongod configuration file: https://docs.mongodb.com/manual/reference/configuration-options/","type":"object","x-kubernetes-preserve-unknown-fields":true},"agent":{"description":"specify startup flags for the AutomationAgent and MonitoringAgent","type":"object","properties":{"logLevel":{"type":"string"},"maxLogFileDurationHours":{"type":"integer"},"startupOptions":{"type":"object","additionalProperties":{"type":"string"}}}},"automationConfig":{"description":"AutomationConfigOverride holds any fields that will be merged on top of the Automation Config that the operator creates for the AppDB. Currently only the process.disabled field is recognized.","type":"object","required":["processes"],"properties":{"processes":{"type":"array","items":{"description":"OverrideProcess contains fields that we can override on the AutomationConfig processes.","type":"object","required":["disabled","name"],"properties":{"disabled":{"type":"boolean"},"name":{"type":"string"}}}}}},"cloudManager":{"type":"object","properties":{"configMapRef":{"type":"object","properties":{"name":{"type":"string"}}}}},"clusterDomain":{"type":"string"},"connectivity":{"type":"object","properties":{"replicaSetHorizons":{"description":"ReplicaSetHorizons holds list of maps of horizons to be configured in each of MongoDB processes. Horizons map horizon names to the node addresses for each process in the replicaset, e.g.: [ { \"internal\": \"my-rs-0.my-internal-domain.com:31843\", \"external\": \"my-rs-0.my-external-domain.com:21467\" }, { \"internal\": \"my-rs-1.my-internal-domain.com:31843\", \"external\": \"my-rs-1.my-external-domain.com:21467\" }, ... ] The key of each item in the map is an arbitrary, user-chosen string that represents the name of the horizon. The value of the item is the host and, optionally, the port that this mongod node will be connected to from.","type":"array","items":{"type":"object","additionalProperties":{"type":"string"}}}}},"credentials":{"description":"Name of the Secret holding credentials information","type":"string"},"featureCompatibilityVersion":{"type":"string"},"logLevel":{"type":"string","enum":["DEBUG","INFO","WARN","ERROR","FATAL"]},"memberConfig":{"description":"MemberConfig","type":"array","items":{"type":"object","properties":{"priority":{"type":"string"},"tags":{"type":"object","additionalProperties":{"type":"string"}},"votes":{"type":"integer"}}}},"members":{"description":"Amount of members for this MongoDB Replica Set","type":"integer","maximum":50,"minimum":3},"monitoringAgent":{"description":"specify startup flags for just the MonitoringAgent. These take precedence over the flags set in AutomationAgent","type":"object","properties":{"logLevel":{"type":"string"},"maxLogFileDurationHours":{"type":"integer"},"startupOptions":{"type":"object","additionalProperties":{"type":"string"}}}},"opsManager":{"type":"object","properties":{"configMapRef":{"type":"object","properties":{"name":{"type":"string"}}}}},"passwordSecretKeyRef":{"description":"PasswordSecretKeyRef contains a reference to the secret which contains the password for the mongodb-ops-manager SCRAM-SHA user","type":"object","required":["name"],"properties":{"key":{"type":"string"},"name":{"type":"string"}}},"podSpec":{"type":"object","properties":{"persistence":{"type":"object","properties":{"multiple":{"type":"object","properties":{"data":{"type":"object","properties":{"labelSelector":{"type":"object","x-kubernetes-preserve-unknown-fields":true},"storage":{"type":"string"},"storageClass":{"type":"string"}}},"journal":{"type":"object","properties":{"labelSelector":{"type":"object","x-kubernetes-preserve-unknown-fields":true},"storage":{"type":"string"},"storageClass":{"type":"string"}}},"logs":{"type":"object","properties":{"labelSelector":{"type":"object","x-kubernetes-preserve-unknown-fields":true},"storage":{"type":"string"},"storageClass":{"type":"string"}}}}},"single":{"type":"object","properties":{"labelSelector":{"type":"object","x-kubernetes-preserve-unknown-fields":true},"storage":{"type":"string"},"storageClass":{"type":"string"}}}}},"podTemplate":{"type":"object","x-kubernetes-preserve-unknown-fields":true}}},"prometheus":{"description":"Enables Prometheus integration on the AppDB.","type":"object","required":["passwordSecretRef","username"],"properties":{"metricsPath":{"description":"Indicates path to the metrics endpoint.","type":"string","pattern":"^\\/[a-z0-9]+$"},"passwordSecretRef":{"description":"Name of a Secret containing a HTTP Basic Auth Password.","type":"object","required":["name"],"properties":{"key":{"description":"Key is the key in the secret storing this password. Defaults to \"password\"","type":"string"},"name":{"description":"Name is the name of the secret storing this user's password","type":"string"}}},"port":{"description":"Port where metrics endpoint will bind to. Defaults to 9216.","type":"integer"},"tlsSecretKeyRef":{"description":"Name of a Secret (type kubernetes.io/tls) holding the certificates to use in the Prometheus endpoint.","type":"object","required":["name"],"properties":{"key":{"description":"Key is the key in the secret storing this password. Defaults to \"password\"","type":"string"},"name":{"description":"Name is the name of the secret storing this user's password","type":"string"}}},"username":{"description":"HTTP Basic Auth Username for metrics endpoint.","type":"string"}}},"security":{"type":"object","properties":{"authentication":{"description":"Authentication holds various authentication related settings that affect this MongoDB resource.","type":"object","required":["enabled"],"properties":{"agents":{"description":"Agents contains authentication configuration properties for the agents","type":"object","required":["mode"],"properties":{"automationLdapGroupDN":{"type":"string"},"automationPasswordSecretRef":{"description":"SecretKeySelector selects a key of a Secret.","type":"object","required":["key"],"properties":{"key":{"description":"The key of the secret to select from.  Must be a valid secret key.","type":"string"},"name":{"description":"Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?","type":"string"},"optional":{"description":"Specify whether the Secret or its key must be defined","type":"boolean"}},"x-kubernetes-map-type":"atomic"},"automationUserName":{"type":"string"},"clientCertificateSecretRef":{"type":"object","x-kubernetes-preserve-unknown-fields":true},"mode":{"description":"Mode is the desired Authentication mode that the agents will use","type":"string"}}},"enabled":{"type":"boolean"},"ignoreUnknownUsers":{"description":"IgnoreUnknownUsers maps to the inverse of auth.authoritativeSet","type":"boolean"},"internalCluster":{"type":"string"},"ldap":{"description":"LDAP Configuration","type":"object","properties":{"authzQueryTemplate":{"type":"string"},"bindQueryPasswordSecretRef":{"type":"object","required":["name"],"properties":{"name":{"type":"string"}}},"bindQueryUser":{"type":"string"},"caConfigMapRef":{"description":"Allows to point at a ConfigMap/key with a CA file to mount on the Pod","type":"object","required":["key"],"properties":{"key":{"description":"The key to select.","type":"string"},"name":{"description":"Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?","type":"string"},"optional":{"description":"Specify whether the ConfigMap or its key must be defined","type":"boolean"}},"x-kubernetes-map-type":"atomic"},"servers":{"type":"array","items":{"type":"string"}},"timeoutMS":{"type":"integer"},"transportSecurity":{"type":"string","enum":["tls","none"]},"userCacheInvalidationInterval":{"type":"integer"},"userToDNMapping":{"type":"string"},"validateLDAPServerConfig":{"type":"boolean"}}},"modes":{"type":"array","items":{"type":"string"}},"requireClientTLSAuthentication":{"description":"Clients should present valid TLS certificates","type":"boolean"}}},"certsSecretPrefix":{"type":"string"},"roles":{"type":"array","items":{"type":"object","required":["db","role"],"properties":{"authenticationRestrictions":{"type":"array","items":{"type":"object","properties":{"clientSource":{"type":"array","items":{"type":"string"}},"serverAddress":{"type":"array","items":{"type":"string"}}}}},"db":{"type":"string"},"privileges":{"type":"array","items":{"type":"object","required":["actions","resource"],"properties":{"actions":{"type":"array","items":{"type":"string"}},"resource":{"type":"object","properties":{"cluster":{"type":"boolean"},"collection":{"type":"string"},"db":{"type":"string"}}}}}},"role":{"type":"string"},"roles":{"type":"array","items":{"type":"object","required":["db","role"],"properties":{"db":{"type":"string"},"role":{"type":"string"}}}}}}},"tls":{"type":"object","properties":{"additionalCertificateDomains":{"type":"array","items":{"type":"string"}},"ca":{"description":"CA corresponds to a ConfigMap containing an entry for the CA certificate (ca.pem) used to validate the certificates created already.","type":"string"},"enabled":{"description":"DEPRECATED please enable TLS by setting `security.certsSecretPrefix` or `security.tls.secretRef.prefix`. Enables TLS for this resource. This will make the operator try to mount a Secret with a defined name (\u003cresource-name\u003e-cert). This is only used when enabling TLS on a MongoDB resource, and not on the AppDB, where TLS is configured by setting `secretRef.Name`.","type":"boolean"}}}}},"service":{"description":"this is an optional service, it will get the name \"\u003crsName\u003e-service\" in case not provided","type":"string"},"type":{"type":"string","enum":["Standalone","ReplicaSet","ShardedCluster"]},"version":{"type":"string","pattern":"^[0-9]+.[0-9]+.[0-9]+(-.+)?$|^$"}}},"backup":{"description":"Backup","type":"object","required":["enabled"],"properties":{"assignmentLabels":{"description":"Assignment Labels set in the Ops Manager","type":"array","items":{"type":"string"}},"blockStores":{"type":"array","items":{"description":"DataStoreConfig is the description of the config used to reference to database. Reused by Oplog and Block stores Optionally references the user if the Mongodb is configured with authentication","type":"object","required":["mongodbResourceRef","name"],"properties":{"assignmentLabels":{"description":"Assignment Labels set in the Ops Manager","type":"array","items":{"type":"string"}},"mongodbResourceRef":{"type":"object","required":["name"],"properties":{"name":{"type":"string"},"namespace":{"type":"string"}}},"mongodbUserRef":{"type":"object","required":["name"],"properties":{"name":{"type":"string"}}},"name":{"type":"string"}}}},"enabled":{"description":"Enabled indicates if Backups will be enabled for this Ops Manager.","type":"boolean"},"encryption":{"description":"Encryption settings","type":"object","properties":{"kmip":{"description":"Kmip corresponds to the KMIP configuration assigned to the Ops Manager Project's configuration.","type":"object","required":["server"],"properties":{"server":{"description":"KMIP Server configuration","type":"object","required":["ca","url"],"properties":{"ca":{"description":"CA corresponds to a ConfigMap containing an entry for the CA certificate (ca.pem) used for KMIP authentication","type":"string"},"url":{"description":"KMIP Server url in the following format: hostname:port Valid examples are: 10.10.10.3:5696 my-kmip-server.mycorp.com:5696 kmip-svc.svc.cluster.local:5696","type":"string","pattern":"[^\\:]+:[0-9]{0,5}"}}}}}}},"externalServiceEnabled":{"type":"boolean"},"fileSystemStores":{"type":"array","items":{"type":"object","required":["name"],"properties":{"name":{"type":"string"}}}},"headDB":{"description":"HeadDB specifies configuration options for the HeadDB","type":"object","properties":{"labelSelector":{"type":"object","x-kubernetes-preserve-unknown-fields":true},"storage":{"type":"string"},"storageClass":{"type":"string"}}},"jvmParameters":{"type":"array","items":{"type":"string"}},"members":{"description":"Members indicate the number of backup daemon pods to create.","type":"integer","minimum":1},"opLogStores":{"description":"OplogStoreConfigs describes the list of oplog store configs used for backup","type":"array","items":{"description":"DataStoreConfig is the description of the config used to reference to database. Reused by Oplog and Block stores Optionally references the user if the Mongodb is configured with authentication","type":"object","required":["mongodbResourceRef","name"],"properties":{"assignmentLabels":{"description":"Assignment Labels set in the Ops Manager","type":"array","items":{"type":"string"}},"mongodbResourceRef":{"type":"object","required":["name"],"properties":{"name":{"type":"string"},"namespace":{"type":"string"}}},"mongodbUserRef":{"type":"object","required":["name"],"properties":{"name":{"type":"string"}}},"name":{"type":"string"}}}},"queryableBackupSecretRef":{"description":"QueryableBackupSecretRef references the secret which contains the pem file which is used for queryable backup. This will be mounted into the Ops Manager pod.","type":"object","required":["name"],"properties":{"name":{"type":"string"}}},"s3OpLogStores":{"description":"S3OplogStoreConfigs describes the list of s3 oplog store configs used for backup.","type":"array","items":{"type":"object","required":["name","pathStyleAccessEnabled","s3BucketEndpoint","s3BucketName","s3SecretRef"],"properties":{"assignmentLabels":{"description":"Assignment Labels set in the Ops Manager","type":"array","items":{"type":"string"}},"customCertificate":{"description":"Set this to \"true\" when you have custom certificates for your S3 buckets","type":"boolean"},"irsaEnabled":{"description":"This is only set to \"true\" when user is running in EKS and is using AWS IRSA to configure S3 snapshot store. For more details refer this: https://aws.amazon.com/blogs/opensource/introducing-fine-grained-iam-roles-service-accounts/","type":"boolean"},"mongodbResourceRef":{"type":"object","required":["name"],"properties":{"name":{"type":"string"},"namespace":{"type":"string"}}},"mongodbUserRef":{"type":"object","required":["name"],"properties":{"name":{"type":"string"}}},"name":{"type":"string"},"pathStyleAccessEnabled":{"type":"boolean"},"s3BucketEndpoint":{"type":"string"},"s3BucketName":{"type":"string"},"s3RegionOverride":{"type":"string"},"s3SecretRef":{"type":"object","required":["name"],"properties":{"name":{"type":"string"}}}}}},"s3Stores":{"type":"array","items":{"type":"object","required":["name","pathStyleAccessEnabled","s3BucketEndpoint","s3BucketName","s3SecretRef"],"properties":{"assignmentLabels":{"description":"Assignment Labels set in the Ops Manager","type":"array","items":{"type":"string"}},"customCertificate":{"description":"Set this to \"true\" when you have custom certificates for your S3 buckets","type":"boolean"},"irsaEnabled":{"description":"This is only set to \"true\" when user is running in EKS and is using AWS IRSA to configure S3 snapshot store. For more details refer this: https://aws.amazon.com/blogs/opensource/introducing-fine-grained-iam-roles-service-accounts/","type":"boolean"},"mongodbResourceRef":{"type":"object","required":["name"],"properties":{"name":{"type":"string"},"namespace":{"type":"string"}}},"mongodbUserRef":{"type":"object","required":["name"],"properties":{"name":{"type":"string"}}},"name":{"type":"string"},"pathStyleAccessEnabled":{"type":"boolean"},"s3BucketEndpoint":{"type":"string"},"s3BucketName":{"type":"string"},"s3RegionOverride":{"type":"string"},"s3SecretRef":{"type":"object","required":["name"],"properties":{"name":{"type":"string"}}}}}},"statefulSet":{"description":"StatefulSetConfiguration holds the optional custom StatefulSet that should be merged into the operator created one.","type":"object","required":["spec"],"properties":{"spec":{"type":"object","x-kubernetes-preserve-unknown-fields":true}}}}},"clusterDomain":{"type":"string","format":"hostname"},"clusterName":{"description":"Deprecated: This has been replaced by the ClusterDomain which should be used instead","type":"string","format":"hostname"},"configuration":{"description":"The configuration properties passed to Ops Manager/Backup Daemon","type":"object","additionalProperties":{"type":"string"}},"externalConnectivity":{"description":"MongoDBOpsManagerExternalConnectivity if sets allows for the creation of a Service for accessing this Ops Manager resource from outside the Kubernetes cluster.","type":"object","required":["type"],"properties":{"annotations":{"description":"Annotations is a list of annotations to be directly passed to the Service object.","type":"object","additionalProperties":{"type":"string"}},"externalTrafficPolicy":{"description":"ExternalTrafficPolicy mechanism to preserve the client source IP. Only supported on GCE and Google Kubernetes Engine.","type":"string","enum":["Cluster","Local"]},"loadBalancerIP":{"description":"LoadBalancerIP IP that will be assigned to this LoadBalancer.","type":"string"},"port":{"description":"Port in which this `Service` will listen to, this applies to `NodePort`.","type":"integer","format":"int32"},"type":{"description":"Type of the `Service` to be created.","type":"string","enum":["LoadBalancer","NodePort"]}}},"jvmParameters":{"description":"Custom JVM parameters passed to the Ops Manager JVM","type":"array","items":{"type":"string"}},"replicas":{"type":"integer","minimum":1},"security":{"description":"Configure HTTPS.","type":"object","properties":{"certsSecretPrefix":{"type":"string"},"tls":{"type":"object","properties":{"ca":{"type":"string"},"secretRef":{"type":"object","required":["name"],"properties":{"name":{"type":"string"}}}}}}},"statefulSet":{"description":"Configure custom StatefulSet configuration","type":"object","required":["spec"],"properties":{"spec":{"type":"object","x-kubernetes-preserve-unknown-fields":true}}},"version":{"type":"string"}}},"status":{"type":"object","properties":{"applicationDatabase":{"type":"object","required":["phase","version"],"properties":{"backup":{"type":"object","required":["statusName"],"properties":{"statusName":{"type":"string"}}},"configServerCount":{"type":"integer"},"lastTransition":{"type":"string"},"link":{"type":"string"},"members":{"type":"integer"},"message":{"type":"string"},"mongodsPerShardCount":{"type":"integer"},"mongosCount":{"type":"integer"},"observedGeneration":{"type":"integer","format":"int64"},"phase":{"type":"string"},"resourcesNotReady":{"type":"array","items":{"description":"ResourceNotReady describes the dependent resource which is not ready yet","type":"object","required":["kind","name"],"properties":{"errors":{"type":"array","items":{"type":"object","properties":{"message":{"type":"string"},"reason":{"type":"string"}}}},"kind":{"description":"ResourceKind specifies a kind of a Kubernetes resource. Used in status of a Custom Resource","type":"string"},"message":{"type":"string"},"name":{"type":"string"}}}},"shardCount":{"type":"integer"},"version":{"type":"string"},"warnings":{"type":"array","items":{"type":"string"}}}},"backup":{"type":"object","required":["phase"],"properties":{"lastTransition":{"type":"string"},"message":{"type":"string"},"observedGeneration":{"type":"integer","format":"int64"},"phase":{"type":"string"},"resourcesNotReady":{"type":"array","items":{"description":"ResourceNotReady describes the dependent resource which is not ready yet","type":"object","required":["kind","name"],"properties":{"errors":{"type":"array","items":{"type":"object","properties":{"message":{"type":"string"},"reason":{"type":"string"}}}},"kind":{"description":"ResourceKind specifies a kind of a Kubernetes resource. Used in status of a Custom Resource","type":"string"},"message":{"type":"string"},"name":{"type":"string"}}}},"version":{"type":"string"},"warnings":{"type":"array","items":{"type":"string"}}}},"opsManager":{"type":"object","required":["phase"],"properties":{"lastTransition":{"type":"string"},"message":{"type":"string"},"observedGeneration":{"type":"integer","format":"int64"},"phase":{"type":"string"},"replicas":{"type":"integer"},"resourcesNotReady":{"type":"array","items":{"description":"ResourceNotReady describes the dependent resource which is not ready yet","type":"object","required":["kind","name"],"properties":{"errors":{"type":"array","items":{"type":"object","properties":{"message":{"type":"string"},"reason":{"type":"string"}}}},"kind":{"description":"ResourceKind specifies a kind of a Kubernetes resource. Used in status of a Custom Resource","type":"string"},"message":{"type":"string"},"name":{"type":"string"}}}},"url":{"type":"string"},"version":{"type":"string"},"warnings":{"type":"array","items":{"type":"string"}}}}}}},"x-kubernetes-group-version-kind":[{"group":"mongodb.com","kind":"MongoDBOpsManager","version":"v1"}]},"com.mongodb.v1.MongoDBOpsManagerList":{"description":"MongoDBOpsManagerList is a list of MongoDBOpsManager","type":"object","required":["items"],"properties":{"apiVersion":{"description":"APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources","type":"string"},"items":{"description":"List of opsmanagers. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md","type":"array","items":{"$ref":"#/components/schemas/com.mongodb.v1.MongoDBOpsManager"}},"kind":{"description":"Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds","type":"string"},"metadata":{"description":"Standard list metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds","allOf":[{"$ref":"#/components/schemas/io.k8s.apimachinery.pkg.apis.meta.v1.ListMeta"}]}},"x-kubernetes-group-version-kind":[{"group":"mongodb.com","kind":"MongoDBOpsManagerList","version":"v1"}]},"com.mongodb.v1.MongoDBUser":{"type":"object","required":["spec"],"properties":{"apiVersion":{"description":"APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources","type":"string"},"kind":{"description":"Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds","type":"string"},"metadata":{"description":"Standard object's metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata","allOf":[{"$ref":"#/components/schemas/io.k8s.apimachinery.pkg.apis.meta.v1.ObjectMeta"}]},"spec":{"type":"object","required":["db","username"],"properties":{"connectionStringSecretName":{"type":"string"},"db":{"type":"string"},"mongodbResourceRef":{"type":"object","required":["name"],"properties":{"name":{"type":"string"},"namespace":{"type":"string"}}},"passwordSecretKeyRef":{"description":"SecretKeyRef is a reference to a value in a given secret in the same namespace. Based on: https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.15/#secretkeyselector-v1-core","type":"object","required":["name"],"properties":{"key":{"type":"string"},"name":{"type":"string"}}},"roles":{"type":"array","items":{"type":"object","required":["db","name"],"properties":{"db":{"type":"string"},"name":{"type":"string"}}}},"username":{"type":"string"}}},"status":{"type":"object","required":["db","phase","project","username"],"properties":{"db":{"type":"string"},"lastTransition":{"type":"string"},"message":{"type":"string"},"observedGeneration":{"type":"integer","format":"int64"},"phase":{"type":"string"},"project":{"type":"string"},"resourcesNotReady":{"type":"array","items":{"description":"ResourceNotReady describes the dependent resource which is not ready yet","type":"object","required":["kind","name"],"properties":{"errors":{"type":"array","items":{"type":"object","properties":{"message":{"type":"string"},"reason":{"type":"string"}}}},"kind":{"description":"ResourceKind specifies a kind of a Kubernetes resource. Used in status of a Custom Resource","type":"string"},"message":{"type":"string"},"name":{"type":"string"}}}},"roles":{"type":"array","items":{"type":"object","required":["db","name"],"properties":{"db":{"type":"string"},"name":{"type":"string"}}}},"username":{"type":"string"},"warnings":{"type":"array","items":{"type":"string"}}}}},"x-kubernetes-group-version-kind":[{"group":"mongodb.com","kind":"MongoDBUser","version":"v1"}]},"com.mongodb.v1.MongoDBUserList":{"description":"MongoDBUserList is a list of MongoDBUser","type":"object","required":["items"],"properties":{"apiVersion":{"description":"APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources","type":"string"},"items":{"description":"List of mongodbusers. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md","type":"array","items":{"$ref":"#/components/schemas/com.mongodb.v1.MongoDBUser"}},"kind":{"description":"Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds","type":"string"},"metadata":{"description":"Standard list metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds","allOf":[{"$ref":"#/components/schemas/io.k8s.apimachinery.pkg.apis.meta.v1.ListMeta"}]}},"x-kubernetes-group-version-kind":[{"group":"mongodb.com","kind":"MongoDBUserList","version":"v1"}]},"io.k8s.apimachinery.pkg.apis.meta.v1.DeleteOptions":{"description":"DeleteOptions may be provided when deleting an API object.","type":"object","properties":{"apiVersion":{"description":"APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources","type":"string"},"dryRun":{"description":"When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed","type":"array","items":{"type":"string","default":""}},"gracePeriodSeconds":{"description":"The duration in seconds before the object should be deleted. Value must be non-negative integer. The value zero indicates delete immediately. If this value is nil, the default grace period for the specified type will be used. Defaults to a per object value if not specified. zero means delete immediately.","type":"integer","format":"int64"},"kind":{"description":"Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds","type":"string"},"orphanDependents":{"description":"Deprecated: please use the PropagationPolicy, this field will be deprecated in 1.7. Should the dependent objects be orphaned. If true/false, the \"orphan\" finalizer will be added to/removed from the object's finalizers list. Either this field or PropagationPolicy may be set, but not both.","type":"boolean"},"preconditions":{"description":"Must be fulfilled before a deletion is carried out. If not possible, a 409 Conflict status will be returned.","allOf":[{"$ref":"#/components/schemas/io.k8s.apimachinery.pkg.apis.meta.v1.Preconditions"}]},"propagationPolicy":{"description":"Whether and how garbage collection will be performed. Either this field or OrphanDependents may be set, but not both. The default policy is decided by the existing finalizer set in the metadata.finalizers and the resource-specific default policy. Acceptable values are: 'Orphan' - orphan the dependents; 'Background' - allow the garbage collector to delete the dependents in the background; 'Foreground' - a cascading policy that deletes all dependents in the foreground.","type":"string"}}},"io.k8s.apimachinery.pkg.apis.meta.v1.FieldsV1":{"description":"FieldsV1 stores a set of fields in a data structure like a Trie, in JSON format.\n\nEach key is either a '.' representing the field itself, and will always map to an empty set, or a string representing a sub-field or item. The string will follow one of these four formats: 'f:\u003cname\u003e', where \u003cname\u003e is the name of a field in a struct, or key in a map 'v:\u003cvalue\u003e', where \u003cvalue\u003e is the exact json formatted value of a list item 'i:\u003cindex\u003e', where \u003cindex\u003e is position of a item in a list 'k:\u003ckeys\u003e', where \u003ckeys\u003e is a map of  a list item's key fields to their unique values If a key maps to an empty Fields value, the field that key represents is part of the set.\n\nThe exact format is defined in sigs.k8s.io/structured-merge-diff","type":"object"},"io.k8s.apimachinery.pkg.apis.meta.v1.ListMeta":{"description":"ListMeta describes metadata that synthetic resources must have, including lists and various status objects. A resource may have only one of {ObjectMeta, ListMeta}.","type":"object","properties":{"continue":{"description":"continue may be set if the user set a limit on the number of items returned, and indicates that the server has more data available. The value is opaque and may be used to issue another request to the endpoint that served this list to retrieve the next set of available objects. Continuing a consistent list may not be possible if the server configuration has changed or more than a few minutes have passed. The resourceVersion field returned when using this continue value will be identical to the value in the first response, unless you have received this token from an error message.","type":"string"},"remainingItemCount":{"description":"remainingItemCount is the number of subsequent items in the list which are not included in this list response. If the list request contained label or field selectors, then the number of remaining items is unknown and the field will be left unset and omitted during serialization. If the list is complete (either because it is not chunking or because this is the last chunk), then there are no more remaining items and this field will be left unset and omitted during serialization. Servers older than v1.15 do not set this field. The intended use of the remainingItemCount is *estimating* the size of a collection. Clients should not rely on the remainingItemCount to be set or to be exact.","type":"integer","format":"int64"},"resourceVersion":{"description":"String that identifies the server's internal version of this object that can be used by clients to determine when objects have changed. Value must be treated as opaque by clients and passed unmodified back to the server. Populated by the system. Read-only. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency","type":"string"},"selfLink":{"description":"Deprecated: selfLink is a legacy read-only field that is no longer populated by the system.","type":"string"}}},"io.k8s.apimachinery.pkg.apis.meta.v1.ManagedFieldsEntry":{"description":"ManagedFieldsEntry is a workflow-id, a FieldSet and the group version of the resource that the fieldset applies to.","type":"object","properties":{"apiVersion":{"description":"APIVersion defines the version of this resource that this field set applies to. The format is \"group/version\" just like the top-level APIVersion field. It is necessary to track the version of a field set because it cannot be automatically converted.","type":"string"},"fieldsType":{"description":"FieldsType is the discriminator for the different fields format and version. There is currently only one possible value: \"FieldsV1\"","type":"string"},"fieldsV1":{"description":"FieldsV1 holds the first JSON version format as described in the \"FieldsV1\" type.","allOf":[{"$ref":"#/components/schemas/io.k8s.apimachinery.pkg.apis.meta.v1.FieldsV1"}]},"manager":{"description":"Manager is an identifier of the workflow managing these fields.","type":"string"},"operation":{"description":"Operation is the type of operation which lead to this ManagedFieldsEntry being created. The only valid values for this field are 'Apply' and 'Update'.","type":"string"},"subresource":{"description":"Subresource is the name of the subresource used to update that object, or empty string if the object was updated through the main resource. The value of this field is used to distinguish between managers, even if they share the same name. For example, a status update will be distinct from a regular update using the same manager name. Note that the APIVersion field is not related to the Subresource field and it always corresponds to the version of the main resource.","type":"string"},"time":{"description":"Time is the timestamp of when the ManagedFields entry was added. The timestamp will also be updated if a field is added, the manager changes any of the owned fields value or removes a field. The timestamp does not update when a field is removed from the entry because another manager took it over.","allOf":[{"$ref":"#/components/schemas/io.k8s.apimachinery.pkg.apis.meta.v1.Time"}]}}},"io.k8s.apimachinery.pkg.apis.meta.v1.ObjectMeta":{"description":"ObjectMeta is metadata that all persisted resources must have, which includes all objects users must create.","type":"object","properties":{"annotations":{"description":"Annotations is an unstructured key value map stored with a resource that may be set by external tools to store and retrieve arbitrary metadata. They are not queryable and should be preserved when modifying objects. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations","type":"object","additionalProperties":{"type":"string","default":""}},"creationTimestamp":{"description":"CreationTimestamp is a timestamp representing the server time when this object was created. It is not guaranteed to be set in happens-before order across separate operations. Clients may not set this value. It is represented in RFC3339 form and is in UTC.\n\nPopulated by the system. Read-only. Null for lists. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata","default":{},"allOf":[{"$ref":"#/components/schemas/io.k8s.apimachinery.pkg.apis.meta.v1.Time"}]},"deletionGracePeriodSeconds":{"description":"Number of seconds allowed for this object to gracefully terminate before it will be removed from the system. Only set when deletionTimestamp is also set. May only be shortened. Read-only.","type":"integer","format":"int64"},"deletionTimestamp":{"description":"DeletionTimestamp is RFC 3339 date and time at which this resource will be deleted. This field is set by the server when a graceful deletion is requested by the user, and is not directly settable by a client. The resource is expected to be deleted (no longer visible from resource lists, and not reachable by name) after the time in this field, once the finalizers list is empty. As long as the finalizers list contains items, deletion is blocked. Once the deletionTimestamp is set, this value may not be unset or be set further into the future, although it may be shortened or the resource may be deleted prior to this time. For example, a user may request that a pod is deleted in 30 seconds. The Kubelet will react by sending a graceful termination signal to the containers in the pod. After that 30 seconds, the Kubelet will send a hard termination signal (SIGKILL) to the container and after cleanup, remove the pod from the API. In the presence of network partitions, this object may still exist after this timestamp, until an administrator or automated process can determine the resource is fully terminated. If not set, graceful deletion of the object has not been requested.\n\nPopulated by the system when a graceful deletion is requested. Read-only. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata","allOf":[{"$ref":"#/components/schemas/io.k8s.apimachinery.pkg.apis.meta.v1.Time"}]},"finalizers":{"description":"Must be empty before the object is deleted from the registry. Each entry is an identifier for the responsible component that will remove the entry from the list. If the deletionTimestamp of the object is non-nil, entries in this list can only be removed. Finalizers may be processed and removed in any order.  Order is NOT enforced because it introduces significant risk of stuck finalizers. finalizers is a shared field, any actor with permission can reorder it. If the finalizer list is processed in order, then this can lead to a situation in which the component responsible for the first finalizer in the list is waiting for a signal (field value, external system, or other) produced by a component responsible for a finalizer later in the list, resulting in a deadlock. Without enforced ordering finalizers are free to order amongst themselves and are not vulnerable to ordering changes in the list.","type":"array","items":{"type":"string","default":""},"x-kubernetes-patch-strategy":"merge"},"generateName":{"description":"GenerateName is an optional prefix, used by the server, to generate a unique name ONLY IF the Name field has not been provided. If this field is used, the name returned to the client will be different than the name passed. This value will also be combined with a unique suffix. The provided value has the same validation rules as the Name field, and may be truncated by the length of the suffix required to make the value unique on the server.\n\nIf this field is specified and the generated name exists, the server will return a 409.\n\nApplied only if Name is not specified. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#idempotency","type":"string"},"generation":{"description":"A sequence number representing a specific generation of the desired state. Populated by the system. Read-only.","type":"integer","format":"int64"},"labels":{"description":"Map of string keys and values that can be used to organize and categorize (scope and select) objects. May match selectors of replication controllers and services. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/labels","type":"object","additionalProperties":{"type":"string","default":""}},"managedFields":{"description":"ManagedFields maps workflow-id and version to the set of fields that are managed by that workflow. This is mostly for internal housekeeping, and users typically shouldn't need to set or understand this field. A workflow can be the user's name, a controller's name, or the name of a specific apply path like \"ci-cd\". The set of fields is always in the version that the workflow used when modifying the object.","type":"array","items":{"default":{},"allOf":[{"$ref":"#/components/schemas/io.k8s.apimachinery.pkg.apis.meta.v1.ManagedFieldsEntry"}]}},"name":{"description":"Name must be unique within a namespace. Is required when creating resources, although some resources may allow a client to request the generation of an appropriate name automatically. Name is primarily intended for creation idempotence and configuration definition. Cannot be updated. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names#names","type":"string"},"namespace":{"description":"Namespace defines the space within which each name must be unique. An empty namespace is equivalent to the \"default\" namespace, but \"default\" is the canonical representation. Not all objects are required to be scoped to a namespace - the value of this field for those objects will be empty.\n\nMust be a DNS_LABEL. Cannot be updated. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces","type":"string"},"ownerReferences":{"description":"List of objects depended by this object. If ALL objects in the list have been deleted, this object will be garbage collected. If this object is managed by a controller, then an entry in this list will point to this controller, with the controller field set to true. There cannot be more than one managing controller.","type":"array","items":{"default":{},"allOf":[{"$ref":"#/components/schemas/io.k8s.apimachinery.pkg.apis.meta.v1.OwnerReference"}]},"x-kubernetes-patch-merge-key":"uid","x-kubernetes-patch-strategy":"merge"},"resourceVersion":{"description":"An opaque value that represents the internal version of this object that can be used by clients to determine when objects have changed. May be used for optimistic concurrency, change detection, and the watch operation on a resource or set of resources. Clients must treat these values as opaque and passed unmodified back to the server. They may only be valid for a particular resource or set of resources.\n\nPopulated by the system. Read-only. Value must be treated as opaque by clients and . More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency","type":"string"},"selfLink":{"description":"Deprecated: selfLink is a legacy read-only field that is no longer populated by the system.","type":"string"},"uid":{"description":"UID is the unique in time and space value for this object. It is typically generated by the server on successful creation of a resource and is not allowed to change on PUT operations.\n\nPopulated by the system. Read-only. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names#uids","type":"string"}}},"io.k8s.apimachinery.pkg.apis.meta.v1.OwnerReference":{"description":"OwnerReference contains enough information to let you identify an owning object. An owning object must be in the same namespace as the dependent, or be cluster-scoped, so there is no namespace field.","type":"object","required":["apiVersion","kind","name","uid"],"properties":{"apiVersion":{"description":"API version of the referent.","type":"string","default":""},"blockOwnerDeletion":{"description":"If true, AND if the owner has the \"foregroundDeletion\" finalizer, then the owner cannot be deleted from the key-value store until this reference is removed. See https://kubernetes.io/docs/concepts/architecture/garbage-collection/#foreground-deletion for how the garbage collector interacts with this field and enforces the foreground deletion. Defaults to false. To set this field, a user needs \"delete\" permission of the owner, otherwise 422 (Unprocessable Entity) will be returned.","type":"boolean"},"controller":{"description":"If true, this reference points to the managing controller.","type":"boolean"},"kind":{"description":"Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds","type":"string","default":""},"name":{"description":"Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names#names","type":"string","default":""},"uid":{"description":"UID of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names#uids","type":"string","default":""}},"x-kubernetes-map-type":"atomic"},"io.k8s.apimachinery.pkg.apis.meta.v1.Patch":{"description":"Patch is provided to give a concrete name and type to the Kubernetes PATCH request body.","type":"object"},"io.k8s.apimachinery.pkg.apis.meta.v1.Preconditions":{"description":"Preconditions must be fulfilled before an operation (update, delete, etc.) is carried out.","type":"object","properties":{"resourceVersion":{"description":"Specifies the target ResourceVersion","type":"string"},"uid":{"description":"Specifies the target UID.","type":"string"}}},"io.k8s.apimachinery.pkg.apis.meta.v1.Status":{"description":"Status is a return value for calls that don't return other objects.","type":"object","properties":{"apiVersion":{"description":"APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources","type":"string"},"code":{"description":"Suggested HTTP return code for this status, 0 if not set.","type":"integer","format":"int32"},"details":{"description":"Extended data associated with the reason.  Each reason may define its own extended details. This field is optional and the data returned is not guaranteed to conform to any schema except that defined by the reason type.","allOf":[{"$ref":"#/components/schemas/io.k8s.apimachinery.pkg.apis.meta.v1.StatusDetails"}]},"kind":{"description":"Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds","type":"string"},"message":{"description":"A human-readable description of the status of this operation.","type":"string"},"metadata":{"description":"Standard list metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds","default":{},"allOf":[{"$ref":"#/components/schemas/io.k8s.apimachinery.pkg.apis.meta.v1.ListMeta"}]},"reason":{"description":"A machine-readable description of why this operation is in the \"Failure\" status. If this value is empty there is no information available. A Reason clarifies an HTTP status code but does not override it.","type":"string"},"status":{"description":"Status of the operation. One of: \"Success\" or \"Failure\". More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#spec-and-status","type":"string"}}},"io.k8s.apimachinery.pkg.apis.meta.v1.StatusCause":{"description":"StatusCause provides more information about an api.Status failure, including cases when multiple errors are encountered.","type":"object","properties":{"field":{"description":"The field of the resource that has caused this error, as named by its JSON serialization. May include dot and postfix notation for nested attributes. Arrays are zero-indexed.  Fields may appear more than once in an array of causes due to fields having multiple errors. Optional.\n\nExamples:\n  \"name\" - the field \"name\" on the current resource\n  \"items[0].name\" - the field \"name\" on the first array entry in \"items\"","type":"string"},"message":{"description":"A human-readable description of the cause of the error.  This field may be presented as-is to a reader.","type":"string"},"reason":{"description":"A machine-readable description of the cause of the error. If this value is empty there is no information available.","type":"string"}}},"io.k8s.apimachinery.pkg.apis.meta.v1.StatusDetails":{"description":"StatusDetails is a set of additional properties that MAY be set by the server to provide additional information about a response. The Reason field of a Status object defines what attributes will be set. Clients must ignore fields that do not match the defined type of each attribute, and should assume that any attribute may be empty, invalid, or under defined.","type":"object","properties":{"causes":{"description":"The Causes array includes more details associated with the StatusReason failure. Not all StatusReasons may provide detailed causes.","type":"array","items":{"default":{},"allOf":[{"$ref":"#/components/schemas/io.k8s.apimachinery.pkg.apis.meta.v1.StatusCause"}]}},"group":{"description":"The group attribute of the resource associated with the status StatusReason.","type":"string"},"kind":{"description":"The kind attribute of the resource associated with the status StatusReason. On some operations may differ from the requested resource Kind. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds","type":"string"},"name":{"description":"The name attribute of the resource associated with the status StatusReason (when there is a single name which can be described).","type":"string"},"retryAfterSeconds":{"description":"If specified, the time in seconds before the operation should be retried. Some errors may indicate the client must take an alternate action - for those errors this field may indicate how long to wait before taking the alternate action.","type":"integer","format":"int32"},"uid":{"description":"UID of the resource. (when there is a single resource which can be described). More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names#uids","type":"string"}}},"io.k8s.apimachinery.pkg.apis.meta.v1.Time":{"description":"Time is a wrapper around time.Time which supports correct marshaling to YAML and JSON.  Wrappers are provided for many of the factory methods that the time package offers.","type":"string","format":"date-time"}}}}